[
  {
    "input_text": "One of the essential constructions in the proof of the Banach-Tarski paradox is the use of the free group to \u201cduplicate\u201d the ball. We will see that the free group generated by two elements can be easily divided into parts, such that they can be shifted to create two copies of itself. This is in essence what we wil eventually be doing with the unit ball as well. So what is the free group?",
    "input_data": {
      "input_text": "One of the essential constructions in the proof of the Banach-Tarski paradox is the use of the free group to \u201cduplicate\u201d the ball. We will see that the free group generated by two elements can be easily divided into parts, such that they can be shifted to create two copies of itself. This is in essence what we wil eventually be doing with the unit ball as well. So what is the free group?",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "freddie-pluto-spring-friend.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 4,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7699999,
        "text_offset": 7,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 11,
        "word_length": 10,
        "text": " essential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8899999,
        "text_offset": 21,
        "word_length": 10,
        "text": " construct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9699999,
        "text_offset": 31,
        "word_length": 4,
        "text": "ions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 35,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11699999,
        "text_offset": 42,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 48,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 51,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 55,
        "word_length": 4,
        "text": " Man",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 59,
        "word_length": 4,
        "text": "acht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 63,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 66,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30399998,
        "text_offset": 68,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 76,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 79,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 83,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 87,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 90,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 94,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 99,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 105,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 108,
        "word_length": 10,
        "text": " duplicate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55399999,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57400000,
        "text_offset": 122,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60499999,
        "text_offset": 127,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 128,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 131,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67199997,
        "text_offset": 136,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68299999,
        "text_offset": 140,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69399998,
        "text_offset": 145,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70799999,
        "text_offset": 149,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72399997,
        "text_offset": 154,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74399998,
        "text_offset": 160,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77999997,
        "text_offset": 170,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79399998,
        "text_offset": 173,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81599998,
        "text_offset": 177,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88799996,
        "text_offset": 186,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91399998,
        "text_offset": 190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93999996,
        "text_offset": 193,
        "word_length": 7,
        "text": " easily",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96700000,
        "text_offset": 200,
        "word_length": 8,
        "text": " divided",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99599995,
        "text_offset": 208,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 213,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107599997,
        "text_offset": 219,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599998,
        "text_offset": 224,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 229,
        "word_length": 5,
        "text": " they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115799994,
        "text_offset": 234,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117199997,
        "text_offset": 238,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119599995,
        "text_offset": 241,
        "word_length": 8,
        "text": " shifted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122399997,
        "text_offset": 249,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124799995,
        "text_offset": 252,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799998,
        "text_offset": 259,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129199995,
        "text_offset": 263,
        "word_length": 7,
        "text": " copies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133199996,
        "text_offset": 270,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135799994,
        "text_offset": 273,
        "word_length": 7,
        "text": " itself",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139599995,
        "text_offset": 280,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144099998,
        "text_offset": 281,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145699996,
        "text_offset": 286,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147699995,
        "text_offset": 289,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150399999,
        "text_offset": 292,
        "word_length": 8,
        "text": " essence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 151999998,
        "text_offset": 300,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153999996,
        "text_offset": 305,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155799994,
        "text_offset": 308,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158399996,
        "text_offset": 313,
        "word_length": 11,
        "text": " eventually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 162799997,
        "text_offset": 324,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165199995,
        "text_offset": 327,
        "word_length": 6,
        "text": " doing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168399991,
        "text_offset": 333,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170399990,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600002,
        "text_offset": 342,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174599990,
        "text_offset": 347,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176800003,
        "text_offset": 352,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179200000,
        "text_offset": 355,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181999998,
        "text_offset": 360,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 361,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 364,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 369,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 372,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 376,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 381,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 387,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " One of the essential constructions in the proof of the Manachtarski paradox is the use of the free group to duplicate the ball. We will see that the free group generated by two elements can be easily divided into parts such that they can be shifted to create two copies of itself. This is in essence what we will eventually be doing with the unit ball as well. So what is the free group?",
    "final_audio": "freddie-pluto-spring-friend.mp3"
  },
  {
    "input_text": "Let's look at a definition. The free group f two generated by two elements sigma and tau is the group consisting of all finite products of sigma, tau and their inverses. The identity in this group is the empty product.",
    "input_data": {
      "input_text": "Let's look at a definition. The free group f two generated by two elements sigma and tau is the group consisting of all finite products of sigma, tau and their inverses. The identity in this group is the empty product.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vegan-ack-red-burger.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6499999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9599999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 14,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 16,
        "word_length": 11,
        "text": " definition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 27,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21800000,
        "text_offset": 28,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 32,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999998,
        "text_offset": 37,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 43,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 45,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34599999,
        "text_offset": 46,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39799998,
        "text_offset": 56,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799998,
        "text_offset": 59,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44499998,
        "text_offset": 63,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 72,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 78,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52099997,
        "text_offset": 82,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60199999,
        "text_offset": 86,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 89,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62199997,
        "text_offset": 93,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63799998,
        "text_offset": 99,
        "word_length": 11,
        "text": " consisting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 110,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69099998,
        "text_offset": 113,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71499998,
        "text_offset": 117,
        "word_length": 7,
        "text": " finite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74199998,
        "text_offset": 124,
        "word_length": 9,
        "text": " products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78799998,
        "text_offset": 133,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80599999,
        "text_offset": 136,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84599995,
        "text_offset": 142,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86599998,
        "text_offset": 143,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89299998,
        "text_offset": 147,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90299997,
        "text_offset": 148,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91300001,
        "text_offset": 152,
        "word_length": 6,
        "text": " their",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92799997,
        "text_offset": 158,
        "word_length": 7,
        "text": " invers",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97899999,
        "text_offset": 165,
        "word_length": 2,
        "text": "es",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 167,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 168,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 172,
        "word_length": 9,
        "text": " identity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 181,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 184,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 189,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 195,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 198,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 202,
        "word_length": 6,
        "text": " empty",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 208,
        "word_length": 8,
        "text": " product",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 216,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at a definition. The free group F2 generated by two elements sigma and tau is the group consisting of all finite products of sigma, tau, and their inverses. The identity in this group is the empty product.",
    "final_audio": "vegan-ack-red-burger.mp3"
  },
  {
    "input_text": "These are some examples of elements.",
    "input_data": {
      "input_text": "These are some examples of elements.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "bakerloo-twelve-sixteen-salami.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2500000,
        "text_offset": 0,
        "word_length": 6,
        "text": " These",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4499999,
        "text_offset": 6,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 10,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 15,
        "word_length": 9,
        "text": " examples",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 24,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 27,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " These are some examples of elements.",
    "final_audio": "bakerloo-twelve-sixteen-salami.mp3"
  },
  {
    "input_text": "One way to look at this group is to consider it as a directed tree. At the root of the tree, we have the identity element e. We can then go further down the tree by multiplying on the right with sigma, tau, sigma inverse or tau inverse.",
    "input_data": {
      "input_text": "One way to look at this group is to consider it as a directed tree. At the root of the tree, we have the identity element e. We can then go further down the tree by multiplying on the right with sigma, tau, sigma inverse or tau inverse.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "orange-nebraska-leopard-video.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13399999,
        "text_offset": 0,
        "word_length": 4,
        "text": " One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 4,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19399999,
        "text_offset": 16,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20299999,
        "text_offset": 19,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 24,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 30,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 33,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28499999,
        "text_offset": 36,
        "word_length": 9,
        "text": " consider",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999998,
        "text_offset": 45,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33599998,
        "text_offset": 48,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36599999,
        "text_offset": 51,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 53,
        "word_length": 9,
        "text": " directed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 62,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 67,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 68,
        "word_length": 3,
        "text": " At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 71,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 75,
        "word_length": 5,
        "text": " root",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56399998,
        "text_offset": 80,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57699997,
        "text_offset": 83,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59599997,
        "text_offset": 87,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62499997,
        "text_offset": 92,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63499999,
        "text_offset": 93,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 96,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65799999,
        "text_offset": 101,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67099997,
        "text_offset": 105,
        "word_length": 9,
        "text": " identity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72099997,
        "text_offset": 114,
        "word_length": 8,
        "text": " element",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999999,
        "text_offset": 122,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80199997,
        "text_offset": 124,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 125,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 128,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 132,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 137,
        "word_length": 3,
        "text": " go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 140,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 148,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 153,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 157,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 162,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 165,
        "word_length": 12,
        "text": " multiplying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 177,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 180,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 184,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 190,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 195,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 201,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 202,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 206,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 207,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 213,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 221,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 224,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 228,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 236,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " One way to look at this group is to consider it as a directed tree. At the root of the tree, we have the identity element E. We can then go further down the tree by multiplying on the right with sigma, tau, sigma inverse or tau inverse.",
    "final_audio": "orange-nebraska-leopard-video.mp3"
  },
  {
    "input_text": "Each step down the tree is a multiplication on the right by some element of F2. Note that we can't show the whole tree, since it is infinitely big. We only show the progression of the tree for elements starting with sigma, then starting with sigma tau. You should imagine the tree continuing infinitely for all the other branches as well.",
    "input_data": {
      "input_text": "Each step down the tree is a multiplication on the right by some element of F2. Note that we can't show the whole tree, since it is infinitely big. We only show the progression of the tree for elements starting with sigma, then starting with sigma tau. You should imagine the tree continuing infinitely for all the other branches as well.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "angel-south-pip-delaware.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6199999,
        "text_offset": 5,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8400000,
        "text_offset": 10,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10899999,
        "text_offset": 19,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13799999,
        "text_offset": 24,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 27,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 29,
        "word_length": 15,
        "text": " multiplication",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 44,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 47,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 51,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 57,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399998,
        "text_offset": 60,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 65,
        "word_length": 8,
        "text": " element",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32199999,
        "text_offset": 73,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33299999,
        "text_offset": 76,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 78,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 80,
        "word_length": 5,
        "text": " Note",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 85,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49900000,
        "text_offset": 90,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 93,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 97,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53299999,
        "text_offset": 99,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54699997,
        "text_offset": 104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55899999,
        "text_offset": 108,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57399997,
        "text_offset": 114,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60199997,
        "text_offset": 119,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62199997,
        "text_offset": 125,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63799998,
        "text_offset": 128,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 130,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70799999,
        "text_offset": 141,
        "word_length": 4,
        "text": " big",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74799997,
        "text_offset": 145,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 146,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 149,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 154,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87600002,
        "text_offset": 159,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88400001,
        "text_offset": 163,
        "word_length": 12,
        "text": " progression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92999997,
        "text_offset": 175,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94299998,
        "text_offset": 178,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95199999,
        "text_offset": 182,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97399997,
        "text_offset": 187,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 191,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103399996,
        "text_offset": 200,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106599998,
        "text_offset": 209,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110000000,
        "text_offset": 214,
        "word_length": 4,
        "text": " sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599998,
        "text_offset": 218,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112699999,
        "text_offset": 219,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112899994,
        "text_offset": 220,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114499998,
        "text_offset": 225,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116199994,
        "text_offset": 234,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116799998,
        "text_offset": 239,
        "word_length": 4,
        "text": " sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116799998,
        "text_offset": 243,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121499996,
        "text_offset": 244,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799993,
        "text_offset": 248,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 249,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 253,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 260,
        "word_length": 8,
        "text": " imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 272,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 277,
        "word_length": 11,
        "text": " continuing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 288,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 299,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 303,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 307,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 311,
        "word_length": 6,
        "text": " other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 317,
        "word_length": 9,
        "text": " branches",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 326,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 329,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 334,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Each step down the tree is a multiplication on the right by some element of F2. Note that we can't show the whole tree since it's infinitely big. We only show the progression of the tree for elements starting with suma, then starting with suma tau. You should imagine the tree continuing infinitely for all the other branches as well.",
    "final_audio": "angel-south-pip-delaware.mp3"
  },
  {
    "input_text": "We can represent the same thing symbolically as follows. F2 can be written as",
    "input_data": {
      "input_text": "We can represent the same thing symbolically as follows. F2 can be written as",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "triple-kentucky-mobile-maine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6499999,
        "text_offset": 3,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 7,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9099999,
        "text_offset": 17,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 21,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12399999,
        "text_offset": 26,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14699999,
        "text_offset": 32,
        "word_length": 7,
        "text": " symbol",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 39,
        "word_length": 6,
        "text": "ically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 48,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 57,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 59,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 60,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 64,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 67,
        "word_length": 8,
        "text": " written",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 75,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 78,
        "word_length": 3,
        "text": "...",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We can represent the same thing symbolically as follows. F2 can be written as...",
    "final_audio": "triple-kentucky-mobile-maine.mp3"
  },
  {
    "input_text": "the disjoint union of the empty word, all the elements starting with sigma, the elements starting with sigma inverse, the elements starting with tau, and the elements starting with tau inverse. The notation W of sigma means: the elements starting with sigma.",
    "input_data": {
      "input_text": "the disjoint union of the empty word, all the elements starting with sigma, the elements starting with sigma inverse, the elements starting with tau, and the elements starting with tau inverse. The notation W of sigma means: the elements starting with sigma.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "uranus-early-zulu-december.mp3",
    "word_boundaries": [
      {
        "audio_offset": 10799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 4,
        "word_length": 4,
        "text": " dis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 8,
        "word_length": 5,
        "text": "joint",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 13,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18499999,
        "text_offset": 19,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 22,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21399999,
        "text_offset": 26,
        "word_length": 6,
        "text": " empty",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 32,
        "word_length": 5,
        "text": " word",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899998,
        "text_offset": 37,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 38,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 42,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32899998,
        "text_offset": 46,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35699999,
        "text_offset": 55,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38499999,
        "text_offset": 64,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39499999,
        "text_offset": 69,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44499998,
        "text_offset": 75,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 76,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49299998,
        "text_offset": 80,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 89,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55099999,
        "text_offset": 98,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57500000,
        "text_offset": 103,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 109,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62999997,
        "text_offset": 117,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64999997,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66999998,
        "text_offset": 122,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69599997,
        "text_offset": 131,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 140,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72999997,
        "text_offset": 145,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77099997,
        "text_offset": 149,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80199995,
        "text_offset": 150,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80299997,
        "text_offset": 154,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84000000,
        "text_offset": 158,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 167,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90199999,
        "text_offset": 176,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90799999,
        "text_offset": 181,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94399995,
        "text_offset": 185,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97799997,
        "text_offset": 193,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 194,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 198,
        "word_length": 9,
        "text": " notation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 207,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 209,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 212,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 218,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 224,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 228,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 237,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 246,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 251,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 257,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The disjoint union of the empty word, all the elements starting with sigma, the elements starting with sigma inverse, the elements starting with tau, and the elements starting with tau inverse. The notation W of sigma means the elements starting with sigma.",
    "final_audio": "uranus-early-zulu-december.mp3"
  },
  {
    "input_text": "Now let's take a closer look at the branch that has elements starting with sigma.",
    "input_data": {
      "input_text": "Now let's take a closer look at the branch that has elements starting with sigma.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "south-network-nitrogen-bakerloo.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 4,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 8,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 10,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 15,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 17,
        "word_length": 7,
        "text": " closer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 24,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 29,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 32,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 36,
        "word_length": 7,
        "text": " branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 43,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 48,
        "word_length": 4,
        "text": " has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27299998,
        "text_offset": 52,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32399998,
        "text_offset": 61,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 70,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36799999,
        "text_offset": 75,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38299999,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now let's take a closer look at the branch that has elements starting with Sigma.",
    "final_audio": "south-network-nitrogen-bakerloo.mp3"
  },
  {
    "input_text": "Notice that when, for all these elements, we multiply on the left by sigma inverse, we get the whole tree again!",
    "input_data": {
      "input_text": "Notice that when, for all these elements, we multiply on the left by sigma inverse, we get the whole tree again!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "november-zebra-solar-kilo.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8299999,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 7,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 12,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23199999,
        "text_offset": 17,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 21,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26799999,
        "text_offset": 25,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 31,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 40,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 43,
        "word_length": 9,
        "text": " multiply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 52,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41999998,
        "text_offset": 55,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43699998,
        "text_offset": 59,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 64,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48799998,
        "text_offset": 67,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50899999,
        "text_offset": 73,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "text_offset": 81,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56299998,
        "text_offset": 82,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57099997,
        "text_offset": 85,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799997,
        "text_offset": 89,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 93,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59300000,
        "text_offset": 99,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59600000,
        "text_offset": 104,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 110,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice that when for all these elements we multiply on the left by sigma inverse, we get the whole tree again.",
    "final_audio": "november-zebra-solar-kilo.mp3"
  },
  {
    "input_text": "Or rather, we get almost the whole tree. The part of the tree that shows elements starting with sigma inverse is not there!",
    "input_data": {
      "input_text": "Or rather, we get almost the whole tree. The part of the tree that shows elements starting with sigma inverse is not there!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "happy-alpha-uniform-stream.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4799999,
        "text_offset": 3,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 11,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 14,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 18,
        "word_length": 7,
        "text": " almost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 29,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 35,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999998,
        "text_offset": 40,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899998,
        "text_offset": 41,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799998,
        "text_offset": 45,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 50,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33099999,
        "text_offset": 53,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 57,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34499999,
        "text_offset": 62,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599998,
        "text_offset": 67,
        "word_length": 6,
        "text": " shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39099999,
        "text_offset": 73,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 82,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 91,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 96,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 102,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 110,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 117,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 123,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " or rather, we get almost the whole tree. The part of the tree that shows elements starting with sigma inverse is not there.",
    "final_audio": "happy-alpha-uniform-stream.mp3"
  },
  {
    "input_text": "One of the essential constructions in the proof of the Banach-Tarski paradox is the use of the free group to \u201cduplicate\u201d the ball. We will see that the free group generated by two elements can be easily divided into parts, such that they can be shifted to create two copies of itself. This is in essence what we wil eventually be doing with the unit ball as well. So what is the free group?",
    "input_data": {
      "input_text": "One of the essential constructions in the proof of the Banach-Tarski paradox is the use of the free group to \u201cduplicate\u201d the ball. We will see that the free group generated by two elements can be easily divided into parts, such that they can be shifted to create two copies of itself. This is in essence what we wil eventually be doing with the unit ball as well. So what is the free group?",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "freddie-pluto-spring-friend.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 4,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7699999,
        "text_offset": 7,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 11,
        "word_length": 10,
        "text": " essential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8899999,
        "text_offset": 21,
        "word_length": 10,
        "text": " construct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9699999,
        "text_offset": 31,
        "word_length": 4,
        "text": "ions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 35,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11699999,
        "text_offset": 42,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 48,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 51,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 55,
        "word_length": 4,
        "text": " Man",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 59,
        "word_length": 4,
        "text": "acht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 63,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 66,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30399998,
        "text_offset": 68,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 76,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 79,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 83,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 87,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 90,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 94,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 99,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 105,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 108,
        "word_length": 10,
        "text": " duplicate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55399999,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57400000,
        "text_offset": 122,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60499999,
        "text_offset": 127,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 128,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 131,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67199997,
        "text_offset": 136,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68299999,
        "text_offset": 140,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69399998,
        "text_offset": 145,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70799999,
        "text_offset": 149,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72399997,
        "text_offset": 154,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74399998,
        "text_offset": 160,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77999997,
        "text_offset": 170,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79399998,
        "text_offset": 173,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81599998,
        "text_offset": 177,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88799996,
        "text_offset": 186,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91399998,
        "text_offset": 190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93999996,
        "text_offset": 193,
        "word_length": 7,
        "text": " easily",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96700000,
        "text_offset": 200,
        "word_length": 8,
        "text": " divided",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99599995,
        "text_offset": 208,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 213,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107599997,
        "text_offset": 219,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599998,
        "text_offset": 224,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 229,
        "word_length": 5,
        "text": " they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115799994,
        "text_offset": 234,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117199997,
        "text_offset": 238,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119599995,
        "text_offset": 241,
        "word_length": 8,
        "text": " shifted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122399997,
        "text_offset": 249,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124799995,
        "text_offset": 252,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799998,
        "text_offset": 259,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129199995,
        "text_offset": 263,
        "word_length": 7,
        "text": " copies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133199996,
        "text_offset": 270,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135799994,
        "text_offset": 273,
        "word_length": 7,
        "text": " itself",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139599995,
        "text_offset": 280,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144099998,
        "text_offset": 281,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145699996,
        "text_offset": 286,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147699995,
        "text_offset": 289,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150399999,
        "text_offset": 292,
        "word_length": 8,
        "text": " essence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 151999998,
        "text_offset": 300,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153999996,
        "text_offset": 305,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155799994,
        "text_offset": 308,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158399996,
        "text_offset": 313,
        "word_length": 11,
        "text": " eventually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 162799997,
        "text_offset": 324,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165199995,
        "text_offset": 327,
        "word_length": 6,
        "text": " doing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168399991,
        "text_offset": 333,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170399990,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600002,
        "text_offset": 342,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174599990,
        "text_offset": 347,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176800003,
        "text_offset": 352,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179200000,
        "text_offset": 355,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181999998,
        "text_offset": 360,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 361,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 364,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 369,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 372,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 376,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 381,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 387,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " One of the essential constructions in the proof of the Manachtarski paradox is the use of the free group to duplicate the ball. We will see that the free group generated by two elements can be easily divided into parts such that they can be shifted to create two copies of itself. This is in essence what we will eventually be doing with the unit ball as well. So what is the free group?",
    "final_audio": "freddie-pluto-spring-friend.mp3"
  },
  {
    "input_text": "Let's look at a definition. The free group f two generated by two elements sigma and tau is the group consisting of all finite products of sigma, tau and their inverses. The identity in this group is the empty product.",
    "input_data": {
      "input_text": "Let's look at a definition. The free group f two generated by two elements sigma and tau is the group consisting of all finite products of sigma, tau and their inverses. The identity in this group is the empty product.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vegan-ack-red-burger.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6499999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9599999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 14,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 16,
        "word_length": 11,
        "text": " definition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 27,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21800000,
        "text_offset": 28,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 32,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999998,
        "text_offset": 37,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 43,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 45,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34599999,
        "text_offset": 46,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39799998,
        "text_offset": 56,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799998,
        "text_offset": 59,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44499998,
        "text_offset": 63,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 72,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 78,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52099997,
        "text_offset": 82,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60199999,
        "text_offset": 86,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 89,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62199997,
        "text_offset": 93,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63799998,
        "text_offset": 99,
        "word_length": 11,
        "text": " consisting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 110,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69099998,
        "text_offset": 113,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71499998,
        "text_offset": 117,
        "word_length": 7,
        "text": " finite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74199998,
        "text_offset": 124,
        "word_length": 9,
        "text": " products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78799998,
        "text_offset": 133,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80599999,
        "text_offset": 136,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84599995,
        "text_offset": 142,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86599998,
        "text_offset": 143,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89299998,
        "text_offset": 147,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90299997,
        "text_offset": 148,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91300001,
        "text_offset": 152,
        "word_length": 6,
        "text": " their",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92799997,
        "text_offset": 158,
        "word_length": 7,
        "text": " invers",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97899999,
        "text_offset": 165,
        "word_length": 2,
        "text": "es",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 167,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 168,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 172,
        "word_length": 9,
        "text": " identity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 181,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 184,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 189,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 195,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 198,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 202,
        "word_length": 6,
        "text": " empty",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 208,
        "word_length": 8,
        "text": " product",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 216,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at a definition. The free group F2 generated by two elements sigma and tau is the group consisting of all finite products of sigma, tau, and their inverses. The identity in this group is the empty product.",
    "final_audio": "vegan-ack-red-burger.mp3"
  },
  {
    "input_text": "These are some examples of elements.",
    "input_data": {
      "input_text": "These are some examples of elements.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "bakerloo-twelve-sixteen-salami.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2500000,
        "text_offset": 0,
        "word_length": 6,
        "text": " These",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4499999,
        "text_offset": 6,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 10,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 15,
        "word_length": 9,
        "text": " examples",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 24,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 27,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " These are some examples of elements.",
    "final_audio": "bakerloo-twelve-sixteen-salami.mp3"
  },
  {
    "input_text": "One way to look at this group is to consider it as a directed tree. At the root of the tree, we have the identity element e. We can then go further down the tree by multiplying on the right with sigma, tau, sigma inverse or tau inverse.",
    "input_data": {
      "input_text": "One way to look at this group is to consider it as a directed tree. At the root of the tree, we have the identity element e. We can then go further down the tree by multiplying on the right with sigma, tau, sigma inverse or tau inverse.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "orange-nebraska-leopard-video.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13399999,
        "text_offset": 0,
        "word_length": 4,
        "text": " One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 4,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19399999,
        "text_offset": 16,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20299999,
        "text_offset": 19,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 24,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 30,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 33,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28499999,
        "text_offset": 36,
        "word_length": 9,
        "text": " consider",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999998,
        "text_offset": 45,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33599998,
        "text_offset": 48,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36599999,
        "text_offset": 51,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 53,
        "word_length": 9,
        "text": " directed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 62,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 67,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 68,
        "word_length": 3,
        "text": " At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 71,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 75,
        "word_length": 5,
        "text": " root",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56399998,
        "text_offset": 80,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57699997,
        "text_offset": 83,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59599997,
        "text_offset": 87,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62499997,
        "text_offset": 92,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63499999,
        "text_offset": 93,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 96,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65799999,
        "text_offset": 101,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67099997,
        "text_offset": 105,
        "word_length": 9,
        "text": " identity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72099997,
        "text_offset": 114,
        "word_length": 8,
        "text": " element",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999999,
        "text_offset": 122,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80199997,
        "text_offset": 124,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 125,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 128,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 132,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 137,
        "word_length": 3,
        "text": " go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 140,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 148,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 153,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 157,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 162,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 165,
        "word_length": 12,
        "text": " multiplying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 177,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 180,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 184,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 190,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 195,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 201,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 202,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 206,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 207,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 213,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 221,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 224,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 228,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 236,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " One way to look at this group is to consider it as a directed tree. At the root of the tree, we have the identity element E. We can then go further down the tree by multiplying on the right with sigma, tau, sigma inverse or tau inverse.",
    "final_audio": "orange-nebraska-leopard-video.mp3"
  },
  {
    "input_text": "Each step down the tree is a multiplication on the right by some element of F2. Note that we can't show the whole tree, since it is infinitely big. We only show the progression of the tree for elements starting with sigma, then starting with sigma tau. You should imagine the tree continuing infinitely for all the other branches as well.",
    "input_data": {
      "input_text": "Each step down the tree is a multiplication on the right by some element of F2. Note that we can't show the whole tree, since it is infinitely big. We only show the progression of the tree for elements starting with sigma, then starting with sigma tau. You should imagine the tree continuing infinitely for all the other branches as well.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "angel-south-pip-delaware.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6199999,
        "text_offset": 5,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8400000,
        "text_offset": 10,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10899999,
        "text_offset": 19,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13799999,
        "text_offset": 24,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 27,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 29,
        "word_length": 15,
        "text": " multiplication",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 44,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 47,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 51,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 57,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399998,
        "text_offset": 60,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 65,
        "word_length": 8,
        "text": " element",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32199999,
        "text_offset": 73,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33299999,
        "text_offset": 76,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 78,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 80,
        "word_length": 5,
        "text": " Note",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 85,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49900000,
        "text_offset": 90,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 93,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 97,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53299999,
        "text_offset": 99,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54699997,
        "text_offset": 104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55899999,
        "text_offset": 108,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57399997,
        "text_offset": 114,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60199997,
        "text_offset": 119,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62199997,
        "text_offset": 125,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63799998,
        "text_offset": 128,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 130,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70799999,
        "text_offset": 141,
        "word_length": 4,
        "text": " big",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74799997,
        "text_offset": 145,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 146,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 149,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 154,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87600002,
        "text_offset": 159,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88400001,
        "text_offset": 163,
        "word_length": 12,
        "text": " progression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92999997,
        "text_offset": 175,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94299998,
        "text_offset": 178,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95199999,
        "text_offset": 182,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97399997,
        "text_offset": 187,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 191,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103399996,
        "text_offset": 200,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106599998,
        "text_offset": 209,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110000000,
        "text_offset": 214,
        "word_length": 4,
        "text": " sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599998,
        "text_offset": 218,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112699999,
        "text_offset": 219,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112899994,
        "text_offset": 220,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114499998,
        "text_offset": 225,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116199994,
        "text_offset": 234,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116799998,
        "text_offset": 239,
        "word_length": 4,
        "text": " sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116799998,
        "text_offset": 243,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121499996,
        "text_offset": 244,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799993,
        "text_offset": 248,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 249,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 253,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 260,
        "word_length": 8,
        "text": " imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 272,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 277,
        "word_length": 11,
        "text": " continuing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 288,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 299,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 303,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 307,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 311,
        "word_length": 6,
        "text": " other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 317,
        "word_length": 9,
        "text": " branches",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 326,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 329,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 334,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Each step down the tree is a multiplication on the right by some element of F2. Note that we can't show the whole tree since it's infinitely big. We only show the progression of the tree for elements starting with suma, then starting with suma tau. You should imagine the tree continuing infinitely for all the other branches as well.",
    "final_audio": "angel-south-pip-delaware.mp3"
  },
  {
    "input_text": "We can represent the same thing symbolically as follows. F2 can be written as",
    "input_data": {
      "input_text": "We can represent the same thing symbolically as follows. F2 can be written as",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "triple-kentucky-mobile-maine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6499999,
        "text_offset": 3,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 7,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9099999,
        "text_offset": 17,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 21,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12399999,
        "text_offset": 26,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14699999,
        "text_offset": 32,
        "word_length": 7,
        "text": " symbol",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 39,
        "word_length": 6,
        "text": "ically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 48,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 57,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 59,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 60,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 64,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 67,
        "word_length": 8,
        "text": " written",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 75,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 78,
        "word_length": 3,
        "text": "...",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We can represent the same thing symbolically as follows. F2 can be written as...",
    "final_audio": "triple-kentucky-mobile-maine.mp3"
  },
  {
    "input_text": "the disjoint union of the empty word, all the elements starting with sigma, the elements starting with sigma inverse, the elements starting with tau, and the elements starting with tau inverse. The notation W of sigma means: the elements starting with sigma.",
    "input_data": {
      "input_text": "the disjoint union of the empty word, all the elements starting with sigma, the elements starting with sigma inverse, the elements starting with tau, and the elements starting with tau inverse. The notation W of sigma means: the elements starting with sigma.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "uranus-early-zulu-december.mp3",
    "word_boundaries": [
      {
        "audio_offset": 10799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 4,
        "word_length": 4,
        "text": " dis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 8,
        "word_length": 5,
        "text": "joint",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 13,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18499999,
        "text_offset": 19,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 22,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21399999,
        "text_offset": 26,
        "word_length": 6,
        "text": " empty",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 32,
        "word_length": 5,
        "text": " word",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899998,
        "text_offset": 37,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 38,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 42,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32899998,
        "text_offset": 46,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35699999,
        "text_offset": 55,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38499999,
        "text_offset": 64,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39499999,
        "text_offset": 69,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44499998,
        "text_offset": 75,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 76,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49299998,
        "text_offset": 80,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 89,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55099999,
        "text_offset": 98,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57500000,
        "text_offset": 103,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 109,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62999997,
        "text_offset": 117,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64999997,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66999998,
        "text_offset": 122,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69599997,
        "text_offset": 131,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 140,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72999997,
        "text_offset": 145,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77099997,
        "text_offset": 149,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80199995,
        "text_offset": 150,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80299997,
        "text_offset": 154,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84000000,
        "text_offset": 158,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 167,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90199999,
        "text_offset": 176,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90799999,
        "text_offset": 181,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94399995,
        "text_offset": 185,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97799997,
        "text_offset": 193,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 194,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 198,
        "word_length": 9,
        "text": " notation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 207,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 209,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 212,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 218,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 224,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 228,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 237,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 246,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 251,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 257,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The disjoint union of the empty word, all the elements starting with sigma, the elements starting with sigma inverse, the elements starting with tau, and the elements starting with tau inverse. The notation W of sigma means the elements starting with sigma.",
    "final_audio": "uranus-early-zulu-december.mp3"
  },
  {
    "input_text": "Now let's take a closer look at the branch that has elements starting with sigma.",
    "input_data": {
      "input_text": "Now let's take a closer look at the branch that has elements starting with sigma.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "south-network-nitrogen-bakerloo.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 4,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 8,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 10,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 15,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 17,
        "word_length": 7,
        "text": " closer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 24,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 29,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 32,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 36,
        "word_length": 7,
        "text": " branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 43,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 48,
        "word_length": 4,
        "text": " has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27299998,
        "text_offset": 52,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32399998,
        "text_offset": 61,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 70,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36799999,
        "text_offset": 75,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38299999,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now let's take a closer look at the branch that has elements starting with Sigma.",
    "final_audio": "south-network-nitrogen-bakerloo.mp3"
  },
  {
    "input_text": "Notice that when, for all these elements, we multiply on the left by sigma inverse, we get the whole tree again!",
    "input_data": {
      "input_text": "Notice that when, for all these elements, we multiply on the left by sigma inverse, we get the whole tree again!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "november-zebra-solar-kilo.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8299999,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 7,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 12,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23199999,
        "text_offset": 17,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 21,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26799999,
        "text_offset": 25,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 31,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 40,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 43,
        "word_length": 9,
        "text": " multiply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 52,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41999998,
        "text_offset": 55,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43699998,
        "text_offset": 59,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 64,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48799998,
        "text_offset": 67,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50899999,
        "text_offset": 73,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "text_offset": 81,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56299998,
        "text_offset": 82,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57099997,
        "text_offset": 85,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799997,
        "text_offset": 89,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 93,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59300000,
        "text_offset": 99,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59600000,
        "text_offset": 104,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 110,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice that when for all these elements we multiply on the left by sigma inverse, we get the whole tree again.",
    "final_audio": "november-zebra-solar-kilo.mp3"
  },
  {
    "input_text": "Or rather, we get almost the whole tree. The part of the tree that shows elements starting with sigma inverse is not there!",
    "input_data": {
      "input_text": "Or rather, we get almost the whole tree. The part of the tree that shows elements starting with sigma inverse is not there!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "happy-alpha-uniform-stream.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4799999,
        "text_offset": 3,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 11,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 14,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 18,
        "word_length": 7,
        "text": " almost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 29,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 35,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999998,
        "text_offset": 40,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899998,
        "text_offset": 41,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799998,
        "text_offset": 45,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 50,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33099999,
        "text_offset": 53,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 57,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34499999,
        "text_offset": 62,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599998,
        "text_offset": 67,
        "word_length": 6,
        "text": " shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39099999,
        "text_offset": 73,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 82,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 91,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 96,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 102,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 110,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 117,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 123,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " or rather, we get almost the whole tree. The part of the tree that shows elements starting with sigma inverse is not there.",
    "final_audio": "happy-alpha-uniform-stream.mp3"
  },
  {
    "input_text": "So what we can conclude from all the trees is the following.",
    "input_data": {
      "input_text": "So what we can conclude from all the trees is the following.",
      "service": "gtts"
    },
    "original_audio": "harry-south-tennis-winner.mp3",
    "final_audio": "harry-south-tennis-winner.mp3"
  },
  {
    "input_text": "If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
    "input_data": {
      "input_text": "If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
      "service": "gtts"
    },
    "original_audio": "robin-low-tennis-helium.mp3",
    "final_audio": "robin-low-tennis-helium.mp3"
  },
  {
    "input_text": "This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse",
    "input_data": {
      "input_text": "This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse",
      "service": "gtts"
    },
    "original_audio": "hawaii-colorado-king-burger.mp3",
    "final_audio": "hawaii-colorado-king-burger.mp3"
  },
  {
    "input_text": "But the choice for sigma was arbitrary, we could just as well have chosen to looked at the subtree of elements starting with tau.",
    "input_data": {
      "input_text": "But the choice for sigma was arbitrary, we could just as well have chosen to looked at the subtree of elements starting with tau.",
      "service": "gtts"
    },
    "original_audio": "coffee-fillet-avocado-carbon.mp3",
    "final_audio": "coffee-fillet-avocado-carbon.mp3"
  },
  {
    "input_text": "So we also have that F2 is the union of tau inverse W tau and W tau inverse",
    "input_data": {
      "input_text": "So we also have that F2 is the union of tau inverse W tau and W tau inverse",
      "service": "gtts"
    },
    "original_audio": "sink-crazy-pizza-failed.mp3",
    "final_audio": "sink-crazy-pizza-failed.mp3"
  },
  {
    "input_text": "Let's look at the original partition of F2 that we made.",
    "input_data": {
      "input_text": "Let's look at the original partition of F2 that we made.",
      "service": "gtts"
    },
    "original_audio": "florida-sad-purple-undress.mp3",
    "final_audio": "florida-sad-purple-undress.mp3"
  },
  {
    "input_text": "Notice that the parts in the original partition are now disjointly used in the two new partitions that we have found.",
    "input_data": {
      "input_text": "Notice that the parts in the original partition are now disjointly used in the two new partitions that we have found.",
      "service": "gtts"
    },
    "original_audio": "foxtrot-berlin-lemon-butter.mp3",
    "final_audio": "foxtrot-berlin-lemon-butter.mp3"
  },
  {
    "input_text": "So what we have now is called a paradoxical decomposition. We have split the free group F2 into five parts, took four of them and sort of shifted two of those parts to create two copies of F2. This is called a paradoxical decomposition",
    "input_data": {
      "input_text": "So what we have now is called a paradoxical decomposition. We have split the free group F2 into five parts, took four of them and sort of shifted two of those parts to create two copies of F2. This is called a paradoxical decomposition",
      "service": "gtts"
    },
    "original_audio": "mexico-golf-missouri-potato.mp3",
    "final_audio": "mexico-golf-missouri-potato.mp3"
  },
  {
    "input_text": "So what we can conclude from all the trees is the following.",
    "input_data": {
      "input_text": "So what we can conclude from all the trees is the following.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "colorado-orange-michigan-stairway.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4799999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6599999,
        "text_offset": 3,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 11,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 15,
        "word_length": 9,
        "text": " conclude",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15499999,
        "text_offset": 24,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 29,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20999999,
        "text_offset": 37,
        "word_length": 6,
        "text": " trees",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999999,
        "text_offset": 43,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 46,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29999998,
        "text_offset": 50,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 60,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So what we can conclude from all the trees is the following.",
    "final_audio": "colorado-orange-michigan-stairway.mp3"
  },
  {
    "input_text": "If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
    "input_data": {
      "input_text": "If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nevada-florida-mississippi-nebraska.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 6,
        "word_length": 9,
        "text": " multiply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 19,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 28,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30099998,
        "text_offset": 31,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 33,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 34,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 43,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 48,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 54,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 57,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 63,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 71,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53899998,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 78,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59399998,
        "text_offset": 83,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62399997,
        "text_offset": 84,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64299998,
        "text_offset": 87,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 91,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 95,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 98,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 102,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 107,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 113,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 114,
        "word_length": 7,
        "text": " except",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 121,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 125,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 134,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 143,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 148,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 154,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
    "final_audio": "nevada-florida-mississippi-nebraska.mp3"
  },
  {
    "input_text": "This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse",
    "input_data": {
      "input_text": "This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "burger-winter-princess-mobile.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 11,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20499999,
        "text_offset": 18,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22399999,
        "text_offset": 29,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23099999,
        "text_offset": 32,
        "word_length": 7,
        "text": " saying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 39,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299999,
        "text_offset": 44,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399998,
        "text_offset": 46,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29899998,
        "text_offset": 47,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 50,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32399998,
        "text_offset": 54,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 60,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 63,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 69,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 77,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 79,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 85,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57599999,
        "text_offset": 89,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61199998,
        "text_offset": 91,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65099999,
        "text_offset": 97,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68699998,
        "text_offset": 105,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse.",
    "final_audio": "burger-winter-princess-mobile.mp3"
  },
  {
    "input_text": "But the choice for sigma was arbitrary, we could just as well have chosen to looked at the subtree of elements starting with tau.",
    "input_data": {
      "input_text": "But the choice for sigma was arbitrary, we could just as well have chosen to looked at the subtree of elements starting with tau.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mango-stream-network-twenty.mp3",
    "word_boundaries": [
      {
        "audio_offset": 11899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12299999,
        "text_offset": 4,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "text_offset": 8,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 15,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17400000,
        "text_offset": 19,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 25,
        "word_length": 4,
        "text": " was",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25900000,
        "text_offset": 29,
        "word_length": 10,
        "text": " arbitrary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30599999,
        "text_offset": 39,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30999999,
        "text_offset": 40,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 43,
        "word_length": 6,
        "text": " could",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34199999,
        "text_offset": 49,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36699999,
        "text_offset": 54,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38600000,
        "text_offset": 57,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 62,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 67,
        "word_length": 7,
        "text": " chosen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 74,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46299998,
        "text_offset": 77,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999999,
        "text_offset": 82,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 85,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 89,
        "word_length": 4,
        "text": " sub",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 93,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 94,
        "word_length": 1,
        "text": "t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 95,
        "word_length": 3,
        "text": "rie",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 98,
        "word_length": 2,
        "text": "ve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 100,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 109,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 118,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 123,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 125,
        "word_length": 2,
        "text": "OW",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 127,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " But the choice for Sigma was arbitrary. We could just as well have chosen to look at the sub-trieve elements starting with TOW.",
    "final_audio": "mango-stream-network-twenty.mp3"
  },
  {
    "input_text": "So we also have that F2 is the union of tau inverse W tau and W tau inverse",
    "input_data": {
      "input_text": "So we also have that F2 is the union of tau inverse W tau and W tau inverse",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "pizza-single-carbon-ten.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9099999,
        "text_offset": 6,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14899999,
        "text_offset": 16,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 21,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 23,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 24,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 27,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 31,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 37,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30099998,
        "text_offset": 40,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33599998,
        "text_offset": 44,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 52,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 54,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 58,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 62,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 64,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 68,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So we also have that F2 is the union of tau inverse W tau and W tau inverse.",
    "final_audio": "pizza-single-carbon-ten.mp3"
  },
  {
    "input_text": "Let's look at the original partition of F2 that we made.",
    "input_data": {
      "input_text": "Let's look at the original partition of F2 that we made.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mobile-diet-ack-fanta.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2899999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3900000,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5399999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "text_offset": 14,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8400000,
        "text_offset": 18,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 27,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 37,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 40,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 42,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799999,
        "text_offset": 43,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 48,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22099999,
        "text_offset": 51,
        "word_length": 5,
        "text": " made",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at the original partition of F2 that we made.",
    "final_audio": "mobile-diet-ack-fanta.mp3"
  },
  {
    "input_text": "So what we can conclude from all the trees is the following.",
    "input_data": {
      "input_text": "So what we can conclude from all the trees is the following.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "colorado-orange-michigan-stairway.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4799999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6599999,
        "text_offset": 3,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 11,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 15,
        "word_length": 9,
        "text": " conclude",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15499999,
        "text_offset": 24,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 29,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20999999,
        "text_offset": 37,
        "word_length": 6,
        "text": " trees",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999999,
        "text_offset": 43,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 46,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29999998,
        "text_offset": 50,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 60,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So what we can conclude from all the trees is the following.",
    "final_audio": "colorado-orange-michigan-stairway.mp3"
  },
  {
    "input_text": "If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
    "input_data": {
      "input_text": "If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nevada-florida-mississippi-nebraska.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 6,
        "word_length": 9,
        "text": " multiply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 19,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 28,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30099998,
        "text_offset": 31,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 33,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 34,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 43,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 48,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 54,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 57,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 63,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 71,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53899998,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 78,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59399998,
        "text_offset": 83,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62399997,
        "text_offset": 84,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64299998,
        "text_offset": 87,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 91,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 95,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 98,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 102,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 107,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 113,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 114,
        "word_length": 7,
        "text": " except",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 121,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 125,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 134,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 143,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 148,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 154,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
    "final_audio": "nevada-florida-mississippi-nebraska.mp3"
  },
  {
    "input_text": "This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse",
    "input_data": {
      "input_text": "This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "burger-winter-princess-mobile.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 11,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20499999,
        "text_offset": 18,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22399999,
        "text_offset": 29,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23099999,
        "text_offset": 32,
        "word_length": 7,
        "text": " saying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 39,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299999,
        "text_offset": 44,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399998,
        "text_offset": 46,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29899998,
        "text_offset": 47,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 50,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32399998,
        "text_offset": 54,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 60,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 63,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 69,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 77,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 79,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 85,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57599999,
        "text_offset": 89,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61199998,
        "text_offset": 91,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65099999,
        "text_offset": 97,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68699998,
        "text_offset": 105,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse.",
    "final_audio": "burger-winter-princess-mobile.mp3"
  },
  {
    "input_text": "But the choice for sigma was arbitrary, we could just as well have chosen to looked at the subtree of elements starting with tau.",
    "input_data": {
      "input_text": "But the choice for sigma was arbitrary, we could just as well have chosen to looked at the subtree of elements starting with tau.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mango-stream-network-twenty.mp3",
    "word_boundaries": [
      {
        "audio_offset": 11899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12299999,
        "text_offset": 4,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "text_offset": 8,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 15,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17400000,
        "text_offset": 19,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 25,
        "word_length": 4,
        "text": " was",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25900000,
        "text_offset": 29,
        "word_length": 10,
        "text": " arbitrary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30599999,
        "text_offset": 39,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30999999,
        "text_offset": 40,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 43,
        "word_length": 6,
        "text": " could",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34199999,
        "text_offset": 49,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36699999,
        "text_offset": 54,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38600000,
        "text_offset": 57,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 62,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 67,
        "word_length": 7,
        "text": " chosen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 74,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46299998,
        "text_offset": 77,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999999,
        "text_offset": 82,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 85,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 89,
        "word_length": 4,
        "text": " sub",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 93,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 94,
        "word_length": 1,
        "text": "t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 95,
        "word_length": 3,
        "text": "rie",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 98,
        "word_length": 2,
        "text": "ve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 100,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 109,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 118,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 123,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 125,
        "word_length": 2,
        "text": "OW",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 127,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " But the choice for Sigma was arbitrary. We could just as well have chosen to look at the sub-trieve elements starting with TOW.",
    "final_audio": "mango-stream-network-twenty.mp3"
  },
  {
    "input_text": "So we also have that F2 is the union of tau inverse W tau and W tau inverse",
    "input_data": {
      "input_text": "So we also have that F2 is the union of tau inverse W tau and W tau inverse",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "pizza-single-carbon-ten.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9099999,
        "text_offset": 6,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14899999,
        "text_offset": 16,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 21,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 23,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 24,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 27,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 31,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 37,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30099998,
        "text_offset": 40,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33599998,
        "text_offset": 44,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 52,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 54,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 58,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 62,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 64,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 68,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So we also have that F2 is the union of tau inverse W tau and W tau inverse.",
    "final_audio": "pizza-single-carbon-ten.mp3"
  },
  {
    "input_text": "Let's look at the original partition of F2 that we made.",
    "input_data": {
      "input_text": "Let's look at the original partition of F2 that we made.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mobile-diet-ack-fanta.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2899999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3900000,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5399999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "text_offset": 14,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8400000,
        "text_offset": 18,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 27,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 37,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 40,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 42,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799999,
        "text_offset": 43,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 48,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22099999,
        "text_offset": 51,
        "word_length": 5,
        "text": " made",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at the original partition of F2 that we made.",
    "final_audio": "mobile-diet-ack-fanta.mp3"
  },
  {
    "input_text": "Notice that the parts in the original partition are now disjointly used in the two new partitions that we have found.",
    "input_data": {
      "input_text": "Notice that the parts in the original partition are now disjointly used in the two new partitions that we have found.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "oven-uniform-north-comet.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8399999,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 7,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 12,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 16,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 22,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15299999,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 29,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 38,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "text_offset": 48,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24600000,
        "text_offset": 52,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 56,
        "word_length": 4,
        "text": " dis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399999,
        "text_offset": 60,
        "word_length": 5,
        "text": "joint",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 65,
        "word_length": 2,
        "text": "ly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 67,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799998,
        "text_offset": 72,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42199997,
        "text_offset": 75,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 79,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45299999,
        "text_offset": 83,
        "word_length": 4,
        "text": " new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 87,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399999,
        "text_offset": 92,
        "word_length": 6,
        "text": "itions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 98,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 103,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 106,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 111,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 117,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice that the parts in the original partition are now disjointly used in the two new partitions that we have found.",
    "final_audio": "oven-uniform-north-comet.mp3"
  },
  {
    "input_text": "So what we have now is called a paradoxical decomposition. We have split the free group F2 into five parts, took four of them and sort of shifted two of those parts to create two copies of F2. This is called a paradoxical decomposition",
    "input_data": {
      "input_text": "So what we have now is called a paradoxical decomposition. We have split the free group F2 into five parts, took four of them and sort of shifted two of those parts to create two copies of F2. This is called a paradoxical decomposition",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "ceiling-georgia-mars-bluebird.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2899999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4199999,
        "text_offset": 3,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9299999,
        "text_offset": 16,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 20,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13799999,
        "text_offset": 23,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 30,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19399999,
        "text_offset": 32,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 40,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 44,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37300000,
        "text_offset": 58,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 59,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 62,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199999,
        "text_offset": 67,
        "word_length": 6,
        "text": " split",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60399999,
        "text_offset": 77,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61399998,
        "text_offset": 82,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62799999,
        "text_offset": 88,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63699998,
        "text_offset": 90,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65499999,
        "text_offset": 91,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66999998,
        "text_offset": 96,
        "word_length": 5,
        "text": " five",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70999999,
        "text_offset": 101,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72299997,
        "text_offset": 107,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199997,
        "text_offset": 108,
        "word_length": 5,
        "text": " took",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76399998,
        "text_offset": 113,
        "word_length": 5,
        "text": " four",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77599997,
        "text_offset": 118,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79599997,
        "text_offset": 121,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799995,
        "text_offset": 126,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84199995,
        "text_offset": 130,
        "word_length": 5,
        "text": " sort",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "text_offset": 135,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89499998,
        "text_offset": 138,
        "word_length": 8,
        "text": " shifted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94599995,
        "text_offset": 146,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96999998,
        "text_offset": 150,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98199996,
        "text_offset": 153,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99499998,
        "text_offset": 159,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199998,
        "text_offset": 165,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108599996,
        "text_offset": 168,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110999999,
        "text_offset": 175,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112999997,
        "text_offset": 179,
        "word_length": 7,
        "text": " copies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114899997,
        "text_offset": 186,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117099995,
        "text_offset": 189,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118999996,
        "text_offset": 191,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122899994,
        "text_offset": 192,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 193,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 201,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 208,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 210,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 218,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 222,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 236,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So what we have now is called a paradoxical decomposition. We have split the free group F2 into five parts, took four of them and sort of shifted two of these parts to create two copies of F2. This is called a paradoxical decomposition.",
    "final_audio": "ceiling-georgia-mars-bluebird.mp3"
  },
  {
    "input_text": "To transfer the decomposition from the free group, we find two independent rotations in SL2 to form the free group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
    "input_data": {
      "input_text": "To transfer the decomposition from the free group, we find two independent rotations in SL2 to form the free group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
      "service": "gtts"
    },
    "original_audio": "thirteen-virginia-pluto-connecticut.mp3",
    "final_audio": "thirteen-virginia-pluto-connecticut.mp3"
  },
  {
    "input_text": "The rotation tau looks as follows when applied to the sphere",
    "input_data": {
      "input_text": "The rotation tau looks as follows when applied to the sphere",
      "service": "gtts"
    },
    "original_audio": "undress-fix-mango-winter.mp3",
    "final_audio": "undress-fix-mango-winter.mp3"
  },
  {
    "input_text": "The rotation sigma looks as follows when applied to the sphere",
    "input_data": {
      "input_text": "The rotation sigma looks as follows when applied to the sphere",
      "service": "gtts"
    },
    "original_audio": "golf-seven-winter-massachusetts.mp3",
    "final_audio": "golf-seven-winter-massachusetts.mp3"
  },
  {
    "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox. We can apply the paradoxical decomposition of the Free Group to the points of the unit sphere .",
    "input_data": {
      "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox. We can apply the paradoxical decomposition of the Free Group to the points of the unit sphere .",
      "service": "gtts"
    },
    "original_audio": "maine-xray-august-texas.mp3",
    "final_audio": "maine-xray-august-texas.mp3"
  },
  {
    "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox. We can apply the paradoxical decomposition of the Free Group to the points of the unit sphere .",
    "input_data": {
      "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox. We can apply the paradoxical decomposition of the Free Group to the points of the unit sphere .",
      "service": "gtts"
    },
    "original_audio": "maine-xray-august-texas.mp3",
    "final_audio": "maine-xray-august-texas.mp3"
  },
  {
    "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
      "service": "gtts"
    },
    "original_audio": "stream-tennis-one-mobile.mp3",
    "final_audio": "stream-tennis-one-mobile.mp3"
  },
  {
    "input_text": "We can apply the paradoxical decomposition of the Free Group to the points of the unit sphere .",
    "input_data": {
      "input_text": "We can apply the paradoxical decomposition of the Free Group to the points of the unit sphere .",
      "service": "gtts"
    },
    "original_audio": "coffee-virginia-eight-hotel.mp3",
    "final_audio": "coffee-virginia-eight-hotel.mp3"
  },
  {
    "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
      "service": "gtts"
    },
    "original_audio": "stream-tennis-one-mobile.mp3",
    "final_audio": "stream-tennis-one-mobile.mp3"
  },
  {
    "input_text": "We can apply the paradoxical decomposition of the Free Group to the points of the unit sphere .",
    "input_data": {
      "input_text": "We can apply the paradoxical decomposition of the Free Group to the points of the unit sphere .",
      "service": "gtts"
    },
    "original_audio": "coffee-virginia-eight-hotel.mp3",
    "final_audio": "coffee-virginia-eight-hotel.mp3"
  },
  {
    "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
      "service": "gtts"
    },
    "original_audio": "stream-tennis-one-mobile.mp3",
    "final_audio": "stream-tennis-one-mobile.mp3"
  },
  {
    "input_text": "We can apply the paradoxical decomposition of the Free Group to the points of the unit sphere .",
    "input_data": {
      "input_text": "We can apply the paradoxical decomposition of the Free Group to the points of the unit sphere .",
      "service": "gtts"
    },
    "original_audio": "coffee-virginia-eight-hotel.mp3",
    "final_audio": "coffee-virginia-eight-hotel.mp3"
  },
  {
    "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
      "service": "gtts"
    },
    "original_audio": "stream-tennis-one-mobile.mp3",
    "final_audio": "stream-tennis-one-mobile.mp3"
  },
  {
    "input_text": "We can transfer the paradoxical decomposition of the Free Group to the points of the unit sphere almost directly using independent rotations that behave identically to the Free Group.",
    "input_data": {
      "input_text": "We can transfer the paradoxical decomposition of the Free Group to the points of the unit sphere almost directly using independent rotations that behave identically to the Free Group.",
      "service": "gtts"
    },
    "original_audio": "may-ohio-connecticut-sink.mp3",
    "final_audio": "may-ohio-connecticut-sink.mp3"
  },
  {
    "input_text": "We will need to remove a set of problematic points D from the sphere to make this work. We will see later exactly which points these are.",
    "input_data": {
      "input_text": "We will need to remove a set of problematic points D from the sphere to make this work. We will see later exactly which points these are.",
      "service": "gtts"
    },
    "original_audio": "yellow-dakota-grey-london.mp3",
    "final_audio": "yellow-dakota-grey-london.mp3"
  },
  {
    "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
      "service": "gtts"
    },
    "original_audio": "stream-tennis-one-mobile.mp3",
    "final_audio": "stream-tennis-one-mobile.mp3"
  },
  {
    "input_text": "We can transfer the paradoxical decomposition of the Free Group to the points of the unit sphere almost directly using independent rotations that behave identically to the Free Group. Sigma, tau, and their products will then represent certain rotations. We will see these soon",
    "input_data": {
      "input_text": "We can transfer the paradoxical decomposition of the Free Group to the points of the unit sphere almost directly using independent rotations that behave identically to the Free Group. Sigma, tau, and their products will then represent certain rotations. We will see these soon",
      "service": "gtts"
    },
    "original_audio": "shade-snake-lamp-beryllium.mp3",
    "final_audio": "shade-snake-lamp-beryllium.mp3"
  },
  {
    "input_text": "You might notice that the paradoxical decomposition is not of the whole sphere; this is because we need to remove a set of problematic points D from the sphere to make the transfer work. We will see later exactly which points these are.",
    "input_data": {
      "input_text": "You might notice that the paradoxical decomposition is not of the whole sphere; this is because we need to remove a set of problematic points D from the sphere to make the transfer work. We will see later exactly which points these are.",
      "service": "gtts"
    },
    "original_audio": "music-ceiling-august-bluebird.mp3",
    "final_audio": "music-ceiling-august-bluebird.mp3"
  },
  {
    "input_text": "You will also see that there is a subset M of the unit sphere that we will apply those rotations to. We will need to pick it carefully so that this transfer works.",
    "input_data": {
      "input_text": "You will also see that there is a subset M of the unit sphere that we will apply those rotations to. We will need to pick it carefully so that this transfer works.",
      "service": "gtts"
    },
    "original_audio": "may-high-december-winter.mp3",
    "final_audio": "may-high-december-winter.mp3"
  },
  {
    "input_text": "Let's quickly look at what these two rotations look like by seeing how they apply to the unit sphere.",
    "input_data": {
      "input_text": "Let's quickly look at what these two rotations look like by seeing how they apply to the unit sphere.",
      "service": "gtts"
    },
    "original_audio": "gee-red-bulldog-west.mp3",
    "final_audio": "gee-red-bulldog-west.mp3"
  },
  {
    "input_text": "The rotation tau looks as follows when applied to the sphere",
    "input_data": {
      "input_text": "The rotation tau looks as follows when applied to the sphere",
      "service": "gtts"
    },
    "original_audio": "undress-fix-mango-winter.mp3",
    "final_audio": "undress-fix-mango-winter.mp3"
  },
  {
    "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
      "service": "gtts"
    },
    "original_audio": "stream-tennis-one-mobile.mp3",
    "final_audio": "stream-tennis-one-mobile.mp3"
  },
  {
    "input_text": "We can transfer the paradoxical decomposition of the Free Group to the points of the unit sphere almost directly using independent rotations that behave identically to the Free Group. Sigma, tau, and their products will then represent certain rotations. We will see these soon",
    "input_data": {
      "input_text": "We can transfer the paradoxical decomposition of the Free Group to the points of the unit sphere almost directly using independent rotations that behave identically to the Free Group. Sigma, tau, and their products will then represent certain rotations. We will see these soon",
      "service": "gtts"
    },
    "original_audio": "shade-snake-lamp-beryllium.mp3",
    "final_audio": "shade-snake-lamp-beryllium.mp3"
  },
  {
    "input_text": "You might notice that the paradoxical decomposition is not of the whole sphere; this is because we need to remove a set of problematic points D from the sphere to make the transfer work. We will see later exactly which points these are.",
    "input_data": {
      "input_text": "You might notice that the paradoxical decomposition is not of the whole sphere; this is because we need to remove a set of problematic points D from the sphere to make the transfer work. We will see later exactly which points these are.",
      "service": "gtts"
    },
    "original_audio": "music-ceiling-august-bluebird.mp3",
    "final_audio": "music-ceiling-august-bluebird.mp3"
  },
  {
    "input_text": "You will also see that there is a subset M of the unit sphere that we will apply those rotations to. This is not just any set; we will need to pick it carefully so that this transfer works.",
    "input_data": {
      "input_text": "You will also see that there is a subset M of the unit sphere that we will apply those rotations to. This is not just any set; we will need to pick it carefully so that this transfer works.",
      "service": "gtts"
    },
    "original_audio": "item-five-hydrogen-oregon.mp3",
    "final_audio": "item-five-hydrogen-oregon.mp3"
  },
  {
    "input_text": "As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidian group E_3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
    "input_data": {
      "input_text": "As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidian group E_3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
      "service": "gtts"
    },
    "original_audio": "autumn-may-berlin-twenty.mp3",
    "final_audio": "autumn-may-berlin-twenty.mp3"
  },
  {
    "input_text": "Let's look at an example of two such rotations. These are the rotations around the x and y axes by an angle of the arc cosine of one third. We will call the rotation around the x-axis sigma, and the rotation along the y-axis tau.",
    "input_data": {
      "input_text": "Let's look at an example of two such rotations. These are the rotations around the x and y axes by an angle of the arc cosine of one third. We will call the rotation around the x-axis sigma, and the rotation along the y-axis tau.",
      "service": "gtts"
    },
    "original_audio": "lion-emma-ceiling-fix.mp3",
    "final_audio": "lion-emma-ceiling-fix.mp3"
  },
  {
    "input_text": "Let's look at that paradoxical decomposition again.",
    "input_data": {
      "input_text": "Let's look at that paradoxical decomposition again.",
      "service": "gtts"
    },
    "original_audio": "fish-ack-leopard-floor.mp3",
    "final_audio": "fish-ack-leopard-floor.mp3"
  },
  {
    "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
    "input_data": {
      "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "queen-nitrogen-twelve-papa.mp3",
    "final_audio": "queen-nitrogen-twelve-papa.mp3"
  },
  {
    "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique. We will do this by dividing the sphere based on the group of rotations. We will see how exactly we do that right now.",
    "input_data": {
      "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique. We will do this by dividing the sphere based on the group of rotations. We will see how exactly we do that right now.",
      "service": "gtts"
    },
    "original_audio": "lemon-jig-lamp-burger.mp3",
    "final_audio": "lemon-jig-lamp-burger.mp3"
  },
  {
    "input_text": "Let's look at that paradoxical decomposition again.",
    "input_data": {
      "input_text": "Let's look at that paradoxical decomposition again.",
      "service": "gtts"
    },
    "original_audio": "fish-ack-leopard-floor.mp3",
    "final_audio": "fish-ack-leopard-floor.mp3"
  },
  {
    "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
    "input_data": {
      "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "queen-nitrogen-twelve-papa.mp3",
    "final_audio": "queen-nitrogen-twelve-papa.mp3"
  },
  {
    "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique.",
    "input_data": {
      "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique.",
      "service": "gtts"
    },
    "original_audio": "happy-ack-two-oven.mp3",
    "final_audio": "happy-ack-two-oven.mp3"
  },
  {
    "input_text": "Let's look at that paradoxical decomposition again.",
    "input_data": {
      "input_text": "Let's look at that paradoxical decomposition again.",
      "service": "gtts"
    },
    "original_audio": "fish-ack-leopard-floor.mp3",
    "final_audio": "fish-ack-leopard-floor.mp3"
  },
  {
    "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
    "input_data": {
      "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "queen-nitrogen-twelve-papa.mp3",
    "final_audio": "queen-nitrogen-twelve-papa.mp3"
  },
  {
    "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique.",
    "input_data": {
      "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique.",
      "service": "gtts"
    },
    "original_audio": "happy-ack-two-oven.mp3",
    "final_audio": "happy-ack-two-oven.mp3"
  },
  {
    "input_text": "We will do this by dividing the sphere based on the group of rotations. We will see how exactly we do that right now.",
    "input_data": {
      "input_text": "We will do this by dividing the sphere based on the group of rotations. We will see how exactly we do that right now.",
      "service": "gtts"
    },
    "original_audio": "arizona-july-massachusetts-cardinal.mp3",
    "final_audio": "arizona-july-massachusetts-cardinal.mp3"
  },
  {
    "input_text": "Let's look at that paradoxical decomposition again.",
    "input_data": {
      "input_text": "Let's look at that paradoxical decomposition again.",
      "service": "gtts"
    },
    "original_audio": "fish-ack-leopard-floor.mp3",
    "final_audio": "fish-ack-leopard-floor.mp3"
  },
  {
    "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
    "input_data": {
      "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "queen-nitrogen-twelve-papa.mp3",
    "final_audio": "queen-nitrogen-twelve-papa.mp3"
  },
  {
    "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique.",
    "input_data": {
      "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique.",
      "service": "gtts"
    },
    "original_audio": "happy-ack-two-oven.mp3",
    "final_audio": "happy-ack-two-oven.mp3"
  },
  {
    "input_text": "We will do this by dividing the sphere based on the group of rotations. We will see how exactly we do that right now.",
    "input_data": {
      "input_text": "We will do this by dividing the sphere based on the group of rotations. We will see how exactly we do that right now.",
      "service": "gtts"
    },
    "original_audio": "arizona-july-massachusetts-cardinal.mp3",
    "final_audio": "arizona-july-massachusetts-cardinal.mp3"
  },
  {
    "input_text": "Let's look at that paradoxical decomposition again.",
    "input_data": {
      "input_text": "Let's look at that paradoxical decomposition again.",
      "service": "gtts"
    },
    "original_audio": "fish-ack-leopard-floor.mp3",
    "final_audio": "fish-ack-leopard-floor.mp3"
  },
  {
    "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
    "input_data": {
      "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "queen-nitrogen-twelve-papa.mp3",
    "final_audio": "queen-nitrogen-twelve-papa.mp3"
  },
  {
    "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique.",
    "input_data": {
      "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique.",
      "service": "gtts"
    },
    "original_audio": "happy-ack-two-oven.mp3",
    "final_audio": "happy-ack-two-oven.mp3"
  },
  {
    "input_text": "We will do this by dividing the sphere based on the group of rotations. We will see how exactly we do that right now.",
    "input_data": {
      "input_text": "We will do this by dividing the sphere based on the group of rotations. We will see how exactly we do that right now.",
      "service": "gtts"
    },
    "original_audio": "arizona-july-massachusetts-cardinal.mp3",
    "final_audio": "arizona-july-massachusetts-cardinal.mp3"
  },
  {
    "input_text": "Let's see how we can create the set M by dividing the sphere by the group of rotations. We will make points equivalent whenever they can be transformed into each other using rotations from G(sigma, tau)",
    "input_data": {
      "input_text": "Let's see how we can create the set M by dividing the sphere by the group of rotations. We will make points equivalent whenever they can be transformed into each other using rotations from G(sigma, tau)",
      "service": "gtts"
    },
    "original_audio": "jersey-oregon-nevada-uniform.mp3",
    "final_audio": "jersey-oregon-nevada-uniform.mp3"
  },
  {
    "input_text": "Similarly to the construction of the non-measurable set, we will look at equivalence classes over rotations. The only differences are that we are now looking at three-dimensional rotations instead of two, and that we are not looking at rational rotations, but at rotations from the group generated by sigma and tau.",
    "input_data": {
      "input_text": "Similarly to the construction of the non-measurable set, we will look at equivalence classes over rotations. The only differences are that we are now looking at three-dimensional rotations instead of two, and that we are not looking at rational rotations, but at rotations from the group generated by sigma and tau.",
      "service": "gtts"
    },
    "original_audio": "mars-florida-indigo-robin.mp3",
    "final_audio": "mars-florida-indigo-robin.mp3"
  },
  {
    "input_text": "Let's once again look at how the equivalence classes are formed; we apply rotations from G(sigma, tau) to it. Of course, as was the case with the non-measurable set and the tree of the free group, this is an infinite process of which we can only show a finite part. This is because, to get the equivalence class of any particular point, we would need to apply ALL rotations from the group G(tau, sigma) to it; hopefully these finite examples do illustrate how that would be done. The lines from the origin to the points are there to make it easier to see how the points are rotating.",
    "input_data": {
      "input_text": "Let's once again look at how the equivalence classes are formed; we apply rotations from G(sigma, tau) to it. Of course, as was the case with the non-measurable set and the tree of the free group, this is an infinite process of which we can only show a finite part. This is because, to get the equivalence class of any particular point, we would need to apply ALL rotations from the group G(tau, sigma) to it; hopefully these finite examples do illustrate how that would be done. The lines from the origin to the points are there to make it easier to see how the points are rotating.",
      "service": "gtts"
    },
    "original_audio": "jupiter-lithium-vermont-rugby.mp3",
    "final_audio": "jupiter-lithium-vermont-rugby.mp3"
  },
  {
    "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
    "input_data": {
      "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
      "service": "gtts"
    },
    "original_audio": "london-yellow-uncle-robin.mp3",
    "final_audio": "london-yellow-uncle-robin.mp3"
  },
  {
    "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
    "input_data": {
      "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
      "service": "gtts"
    },
    "original_audio": "london-yellow-uncle-robin.mp3",
    "final_audio": "london-yellow-uncle-robin.mp3"
  },
  {
    "input_text": "We look at all the equivalence classes.",
    "input_data": {
      "input_text": "We look at all the equivalence classes.",
      "service": "gtts"
    },
    "original_audio": "romeo-echo-iowa-skylark.mp3",
    "final_audio": "romeo-echo-iowa-skylark.mp3"
  },
  {
    "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
    "input_data": {
      "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
      "service": "gtts"
    },
    "original_audio": "london-yellow-uncle-robin.mp3",
    "final_audio": "london-yellow-uncle-robin.mp3"
  },
  {
    "input_text": "We look at all the equivalence classes.",
    "input_data": {
      "input_text": "We look at all the equivalence classes.",
      "service": "gtts"
    },
    "original_audio": "romeo-echo-iowa-skylark.mp3",
    "final_audio": "romeo-echo-iowa-skylark.mp3"
  },
  {
    "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
    "input_data": {
      "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
      "service": "gtts"
    },
    "original_audio": "item-july-ink-may.mp3",
    "final_audio": "item-july-ink-may.mp3"
  },
  {
    "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere.",
    "input_data": {
      "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "montana-mike-mike-pluto.mp3",
    "final_audio": "montana-mike-mike-pluto.mp3"
  },
  {
    "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
    "input_data": {
      "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
      "service": "gtts"
    },
    "original_audio": "london-yellow-uncle-robin.mp3",
    "final_audio": "london-yellow-uncle-robin.mp3"
  },
  {
    "input_text": "We look at all the equivalence classes.",
    "input_data": {
      "input_text": "We look at all the equivalence classes.",
      "service": "gtts"
    },
    "original_audio": "romeo-echo-iowa-skylark.mp3",
    "final_audio": "romeo-echo-iowa-skylark.mp3"
  },
  {
    "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
    "input_data": {
      "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
      "service": "gtts"
    },
    "original_audio": "item-july-ink-may.mp3",
    "final_audio": "item-july-ink-may.mp3"
  },
  {
    "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere.",
    "input_data": {
      "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "montana-mike-mike-pluto.mp3",
    "final_audio": "montana-mike-mike-pluto.mp3"
  },
  {
    "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
    "input_data": {
      "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
      "service": "gtts"
    },
    "original_audio": "london-yellow-uncle-robin.mp3",
    "final_audio": "london-yellow-uncle-robin.mp3"
  },
  {
    "input_text": "We look at all the equivalence classes.",
    "input_data": {
      "input_text": "We look at all the equivalence classes.",
      "service": "gtts"
    },
    "original_audio": "romeo-echo-iowa-skylark.mp3",
    "final_audio": "romeo-echo-iowa-skylark.mp3"
  },
  {
    "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
    "input_data": {
      "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
      "service": "gtts"
    },
    "original_audio": "item-july-ink-may.mp3",
    "final_audio": "item-july-ink-may.mp3"
  },
  {
    "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere.",
    "input_data": {
      "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "montana-mike-mike-pluto.mp3",
    "final_audio": "montana-mike-mike-pluto.mp3"
  },
  {
    "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
    "input_data": {
      "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
      "service": "gtts"
    },
    "original_audio": "london-yellow-uncle-robin.mp3",
    "final_audio": "london-yellow-uncle-robin.mp3"
  },
  {
    "input_text": "We look at all the equivalence classes.",
    "input_data": {
      "input_text": "We look at all the equivalence classes.",
      "service": "gtts"
    },
    "original_audio": "romeo-echo-iowa-skylark.mp3",
    "final_audio": "romeo-echo-iowa-skylark.mp3"
  },
  {
    "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
    "input_data": {
      "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
      "service": "gtts"
    },
    "original_audio": "item-july-ink-may.mp3",
    "final_audio": "item-july-ink-may.mp3"
  },
  {
    "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere.",
    "input_data": {
      "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "montana-mike-mike-pluto.mp3",
    "final_audio": "montana-mike-mike-pluto.mp3"
  },
  {
    "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
    "input_data": {
      "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
      "service": "gtts"
    },
    "original_audio": "london-yellow-uncle-robin.mp3",
    "final_audio": "london-yellow-uncle-robin.mp3"
  },
  {
    "input_text": "We look at all the equivalence classes.",
    "input_data": {
      "input_text": "We look at all the equivalence classes.",
      "service": "gtts"
    },
    "original_audio": "romeo-echo-iowa-skylark.mp3",
    "final_audio": "romeo-echo-iowa-skylark.mp3"
  },
  {
    "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
    "input_data": {
      "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
      "service": "gtts"
    },
    "original_audio": "item-july-ink-may.mp3",
    "final_audio": "item-july-ink-may.mp3"
  },
  {
    "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere.",
    "input_data": {
      "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "montana-mike-mike-pluto.mp3",
    "final_audio": "montana-mike-mike-pluto.mp3"
  },
  {
    "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
    "input_data": {
      "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
      "service": "gtts"
    },
    "original_audio": "london-yellow-uncle-robin.mp3",
    "final_audio": "london-yellow-uncle-robin.mp3"
  },
  {
    "input_text": "We look at all the equivalence classes.",
    "input_data": {
      "input_text": "We look at all the equivalence classes.",
      "service": "gtts"
    },
    "original_audio": "romeo-echo-iowa-skylark.mp3",
    "final_audio": "romeo-echo-iowa-skylark.mp3"
  },
  {
    "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
    "input_data": {
      "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
      "service": "gtts"
    },
    "original_audio": "item-july-ink-may.mp3",
    "final_audio": "item-july-ink-may.mp3"
  },
  {
    "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere.",
    "input_data": {
      "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "montana-mike-mike-pluto.mp3",
    "final_audio": "montana-mike-mike-pluto.mp3"
  },
  {
    "input_text": "Applying sigma to the whole sphere looks like this. The red dot is the point (1, 0, 0), and as you can see, it is entirely unaffected by the rotation",
    "input_data": {
      "input_text": "Applying sigma to the whole sphere looks like this. The red dot is the point (1, 0, 0), and as you can see, it is entirely unaffected by the rotation",
      "service": "gtts"
    },
    "original_audio": "michigan-ceiling-louisiana-kansas.mp3",
    "final_audio": "michigan-ceiling-louisiana-kansas.mp3"
  },
  {
    "input_text": "Applying sigma to the whole sphere looks like this. The red dot is the point (1, 0, 0), and as you can see, it is entirely unaffected by the rotation",
    "input_data": {
      "input_text": "Applying sigma to the whole sphere looks like this. The red dot is the point (1, 0, 0), and as you can see, it is entirely unaffected by the rotation",
      "service": "gtts"
    },
    "original_audio": "michigan-ceiling-louisiana-kansas.mp3",
    "final_audio": "michigan-ceiling-louisiana-kansas.mp3"
  },
  {
    "input_text": "Applying sigma to the whole sphere looks like this. The red dot is the point (1, 0, 0), and as you can see, it is entirely unaffected by the rotation",
    "input_data": {
      "input_text": "Applying sigma to the whole sphere looks like this. The red dot is the point (1, 0, 0), and as you can see, it is entirely unaffected by the rotation",
      "service": "gtts"
    },
    "original_audio": "michigan-ceiling-louisiana-kansas.mp3",
    "final_audio": "michigan-ceiling-louisiana-kansas.mp3"
  },
  {
    "input_text": "Applying sigma to the whole sphere looks like this. The red dot is the point (1, 0, 0), and as you can see, it is entirely unaffected by the rotation",
    "input_data": {
      "input_text": "Applying sigma to the whole sphere looks like this. The red dot is the point (1, 0, 0), and as you can see, it is entirely unaffected by the rotation",
      "service": "gtts"
    },
    "original_audio": "michigan-ceiling-louisiana-kansas.mp3",
    "final_audio": "michigan-ceiling-louisiana-kansas.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "thirteen-beer-victor-lithium.mp3",
    "final_audio": "thirteen-beer-victor-lithium.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "thirteen-beer-victor-lithium.mp3",
    "final_audio": "thirteen-beer-victor-lithium.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "thirteen-beer-victor-lithium.mp3",
    "final_audio": "thirteen-beer-victor-lithium.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "thirteen-beer-victor-lithium.mp3",
    "final_audio": "thirteen-beer-victor-lithium.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "thirteen-beer-victor-lithium.mp3",
    "final_audio": "thirteen-beer-victor-lithium.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "thirteen-beer-victor-lithium.mp3",
    "final_audio": "thirteen-beer-victor-lithium.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "thirteen-beer-victor-lithium.mp3",
    "final_audio": "thirteen-beer-victor-lithium.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "thirteen-beer-victor-lithium.mp3",
    "final_audio": "thirteen-beer-victor-lithium.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "thirteen-beer-victor-lithium.mp3",
    "final_audio": "thirteen-beer-victor-lithium.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "thirteen-beer-victor-lithium.mp3",
    "final_audio": "thirteen-beer-victor-lithium.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "thirteen-beer-victor-lithium.mp3",
    "final_audio": "thirteen-beer-victor-lithium.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "thirteen-beer-victor-lithium.mp3",
    "final_audio": "thirteen-beer-victor-lithium.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition. That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
      "service": "gtts"
    },
    "original_audio": "saturn-florida-failed-skylark.mp3",
    "final_audio": "saturn-florida-failed-skylark.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "carpet-oklahoma-louisiana-robert.mp3",
    "final_audio": "carpet-oklahoma-louisiana-robert.mp3"
  },
  {
    "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
    "input_data": {
      "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
      "service": "gtts"
    },
    "original_audio": "failed-idaho-georgia-arizona.mp3",
    "final_audio": "failed-idaho-georgia-arizona.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "carpet-oklahoma-louisiana-robert.mp3",
    "final_audio": "carpet-oklahoma-louisiana-robert.mp3"
  },
  {
    "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
    "input_data": {
      "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
      "service": "gtts"
    },
    "original_audio": "failed-idaho-georgia-arizona.mp3",
    "final_audio": "failed-idaho-georgia-arizona.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "carpet-oklahoma-louisiana-robert.mp3",
    "final_audio": "carpet-oklahoma-louisiana-robert.mp3"
  },
  {
    "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
    "input_data": {
      "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
      "service": "gtts"
    },
    "original_audio": "failed-idaho-georgia-arizona.mp3",
    "final_audio": "failed-idaho-georgia-arizona.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "carpet-oklahoma-louisiana-robert.mp3",
    "final_audio": "carpet-oklahoma-louisiana-robert.mp3"
  },
  {
    "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
    "input_data": {
      "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
      "service": "gtts"
    },
    "original_audio": "failed-idaho-georgia-arizona.mp3",
    "final_audio": "failed-idaho-georgia-arizona.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "service": "gtts"
    },
    "original_audio": "moon-monkey-one-east.mp3",
    "final_audio": "moon-monkey-one-east.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
      "service": "gtts"
    },
    "original_audio": "carpet-oklahoma-louisiana-robert.mp3",
    "final_audio": "carpet-oklahoma-louisiana-robert.mp3"
  },
  {
    "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
    "input_data": {
      "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
      "service": "gtts"
    },
    "original_audio": "failed-idaho-georgia-arizona.mp3",
    "final_audio": "failed-idaho-georgia-arizona.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "service": "gtts"
    },
    "original_audio": "item-fruit-mirror-stairway.mp3",
    "final_audio": "item-fruit-mirror-stairway.mp3"
  },
  {
    "input_text": "Let's look at these points from above, so we can better see what we are doing.",
    "input_data": {
      "input_text": "Let's look at these points from above, so we can better see what we are doing.",
      "service": "gtts"
    },
    "original_audio": "two-sweet-east-fanta.mp3",
    "final_audio": "two-sweet-east-fanta.mp3"
  },
  {
    "input_text": "Let's look at these points from above, so we can better see what we are doing.",
    "input_data": {
      "input_text": "Let's look at these points from above, so we can better see what we are doing.",
      "service": "gtts"
    },
    "original_audio": "two-sweet-east-fanta.mp3",
    "final_audio": "two-sweet-east-fanta.mp3"
  },
  {
    "input_text": "Let's look at these points from above, so we can better see what we are doing.",
    "input_data": {
      "input_text": "Let's look at these points from above, so we can better see what we are doing.",
      "service": "gtts"
    },
    "original_audio": "two-sweet-east-fanta.mp3",
    "final_audio": "two-sweet-east-fanta.mp3"
  },
  {
    "input_text": "Let's look at these points from above, so we can better see what we are doing.",
    "input_data": {
      "input_text": "Let's look at these points from above, so we can better see what we are doing.",
      "service": "gtts"
    },
    "original_audio": "two-sweet-east-fanta.mp3",
    "final_audio": "two-sweet-east-fanta.mp3"
  },
  {
    "input_text": "Let's look at these points from above, so we can better see what we are doing.",
    "input_data": {
      "input_text": "Let's look at these points from above, so we can better see what we are doing.",
      "service": "gtts"
    },
    "original_audio": "two-sweet-east-fanta.mp3",
    "final_audio": "two-sweet-east-fanta.mp3"
  },
  {
    "input_text": "Let's look at these points from above, so we can better see what we are doing.",
    "input_data": {
      "input_text": "Let's look at these points from above, so we can better see what we are doing.",
      "service": "gtts"
    },
    "original_audio": "two-sweet-east-fanta.mp3",
    "final_audio": "two-sweet-east-fanta.mp3"
  },
  {
    "input_text": "We are now ready to dive into the next step of the proof of the Banach-Tarski paradox, which will be to add the set D back to the decomposition.",
    "input_data": {
      "input_text": "We are now ready to dive into the next step of the proof of the Banach-Tarski paradox, which will be to add the set D back to the decomposition.",
      "service": "gtts"
    },
    "original_audio": "nuts-salami-carbon-solar.mp3",
    "final_audio": "nuts-salami-carbon-solar.mp3"
  },
  {
    "input_text": "We are now ready to dive into the next step of the proof of the Banach-Tarski paradox, which will be to add the set D back to the decomposition.",
    "input_data": {
      "input_text": "We are now ready to dive into the next step of the proof of the Banach-Tarski paradox, which will be to add the set D back to the decomposition.",
      "service": "gtts"
    },
    "original_audio": "nuts-salami-carbon-solar.mp3",
    "final_audio": "nuts-salami-carbon-solar.mp3"
  },
  {
    "input_text": "Let's see the points of D. D has infinitely many points, so we show a finite subset of D to represent all of D.",
    "input_data": {
      "input_text": "Let's see the points of D. D has infinitely many points, so we show a finite subset of D to represent all of D.",
      "service": "gtts"
    },
    "original_audio": "moon-alpha-robin-alanine.mp3",
    "final_audio": "moon-alpha-robin-alanine.mp3"
  },
  {
    "input_text": "We are now ready to dive into the next step of the proof of the Banach-Tarski paradox, which will be to add the set D back to the decomposition.",
    "input_data": {
      "input_text": "We are now ready to dive into the next step of the proof of the Banach-Tarski paradox, which will be to add the set D back to the decomposition.",
      "service": "gtts"
    },
    "original_audio": "nuts-salami-carbon-solar.mp3",
    "final_audio": "nuts-salami-carbon-solar.mp3"
  },
  {
    "input_text": "Let's see the points of D. D has infinitely many points, so we show a finite subset of D to represent all of D.",
    "input_data": {
      "input_text": "Let's see the points of D. D has infinitely many points, so we show a finite subset of D to represent all of D.",
      "service": "gtts"
    },
    "original_audio": "moon-alpha-robin-alanine.mp3",
    "final_audio": "moon-alpha-robin-alanine.mp3"
  },
  {
    "input_text": "Let's look at these points from above, so we can better see what we are doing.",
    "input_data": {
      "input_text": "Let's look at these points from above, so we can better see what we are doing.",
      "service": "gtts"
    },
    "original_audio": "two-sweet-east-fanta.mp3",
    "final_audio": "two-sweet-east-fanta.mp3"
  },
  {
    "input_text": "We are now ready to dive into the next step of the proof of the Banach-Tarski paradox, which will be to add the set D back to the decomposition.",
    "input_data": {
      "input_text": "We are now ready to dive into the next step of the proof of the Banach-Tarski paradox, which will be to add the set D back to the decomposition.",
      "service": "gtts"
    },
    "original_audio": "nuts-salami-carbon-solar.mp3",
    "final_audio": "nuts-salami-carbon-solar.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using",
    "input_data": {
      "input_text": "We will be using",
      "service": "gtts"
    },
    "original_audio": "alanine-fruit-xray-west.mp3",
    "final_audio": "alanine-fruit-xray-west.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D.",
      "service": "gtts"
    },
    "original_audio": "delta-table-carpet-minnesota.mp3",
    "final_audio": "delta-table-carpet-minnesota.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
      "service": "gtts"
    },
    "original_audio": "six-apart-bacon-fifteen.mp3",
    "final_audio": "six-apart-bacon-fifteen.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
      "service": "gtts"
    },
    "original_audio": "six-apart-bacon-fifteen.mp3",
    "final_audio": "six-apart-bacon-fifteen.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
      "service": "gtts"
    },
    "original_audio": "six-apart-bacon-fifteen.mp3",
    "final_audio": "six-apart-bacon-fifteen.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
      "service": "gtts"
    },
    "original_audio": "six-apart-bacon-fifteen.mp3",
    "final_audio": "six-apart-bacon-fifteen.mp3"
  },
  {
    "input_text": "We can represent this visually as follows. What you see is that",
    "input_data": {
      "input_text": "We can represent this visually as follows. What you see is that",
      "service": "gtts"
    },
    "original_audio": "nitrogen-orange-oranges-nitrogen.mp3",
    "final_audio": "nitrogen-orange-oranges-nitrogen.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that",
    "input_data": {
      "input_text": "What you see is that",
      "service": "gtts"
    },
    "original_audio": "five-foxtrot-alabama-sierra.mp3",
    "final_audio": "five-foxtrot-alabama-sierra.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that",
    "input_data": {
      "input_text": "What you see is that",
      "service": "gtts"
    },
    "original_audio": "five-foxtrot-alabama-sierra.mp3",
    "final_audio": "five-foxtrot-alabama-sierra.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis. We will remove the axes to keep things tidy.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis. We will remove the axes to keep things tidy.",
      "service": "gtts"
    },
    "original_audio": "eight-lamp-maryland-may.mp3",
    "final_audio": "eight-lamp-maryland-may.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis. Let's remove the axes to keep things tidy.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis. Let's remove the axes to keep things tidy.",
      "service": "gtts"
    },
    "original_audio": "indigo-tango-beer-winter.mp3",
    "final_audio": "indigo-tango-beer-winter.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that",
    "input_data": {
      "input_text": "What you see is that",
      "service": "gtts"
    },
    "original_audio": "five-foxtrot-alabama-sierra.mp3",
    "final_audio": "five-foxtrot-alabama-sierra.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that",
    "input_data": {
      "input_text": "What you see is that",
      "service": "gtts"
    },
    "original_audio": "five-foxtrot-alabama-sierra.mp3",
    "final_audio": "five-foxtrot-alabama-sierra.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that",
    "input_data": {
      "input_text": "What you see is that",
      "service": "gtts"
    },
    "original_audio": "five-foxtrot-alabama-sierra.mp3",
    "final_audio": "five-foxtrot-alabama-sierra.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that",
    "input_data": {
      "input_text": "What you see is that",
      "service": "gtts"
    },
    "original_audio": "five-foxtrot-alabama-sierra.mp3",
    "final_audio": "five-foxtrot-alabama-sierra.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that",
    "input_data": {
      "input_text": "What you see is that",
      "service": "gtts"
    },
    "original_audio": "five-foxtrot-alabama-sierra.mp3",
    "final_audio": "five-foxtrot-alabama-sierra.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well all of E except the last rotation of D.",
    "input_data": {
      "input_text": "Well all of E except the last rotation of D.",
      "service": "gtts"
    },
    "original_audio": "beer-two-comet-berlin.mp3",
    "final_audio": "beer-two-comet-berlin.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well all of E except the last rotation of D.",
    "input_data": {
      "input_text": "Well all of E except the last rotation of D.",
      "service": "gtts"
    },
    "original_audio": "beer-two-comet-berlin.mp3",
    "final_audio": "beer-two-comet-berlin.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well all of E except the last rotation of D.",
    "input_data": {
      "input_text": "Well all of E except the last rotation of D.",
      "service": "gtts"
    },
    "original_audio": "beer-two-comet-berlin.mp3",
    "final_audio": "beer-two-comet-berlin.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D phi n D, there is a",
    "input_data": {
      "input_text": "Well all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D phi n D, there is a",
      "service": "gtts"
    },
    "original_audio": "cold-leopard-tennis-king.mp3",
    "final_audio": "cold-leopard-tennis-king.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D phi n D, there is a",
    "input_data": {
      "input_text": "Well all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D phi n D, there is a",
      "service": "gtts"
    },
    "original_audio": "cold-leopard-tennis-king.mp3",
    "final_audio": "cold-leopard-tennis-king.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D phi n D, there is a",
    "input_data": {
      "input_text": "Well all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D phi n D, there is a",
      "service": "gtts"
    },
    "original_audio": "cold-leopard-tennis-king.mp3",
    "final_audio": "cold-leopard-tennis-king.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D.",
      "service": "gtts"
    },
    "original_audio": "king-maine-blossom-maine.mp3",
    "final_audio": "king-maine-blossom-maine.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D phi n D, there is a",
    "input_data": {
      "input_text": "Well all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D phi n D, there is a",
      "service": "gtts"
    },
    "original_audio": "cold-leopard-tennis-king.mp3",
    "final_audio": "cold-leopard-tennis-king.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "service": "gtts"
    },
    "original_audio": "steak-emma-whiskey-uncle.mp3",
    "final_audio": "steak-emma-whiskey-uncle.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "wyoming-stream-twenty-east.mp3",
    "final_audio": "wyoming-stream-twenty-east.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D phi n D, there is a",
    "input_data": {
      "input_text": "Well all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D phi n D, there is a",
      "service": "gtts"
    },
    "original_audio": "cold-leopard-tennis-king.mp3",
    "final_audio": "cold-leopard-tennis-king.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "service": "gtts"
    },
    "original_audio": "steak-emma-whiskey-uncle.mp3",
    "final_audio": "steak-emma-whiskey-uncle.mp3"
  },
  {
    "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows. We take a purple copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "Now, we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows. We take a purple copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "service": "gtts"
    },
    "original_audio": "uniform-connecticut-ink-kansas.mp3",
    "final_audio": "uniform-connecticut-ink-kansas.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
      "service": "gtts"
    },
    "original_audio": "one-three-grey-yankee.mp3",
    "final_audio": "one-three-grey-yankee.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "service": "gtts"
    },
    "original_audio": "steak-emma-whiskey-uncle.mp3",
    "final_audio": "steak-emma-whiskey-uncle.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "service": "gtts"
    },
    "original_audio": "island-equal-alabama-harry.mp3",
    "final_audio": "island-equal-alabama-harry.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows. We take a purple copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows. We take a purple copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "service": "gtts"
    },
    "original_audio": "south-november-georgia-timing.mp3",
    "final_audio": "south-november-georgia-timing.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
      "service": "gtts"
    },
    "original_audio": "one-three-grey-yankee.mp3",
    "final_audio": "one-three-grey-yankee.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "service": "gtts"
    },
    "original_audio": "steak-emma-whiskey-uncle.mp3",
    "final_audio": "steak-emma-whiskey-uncle.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "service": "gtts"
    },
    "original_audio": "island-equal-alabama-harry.mp3",
    "final_audio": "island-equal-alabama-harry.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows. We take a purple copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows. We take a purple copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "service": "gtts"
    },
    "original_audio": "south-november-georgia-timing.mp3",
    "final_audio": "south-november-georgia-timing.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
      "service": "gtts"
    },
    "original_audio": "one-three-grey-yankee.mp3",
    "final_audio": "one-three-grey-yankee.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "service": "gtts"
    },
    "original_audio": "steak-emma-whiskey-uncle.mp3",
    "final_audio": "steak-emma-whiskey-uncle.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "service": "gtts"
    },
    "original_audio": "island-equal-alabama-harry.mp3",
    "final_audio": "island-equal-alabama-harry.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
      "service": "gtts"
    },
    "original_audio": "grey-minnesota-north-oscar.mp3",
    "final_audio": "grey-minnesota-north-oscar.mp3"
  },
  {
    "input_text": "We can represent this visually as follows. We take a purple copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "We can represent this visually as follows. We take a purple copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "service": "gtts"
    },
    "original_audio": "lake-florida-robert-idaho.mp3",
    "final_audio": "lake-florida-robert-idaho.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
      "service": "gtts"
    },
    "original_audio": "one-three-grey-yankee.mp3",
    "final_audio": "one-three-grey-yankee.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "service": "gtts"
    },
    "original_audio": "steak-emma-whiskey-uncle.mp3",
    "final_audio": "steak-emma-whiskey-uncle.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "service": "gtts"
    },
    "original_audio": "island-equal-alabama-harry.mp3",
    "final_audio": "island-equal-alabama-harry.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
      "service": "gtts"
    },
    "original_audio": "grey-minnesota-north-oscar.mp3",
    "final_audio": "grey-minnesota-north-oscar.mp3"
  },
  {
    "input_text": "We can represent this visually as follows. We take a purple copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "We can represent this visually as follows. We take a purple copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "service": "gtts"
    },
    "original_audio": "lake-florida-robert-idaho.mp3",
    "final_audio": "lake-florida-robert-idaho.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
      "service": "gtts"
    },
    "original_audio": "one-three-grey-yankee.mp3",
    "final_audio": "one-three-grey-yankee.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "service": "gtts"
    },
    "original_audio": "steak-emma-whiskey-uncle.mp3",
    "final_audio": "steak-emma-whiskey-uncle.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "service": "gtts"
    },
    "original_audio": "island-equal-alabama-harry.mp3",
    "final_audio": "island-equal-alabama-harry.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again.",
      "service": "gtts"
    },
    "original_audio": "grey-minnesota-north-oscar.mp3",
    "final_audio": "grey-minnesota-north-oscar.mp3"
  },
  {
    "input_text": "We can represent this visually as follows. We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "We can represent this visually as follows. We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "service": "gtts"
    },
    "original_audio": "mockingbird-hawaii-table-papa.mp3",
    "final_audio": "mockingbird-hawaii-table-papa.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D. In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
      "service": "gtts"
    },
    "original_audio": "one-three-grey-yankee.mp3",
    "final_audio": "one-three-grey-yankee.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "service": "gtts"
    },
    "original_audio": "steak-emma-whiskey-uncle.mp3",
    "final_audio": "steak-emma-whiskey-uncle.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "service": "gtts"
    },
    "original_audio": "island-equal-alabama-harry.mp3",
    "final_audio": "island-equal-alabama-harry.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "berlin-finch-juliet-robert.mp3",
    "final_audio": "berlin-finch-juliet-robert.mp3"
  },
  {
    "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "service": "gtts"
    },
    "original_audio": "asparagus-bakerloo-may-alpha.mp3",
    "final_audio": "asparagus-bakerloo-may-alpha.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
      "service": "gtts"
    },
    "original_audio": "maryland-nebraska-uniform-six.mp3",
    "final_audio": "maryland-nebraska-uniform-six.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "service": "gtts"
    },
    "original_audio": "steak-emma-whiskey-uncle.mp3",
    "final_audio": "steak-emma-whiskey-uncle.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "service": "gtts"
    },
    "original_audio": "island-equal-alabama-harry.mp3",
    "final_audio": "island-equal-alabama-harry.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "berlin-finch-juliet-robert.mp3",
    "final_audio": "berlin-finch-juliet-robert.mp3"
  },
  {
    "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "service": "gtts"
    },
    "original_audio": "asparagus-bakerloo-may-alpha.mp3",
    "final_audio": "asparagus-bakerloo-may-alpha.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
      "service": "gtts"
    },
    "original_audio": "maryland-nebraska-uniform-six.mp3",
    "final_audio": "maryland-nebraska-uniform-six.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "service": "gtts"
    },
    "original_audio": "steak-emma-whiskey-uncle.mp3",
    "final_audio": "steak-emma-whiskey-uncle.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "service": "gtts"
    },
    "original_audio": "island-equal-alabama-harry.mp3",
    "final_audio": "island-equal-alabama-harry.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "berlin-finch-juliet-robert.mp3",
    "final_audio": "berlin-finch-juliet-robert.mp3"
  },
  {
    "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "service": "gtts"
    },
    "original_audio": "asparagus-bakerloo-may-alpha.mp3",
    "final_audio": "asparagus-bakerloo-may-alpha.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
      "service": "gtts"
    },
    "original_audio": "maryland-nebraska-uniform-six.mp3",
    "final_audio": "maryland-nebraska-uniform-six.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "service": "gtts"
    },
    "original_audio": "steak-emma-whiskey-uncle.mp3",
    "final_audio": "steak-emma-whiskey-uncle.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "service": "gtts"
    },
    "original_audio": "island-equal-alabama-harry.mp3",
    "final_audio": "island-equal-alabama-harry.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "berlin-finch-juliet-robert.mp3",
    "final_audio": "berlin-finch-juliet-robert.mp3"
  },
  {
    "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "service": "gtts"
    },
    "original_audio": "asparagus-bakerloo-may-alpha.mp3",
    "final_audio": "asparagus-bakerloo-may-alpha.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
      "service": "gtts"
    },
    "original_audio": "maryland-nebraska-uniform-six.mp3",
    "final_audio": "maryland-nebraska-uniform-six.mp3"
  },
  {
    "input_text": "In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
    "input_data": {
      "input_text": "In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up.",
      "service": "gtts"
    },
    "original_audio": "blue-oxygen-network-queen.mp3",
    "final_audio": "blue-oxygen-network-queen.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "kilo-kitten-rugby-fix.mp3",
    "final_audio": "kilo-kitten-rugby-fix.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "service": "gtts"
    },
    "original_audio": "ten-september-maine-alabama.mp3",
    "final_audio": "ten-september-maine-alabama.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "service": "gtts"
    },
    "original_audio": "tennessee-muppet-dakota-east.mp3",
    "final_audio": "tennessee-muppet-dakota-east.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "service": "gtts"
    },
    "original_audio": "steak-emma-whiskey-uncle.mp3",
    "final_audio": "steak-emma-whiskey-uncle.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "service": "gtts"
    },
    "original_audio": "island-equal-alabama-harry.mp3",
    "final_audio": "island-equal-alabama-harry.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "berlin-finch-juliet-robert.mp3",
    "final_audio": "berlin-finch-juliet-robert.mp3"
  },
  {
    "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "service": "gtts"
    },
    "original_audio": "asparagus-bakerloo-may-alpha.mp3",
    "final_audio": "asparagus-bakerloo-may-alpha.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
      "service": "gtts"
    },
    "original_audio": "maryland-nebraska-uniform-six.mp3",
    "final_audio": "maryland-nebraska-uniform-six.mp3"
  },
  {
    "input_text": "In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up. This is shown schematically on the left of the screen.",
    "input_data": {
      "input_text": "In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up. This is shown schematically on the left of the screen.",
      "service": "gtts"
    },
    "original_audio": "echo-fanta-yellow-gee.mp3",
    "final_audio": "echo-fanta-yellow-gee.mp3"
  },
  {
    "input_text": "Note the following to things about E first:",
    "input_data": {
      "input_text": "Note the following to things about E first:",
      "service": "gtts"
    },
    "original_audio": "yellow-william-gee-mars.mp3",
    "final_audio": "yellow-william-gee-mars.mp3"
  },
  {
    "input_text": "Note the following to things about E first:",
    "input_data": {
      "input_text": "Note the following to things about E first:",
      "service": "gtts"
    },
    "original_audio": "yellow-william-gee-mars.mp3",
    "final_audio": "yellow-william-gee-mars.mp3"
  },
  {
    "input_text": "Note the following to things about E first:",
    "input_data": {
      "input_text": "Note the following to things about E first:",
      "service": "gtts"
    },
    "original_audio": "yellow-william-gee-mars.mp3",
    "final_audio": "yellow-william-gee-mars.mp3"
  },
  {
    "input_text": "Note the following to things about E first:",
    "input_data": {
      "input_text": "Note the following to things about E first:",
      "service": "gtts"
    },
    "original_audio": "yellow-william-gee-mars.mp3",
    "final_audio": "yellow-william-gee-mars.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
      "service": "gtts"
    },
    "original_audio": "skylark-emma-delta-ack.mp3",
    "final_audio": "skylark-emma-delta-ack.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
      "service": "gtts"
    },
    "original_audio": "skylark-emma-delta-ack.mp3",
    "final_audio": "skylark-emma-delta-ack.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
      "service": "gtts"
    },
    "original_audio": "skylark-emma-delta-ack.mp3",
    "final_audio": "skylark-emma-delta-ack.mp3"
  },
  {
    "input_text": "Since we can partition S2 as follows",
    "input_data": {
      "input_text": "Since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "william-yellow-low-chicken.mp3",
    "final_audio": "william-yellow-low-chicken.mp3"
  },
  {
    "input_text": "We can combine all of this to get this equation.",
    "input_data": {
      "input_text": "We can combine all of this to get this equation.",
      "service": "gtts"
    },
    "original_audio": "lamp-south-seven-winner.mp3",
    "final_audio": "lamp-south-seven-winner.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
      "service": "gtts"
    },
    "original_audio": "skylark-emma-delta-ack.mp3",
    "final_audio": "skylark-emma-delta-ack.mp3"
  },
  {
    "input_text": "Since we can partition S2 as follows",
    "input_data": {
      "input_text": "Since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "william-yellow-low-chicken.mp3",
    "final_audio": "william-yellow-low-chicken.mp3"
  },
  {
    "input_text": "We can combine all of this to get THIS equation.",
    "input_data": {
      "input_text": "We can combine all of this to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "carpet-winter-jupiter-tennessee.mp3",
    "final_audio": "carpet-winter-jupiter-tennessee.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
      "service": "gtts"
    },
    "original_audio": "skylark-emma-delta-ack.mp3",
    "final_audio": "skylark-emma-delta-ack.mp3"
  },
  {
    "input_text": "Since we can partition S2 as follows",
    "input_data": {
      "input_text": "Since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "william-yellow-low-chicken.mp3",
    "final_audio": "william-yellow-low-chicken.mp3"
  },
  {
    "input_text": "We can combine all of this to get THIS equation.",
    "input_data": {
      "input_text": "We can combine all of this to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "carpet-winter-jupiter-tennessee.mp3",
    "final_audio": "carpet-winter-jupiter-tennessee.mp3"
  },
  {
    "input_text": "We can combine all of this to get THIS equation.",
    "input_data": {
      "input_text": "We can combine all of this to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "carpet-winter-jupiter-tennessee.mp3",
    "final_audio": "carpet-winter-jupiter-tennessee.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
      "service": "gtts"
    },
    "original_audio": "skylark-emma-delta-ack.mp3",
    "final_audio": "skylark-emma-delta-ack.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
      "service": "gtts"
    },
    "original_audio": "skylark-emma-delta-ack.mp3",
    "final_audio": "skylark-emma-delta-ack.mp3"
  },
  {
    "input_text": "Since we can partition S2 as follows",
    "input_data": {
      "input_text": "Since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "william-yellow-low-chicken.mp3",
    "final_audio": "william-yellow-low-chicken.mp3"
  },
  {
    "input_text": "We can combine all of this to get THIS equation.",
    "input_data": {
      "input_text": "We can combine all of this to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "carpet-winter-jupiter-tennessee.mp3",
    "final_audio": "carpet-winter-jupiter-tennessee.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "service": "gtts"
    },
    "original_audio": "arkansas-cold-cold-september.mp3",
    "final_audio": "arkansas-cold-cold-september.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
      "service": "gtts"
    },
    "original_audio": "skylark-emma-delta-ack.mp3",
    "final_audio": "skylark-emma-delta-ack.mp3"
  },
  {
    "input_text": "Since we can partition S2 as follows",
    "input_data": {
      "input_text": "Since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "william-yellow-low-chicken.mp3",
    "final_audio": "william-yellow-low-chicken.mp3"
  },
  {
    "input_text": "We can combine all of this to get THIS equation.",
    "input_data": {
      "input_text": "We can combine all of this to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "carpet-winter-jupiter-tennessee.mp3",
    "final_audio": "carpet-winter-jupiter-tennessee.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "service": "gtts"
    },
    "original_audio": "arkansas-cold-cold-september.mp3",
    "final_audio": "arkansas-cold-cold-september.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2.",
      "service": "gtts"
    },
    "original_audio": "skylark-emma-delta-ack.mp3",
    "final_audio": "skylark-emma-delta-ack.mp3"
  },
  {
    "input_text": "Since we can partition S2 as follows",
    "input_data": {
      "input_text": "Since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "william-yellow-low-chicken.mp3",
    "final_audio": "william-yellow-low-chicken.mp3"
  },
  {
    "input_text": "We can combine all of this to get THIS equation.",
    "input_data": {
      "input_text": "We can combine all of this to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "carpet-winter-jupiter-tennessee.mp3",
    "final_audio": "carpet-winter-jupiter-tennessee.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "service": "gtts"
    },
    "original_audio": "arkansas-cold-cold-september.mp3",
    "final_audio": "arkansas-cold-cold-september.mp3"
  },
  {
    "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
    "input_data": {
      "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
      "service": "gtts"
    },
    "original_audio": "sad-double-india-robert.mp3",
    "final_audio": "sad-double-india-robert.mp3"
  },
  {
    "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "service": "gtts"
    },
    "original_audio": "washington-uranus-delta-lima.mp3",
    "final_audio": "washington-uranus-delta-lima.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
      "service": "gtts"
    },
    "original_audio": "quebec-november-apart-sierra.mp3",
    "final_audio": "quebec-november-apart-sierra.mp3"
  },
  {
    "input_text": "Now, since we can partition S2 as follows",
    "input_data": {
      "input_text": "Now, since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "foxtrot-april-low-mobile.mp3",
    "final_audio": "foxtrot-april-low-mobile.mp3"
  },
  {
    "input_text": "we can combine all of these to get THIS equation.",
    "input_data": {
      "input_text": "we can combine all of these to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "alaska-november-monkey-bakerloo.mp3",
    "final_audio": "alaska-november-monkey-bakerloo.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "service": "gtts"
    },
    "original_audio": "arkansas-cold-cold-september.mp3",
    "final_audio": "arkansas-cold-cold-september.mp3"
  },
  {
    "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
    "input_data": {
      "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
      "service": "gtts"
    },
    "original_audio": "sad-double-india-robert.mp3",
    "final_audio": "sad-double-india-robert.mp3"
  },
  {
    "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "service": "gtts"
    },
    "original_audio": "washington-uranus-delta-lima.mp3",
    "final_audio": "washington-uranus-delta-lima.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
      "service": "gtts"
    },
    "original_audio": "quebec-november-apart-sierra.mp3",
    "final_audio": "quebec-november-apart-sierra.mp3"
  },
  {
    "input_text": "Now, since we can partition S2 as follows",
    "input_data": {
      "input_text": "Now, since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "foxtrot-april-low-mobile.mp3",
    "final_audio": "foxtrot-april-low-mobile.mp3"
  },
  {
    "input_text": "we can combine all of these to get THIS equation.",
    "input_data": {
      "input_text": "we can combine all of these to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "alaska-november-monkey-bakerloo.mp3",
    "final_audio": "alaska-november-monkey-bakerloo.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "service": "gtts"
    },
    "original_audio": "arkansas-cold-cold-september.mp3",
    "final_audio": "arkansas-cold-cold-september.mp3"
  },
  {
    "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
    "input_data": {
      "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
      "service": "gtts"
    },
    "original_audio": "sad-double-india-robert.mp3",
    "final_audio": "sad-double-india-robert.mp3"
  },
  {
    "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "service": "gtts"
    },
    "original_audio": "washington-uranus-delta-lima.mp3",
    "final_audio": "washington-uranus-delta-lima.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
      "service": "gtts"
    },
    "original_audio": "quebec-november-apart-sierra.mp3",
    "final_audio": "quebec-november-apart-sierra.mp3"
  },
  {
    "input_text": "Now, since we can partition S2 as follows",
    "input_data": {
      "input_text": "Now, since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "foxtrot-april-low-mobile.mp3",
    "final_audio": "foxtrot-april-low-mobile.mp3"
  },
  {
    "input_text": "we can combine all of these to get THIS equation.",
    "input_data": {
      "input_text": "we can combine all of these to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "alaska-november-monkey-bakerloo.mp3",
    "final_audio": "alaska-november-monkey-bakerloo.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "service": "gtts"
    },
    "original_audio": "arkansas-cold-cold-september.mp3",
    "final_audio": "arkansas-cold-cold-september.mp3"
  },
  {
    "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
    "input_data": {
      "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
      "service": "gtts"
    },
    "original_audio": "sad-double-india-robert.mp3",
    "final_audio": "sad-double-india-robert.mp3"
  },
  {
    "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "service": "gtts"
    },
    "original_audio": "washington-uranus-delta-lima.mp3",
    "final_audio": "washington-uranus-delta-lima.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
      "service": "gtts"
    },
    "original_audio": "quebec-november-apart-sierra.mp3",
    "final_audio": "quebec-november-apart-sierra.mp3"
  },
  {
    "input_text": "Now, since we can partition S2 as follows",
    "input_data": {
      "input_text": "Now, since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "foxtrot-april-low-mobile.mp3",
    "final_audio": "foxtrot-april-low-mobile.mp3"
  },
  {
    "input_text": "we can combine all of these to get THIS equation.",
    "input_data": {
      "input_text": "we can combine all of these to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "alaska-november-monkey-bakerloo.mp3",
    "final_audio": "alaska-november-monkey-bakerloo.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "service": "gtts"
    },
    "original_audio": "arkansas-cold-cold-september.mp3",
    "final_audio": "arkansas-cold-cold-september.mp3"
  },
  {
    "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
    "input_data": {
      "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
      "service": "gtts"
    },
    "original_audio": "sad-double-india-robert.mp3",
    "final_audio": "sad-double-india-robert.mp3"
  },
  {
    "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "service": "gtts"
    },
    "original_audio": "washington-uranus-delta-lima.mp3",
    "final_audio": "washington-uranus-delta-lima.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
      "service": "gtts"
    },
    "original_audio": "quebec-november-apart-sierra.mp3",
    "final_audio": "quebec-november-apart-sierra.mp3"
  },
  {
    "input_text": "Now, since we can partition S2 as follows",
    "input_data": {
      "input_text": "Now, since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "foxtrot-april-low-mobile.mp3",
    "final_audio": "foxtrot-april-low-mobile.mp3"
  },
  {
    "input_text": "we can combine all of these to get THIS equation.",
    "input_data": {
      "input_text": "we can combine all of these to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "alaska-november-monkey-bakerloo.mp3",
    "final_audio": "alaska-november-monkey-bakerloo.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "service": "gtts"
    },
    "original_audio": "arkansas-cold-cold-september.mp3",
    "final_audio": "arkansas-cold-cold-september.mp3"
  },
  {
    "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
    "input_data": {
      "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
      "service": "gtts"
    },
    "original_audio": "sad-double-india-robert.mp3",
    "final_audio": "sad-double-india-robert.mp3"
  },
  {
    "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "service": "gtts"
    },
    "original_audio": "washington-uranus-delta-lima.mp3",
    "final_audio": "washington-uranus-delta-lima.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
      "service": "gtts"
    },
    "original_audio": "quebec-november-apart-sierra.mp3",
    "final_audio": "quebec-november-apart-sierra.mp3"
  },
  {
    "input_text": "Now, since we can partition S2 as follows",
    "input_data": {
      "input_text": "Now, since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "foxtrot-april-low-mobile.mp3",
    "final_audio": "foxtrot-april-low-mobile.mp3"
  },
  {
    "input_text": "we can combine all of these to get THIS equation.",
    "input_data": {
      "input_text": "we can combine all of these to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "alaska-november-monkey-bakerloo.mp3",
    "final_audio": "alaska-november-monkey-bakerloo.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "service": "gtts"
    },
    "original_audio": "arkansas-cold-cold-september.mp3",
    "final_audio": "arkansas-cold-cold-september.mp3"
  },
  {
    "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
    "input_data": {
      "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
      "service": "gtts"
    },
    "original_audio": "sad-double-india-robert.mp3",
    "final_audio": "sad-double-india-robert.mp3"
  },
  {
    "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "service": "gtts"
    },
    "original_audio": "washington-uranus-delta-lima.mp3",
    "final_audio": "washington-uranus-delta-lima.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
      "service": "gtts"
    },
    "original_audio": "quebec-november-apart-sierra.mp3",
    "final_audio": "quebec-november-apart-sierra.mp3"
  },
  {
    "input_text": "Now, since we can partition S2 as follows",
    "input_data": {
      "input_text": "Now, since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "foxtrot-april-low-mobile.mp3",
    "final_audio": "foxtrot-april-low-mobile.mp3"
  },
  {
    "input_text": "we can combine all of these to get THIS equation.",
    "input_data": {
      "input_text": "we can combine all of these to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "alaska-november-monkey-bakerloo.mp3",
    "final_audio": "alaska-november-monkey-bakerloo.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "service": "gtts"
    },
    "original_audio": "arkansas-cold-cold-september.mp3",
    "final_audio": "arkansas-cold-cold-september.mp3"
  },
  {
    "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
    "input_data": {
      "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
      "service": "gtts"
    },
    "original_audio": "sad-double-india-robert.mp3",
    "final_audio": "sad-double-india-robert.mp3"
  },
  {
    "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "service": "gtts"
    },
    "original_audio": "washington-uranus-delta-lima.mp3",
    "final_audio": "washington-uranus-delta-lima.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
      "service": "gtts"
    },
    "original_audio": "quebec-november-apart-sierra.mp3",
    "final_audio": "quebec-november-apart-sierra.mp3"
  },
  {
    "input_text": "Now, since we can partition S2 as follows",
    "input_data": {
      "input_text": "Now, since we can partition S2 as follows",
      "service": "gtts"
    },
    "original_audio": "foxtrot-april-low-mobile.mp3",
    "final_audio": "foxtrot-april-low-mobile.mp3"
  },
  {
    "input_text": "we can combine all of these to get THIS equation.",
    "input_data": {
      "input_text": "we can combine all of these to get THIS equation.",
      "service": "gtts"
    },
    "original_audio": "alaska-november-monkey-bakerloo.mp3",
    "final_audio": "alaska-november-monkey-bakerloo.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "service": "gtts"
    },
    "original_audio": "arkansas-cold-cold-september.mp3",
    "final_audio": "arkansas-cold-cold-september.mp3"
  },
  {
    "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
    "input_data": {
      "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
      "service": "gtts"
    },
    "original_audio": "sad-double-india-robert.mp3",
    "final_audio": "sad-double-india-robert.mp3"
  },
  {
    "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately would not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "service": "gtts"
    },
    "original_audio": "washington-uranus-delta-lima.mp3",
    "final_audio": "washington-uranus-delta-lima.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere. Let's see this in 3D",
    "input_data": {
      "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere. Let's see this in 3D",
      "service": "gtts"
    },
    "original_audio": "florida-stream-six-bluebird.mp3",
    "final_audio": "florida-stream-six-bluebird.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "service": "gtts"
    },
    "original_audio": "ten-vermont-sodium-uncle.mp3",
    "final_audio": "ten-vermont-sodium-uncle.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "service": "gtts"
    },
    "original_audio": "apart-dakota-glucose-purple.mp3",
    "final_audio": "apart-dakota-glucose-purple.mp3"
  },
  {
    "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere.",
    "input_data": {
      "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere.",
      "service": "gtts"
    },
    "original_audio": "comet-venus-red-bluebird.mp3",
    "final_audio": "comet-venus-red-bluebird.mp3"
  },
  {
    "input_text": "Let's see this in 3D",
    "input_data": {
      "input_text": "Let's see this in 3D",
      "service": "gtts"
    },
    "original_audio": "eighteen-venus-virginia-six.mp3",
    "final_audio": "eighteen-venus-virginia-six.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "service": "gtts"
    },
    "original_audio": "lake-mango-october-uniform.mp3",
    "final_audio": "lake-mango-october-uniform.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "service": "gtts"
    },
    "original_audio": "lake-mango-october-uniform.mp3",
    "final_audio": "lake-mango-october-uniform.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "service": "gtts"
    },
    "original_audio": "item-ink-bluebird-north.mp3",
    "final_audio": "item-ink-bluebird-north.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "service": "gtts"
    },
    "original_audio": "lake-mango-october-uniform.mp3",
    "final_audio": "lake-mango-october-uniform.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "service": "gtts"
    },
    "original_audio": "item-ink-bluebird-north.mp3",
    "final_audio": "item-ink-bluebird-north.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "service": "gtts"
    },
    "original_audio": "xray-nineteen-mirror-glucose.mp3",
    "final_audio": "xray-nineteen-mirror-glucose.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "service": "gtts"
    },
    "original_audio": "lake-mango-october-uniform.mp3",
    "final_audio": "lake-mango-october-uniform.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "service": "gtts"
    },
    "original_audio": "item-ink-bluebird-north.mp3",
    "final_audio": "item-ink-bluebird-north.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "service": "gtts"
    },
    "original_audio": "xray-nineteen-mirror-glucose.mp3",
    "final_audio": "xray-nineteen-mirror-glucose.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "service": "gtts"
    },
    "original_audio": "lake-mango-october-uniform.mp3",
    "final_audio": "lake-mango-october-uniform.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "service": "gtts"
    },
    "original_audio": "item-ink-bluebird-north.mp3",
    "final_audio": "item-ink-bluebird-north.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "service": "gtts"
    },
    "original_audio": "xray-nineteen-mirror-glucose.mp3",
    "final_audio": "xray-nineteen-mirror-glucose.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "service": "gtts"
    },
    "original_audio": "lake-mango-october-uniform.mp3",
    "final_audio": "lake-mango-october-uniform.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "service": "gtts"
    },
    "original_audio": "item-ink-bluebird-north.mp3",
    "final_audio": "item-ink-bluebird-north.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "service": "gtts"
    },
    "original_audio": "xray-nineteen-mirror-glucose.mp3",
    "final_audio": "xray-nineteen-mirror-glucose.mp3"
  },
  {
    "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1.",
    "input_data": {
      "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1.",
      "service": "gtts"
    },
    "original_audio": "wolfram-steak-five-paris.mp3",
    "final_audio": "wolfram-steak-five-paris.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "service": "gtts"
    },
    "original_audio": "lake-mango-october-uniform.mp3",
    "final_audio": "lake-mango-october-uniform.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "service": "gtts"
    },
    "original_audio": "item-ink-bluebird-north.mp3",
    "final_audio": "item-ink-bluebird-north.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "service": "gtts"
    },
    "original_audio": "xray-nineteen-mirror-glucose.mp3",
    "final_audio": "xray-nineteen-mirror-glucose.mp3"
  },
  {
    "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
    "input_data": {
      "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
      "service": "gtts"
    },
    "original_audio": "nine-angel-earth-stream.mp3",
    "final_audio": "nine-angel-earth-stream.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "service": "gtts"
    },
    "original_audio": "lake-mango-october-uniform.mp3",
    "final_audio": "lake-mango-october-uniform.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "service": "gtts"
    },
    "original_audio": "item-ink-bluebird-north.mp3",
    "final_audio": "item-ink-bluebird-north.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "service": "gtts"
    },
    "original_audio": "xray-nineteen-mirror-glucose.mp3",
    "final_audio": "xray-nineteen-mirror-glucose.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "service": "gtts"
    },
    "original_audio": "lake-mango-october-uniform.mp3",
    "final_audio": "lake-mango-october-uniform.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "service": "gtts"
    },
    "original_audio": "item-ink-bluebird-north.mp3",
    "final_audio": "item-ink-bluebird-north.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "service": "gtts"
    },
    "original_audio": "xray-nineteen-mirror-glucose.mp3",
    "final_audio": "xray-nineteen-mirror-glucose.mp3"
  },
  {
    "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
    "input_data": {
      "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
      "service": "gtts"
    },
    "original_audio": "nine-angel-earth-stream.mp3",
    "final_audio": "nine-angel-earth-stream.mp3"
  },
  {
    "input_text": "Sometimes however, we cannot say what the size is of a certain set. In this section, we will give an example of such a non-measurable set.",
    "input_data": {
      "input_text": "Sometimes however, we cannot say what the size is of a certain set. In this section, we will give an example of such a non-measurable set.",
      "service": "gtts"
    },
    "original_audio": "monkey-bulldog-coffee-charlie.mp3",
    "final_audio": "monkey-bulldog-coffee-charlie.mp3"
  },
  {
    "input_text": "We will create a non-measurable subset on S1.",
    "input_data": {
      "input_text": "We will create a non-measurable subset on S1.",
      "service": "gtts"
    },
    "original_audio": "high-hydrogen-bakerloo-charlie.mp3",
    "final_audio": "high-hydrogen-bakerloo-charlie.mp3"
  },
  {
    "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "input_data": {
      "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
      "service": "gtts"
    },
    "original_audio": "ink-salami-spaghetti-queen.mp3",
    "final_audio": "ink-salami-spaghetti-queen.mp3"
  },
  {
    "input_text": "Let's look at how such an equivalence class is created by looking at the point 1, 0.",
    "input_data": {
      "input_text": "Let's look at how such an equivalence class is created by looking at the point 1, 0.",
      "service": "gtts"
    },
    "original_audio": "orange-bravo-diet-floor.mp3",
    "final_audio": "orange-bravo-diet-floor.mp3"
  },
  {
    "input_text": "we will use the notation p in brackets to mean the equivalence class of p. Of course we didn't see all the points in the equivalence class, since there are infinitely many.",
    "input_data": {
      "input_text": "we will use the notation p in brackets to mean the equivalence class of p. Of course we didn't see all the points in the equivalence class, since there are infinitely many.",
      "service": "gtts"
    },
    "original_audio": "oxygen-william-river-paris.mp3",
    "final_audio": "oxygen-william-river-paris.mp3"
  },
  {
    "input_text": "Let's see that process for a few more points.",
    "input_data": {
      "input_text": "Let's see that process for a few more points.",
      "service": "gtts"
    },
    "original_audio": "orange-eighteen-video-zebra.mp3",
    "final_audio": "orange-eighteen-video-zebra.mp3"
  },
  {
    "input_text": "Now, we can do this for all points of the unit circle, so that we have a collection of all equivalence classes.",
    "input_data": {
      "input_text": "Now, we can do this for all points of the unit circle, so that we have a collection of all equivalence classes.",
      "service": "gtts"
    },
    "original_audio": "paris-ink-magnesium-bluebird.mp3",
    "final_audio": "paris-ink-magnesium-bluebird.mp3"
  },
  {
    "input_text": "Using the Axiom of Choice, we can pick exactly one point from each of these equivalence classes. This will be our non-measurable set M.",
    "input_data": {
      "input_text": "Using the Axiom of Choice, we can pick exactly one point from each of these equivalence classes. This will be our non-measurable set M.",
      "service": "gtts"
    },
    "original_audio": "cardinal-april-sixteen-emma.mp3",
    "final_audio": "cardinal-april-sixteen-emma.mp3"
  },
  {
    "input_text": "Notice now that we can form the whole circle again by looking at all rational rotations of M",
    "input_data": {
      "input_text": "Notice now that we can form the whole circle again by looking at all rational rotations of M",
      "service": "gtts"
    },
    "original_audio": "mango-five-idaho-lithium.mp3",
    "final_audio": "mango-five-idaho-lithium.mp3"
  },
  {
    "input_text": "By sigma additivity and rotation invariance, we then get the following",
    "input_data": {
      "input_text": "By sigma additivity and rotation invariance, we then get the following",
      "service": "gtts"
    },
    "original_audio": "enemy-autumn-eleven-whiskey.mp3",
    "final_audio": "enemy-autumn-eleven-whiskey.mp3"
  },
  {
    "input_text": "So then, what is mu of M?",
    "input_data": {
      "input_text": "So then, what is mu of M?",
      "service": "gtts"
    },
    "original_audio": "green-maine-fanta-tennis.mp3",
    "final_audio": "green-maine-fanta-tennis.mp3"
  },
  {
    "input_text": "If we take mu of M is zero, then the measure of the unit circle must also be zero.",
    "input_data": {
      "input_text": "If we take mu of M is zero, then the measure of the unit circle must also be zero.",
      "service": "gtts"
    },
    "original_audio": "march-illinois-foxtrot-lemon.mp3",
    "final_audio": "march-illinois-foxtrot-lemon.mp3"
  },
  {
    "input_text": "But if we take mu of M to be nonzero, then the measure of the unit circle must be infinite!",
    "input_data": {
      "input_text": "But if we take mu of M to be nonzero, then the measure of the unit circle must be infinite!",
      "service": "gtts"
    },
    "original_audio": "seventeen-mike-robert-mississippi.mp3",
    "final_audio": "seventeen-mike-robert-mississippi.mp3"
  },
  {
    "input_text": "It should be clear that neither of these options is a good choice.",
    "input_data": {
      "input_text": "It should be clear that neither of these options is a good choice.",
      "service": "gtts"
    },
    "original_audio": "carpet-emma-triple-indigo.mp3",
    "final_audio": "carpet-emma-triple-indigo.mp3"
  },
  {
    "input_text": "Sometimes however, we cannot say what the size is of a certain set. In this section, we will give an example of such a non-measurable set.",
    "input_data": {
      "input_text": "Sometimes however, we cannot say what the size is of a certain set. In this section, we will give an example of such a non-measurable set.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "jig-glucose-black-pip.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4399999,
        "text_offset": 0,
        "word_length": 10,
        "text": " Sometimes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10300000,
        "text_offset": 11,
        "word_length": 8,
        "text": " however",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 19,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 20,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 23,
        "word_length": 7,
        "text": " cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 30,
        "word_length": 4,
        "text": " say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 34,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 39,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "text_offset": 43,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 48,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 51,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28700000,
        "text_offset": 53,
        "word_length": 8,
        "text": " certain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 61,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33899999,
        "text_offset": 65,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39099998,
        "text_offset": 68,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 69,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 72,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 77,
        "word_length": 8,
        "text": " section",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 86,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 89,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 94,
        "word_length": 5,
        "text": " give",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 99,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 102,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 110,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 113,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 118,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 120,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 124,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 125,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 127,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 129,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 135,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 139,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Sometimes, however, we cannot say what the size of a certain set is. In this section, we will give an example of such a non-measurable set.",
    "final_audio": "jig-glucose-black-pip.mp3"
  },
  {
    "input_text": "We will create a non-measurable subset on S1.",
    "input_data": {
      "input_text": "We will create a non-measurable subset on S1.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "montana-north-carbon-tennis.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7499999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 8,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 15,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 17,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 21,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299999,
        "text_offset": 22,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 24,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 26,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 32,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 39,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199999,
        "text_offset": 42,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36999999,
        "text_offset": 44,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will create a non-measurable subset on S1.",
    "final_audio": "montana-north-carbon-tennis.mp3"
  },
  {
    "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "input_data": {
      "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "violet-yankee-item-mobile.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 16,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 19,
        "word_length": 9,
        "text": " creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 28,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18100000,
        "text_offset": 36,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 40,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25899999,
        "text_offset": 48,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 51,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899999,
        "text_offset": 55,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 61,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 64,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 68,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 73,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41099998,
        "text_offset": 80,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48299996,
        "text_offset": 81,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49099998,
        "text_offset": 84,
        "word_length": 7,
        "text": " taking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50199999,
        "text_offset": 91,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53499999,
        "text_offset": 95,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 99,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58899998,
        "text_offset": 106,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60599999,
        "text_offset": 109,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62699999,
        "text_offset": 112,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68399999,
        "text_offset": 123,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199999,
        "text_offset": 128,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71699998,
        "text_offset": 134,
        "word_length": 7,
        "text": " exists",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76799998,
        "text_offset": 141,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79699995,
        "text_offset": 146,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83399996,
        "text_offset": 155,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 164,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 167,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 172,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 176,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 182,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 188,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 191,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 195,
        "word_length": 7,
        "text": " second",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 202,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will do this by creating equivalence classes on the point of the unit circle. By taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "final_audio": "violet-yankee-item-mobile.mp3"
  },
  {
    "input_text": "Let's look at how such an equivalence class is created by looking at the point 1, 0.",
    "input_data": {
      "input_text": "Let's look at how such an equivalence class is created by looking at the point 1, 0.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "item-hydrogen-colorado-mango.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14699999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 14,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 18,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 23,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099998,
        "text_offset": 26,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 37,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31100000,
        "text_offset": 43,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699999,
        "text_offset": 46,
        "word_length": 8,
        "text": " created",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35299998,
        "text_offset": 54,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40999997,
        "text_offset": 65,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42500000,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43799998,
        "text_offset": 72,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 75,
        "word_length": 2,
        "text": "10",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49700000,
        "text_offset": 77,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at how such an equivalent class is created by looking at the 0.10.",
    "final_audio": "item-hydrogen-colorado-mango.mp3"
  },
  {
    "input_text": "we will use the notation p in brackets to mean the equivalence class of p. Of course we didn't see all the points in the equivalence class, since there are infinitely many.",
    "input_data": {
      "input_text": "we will use the notation p in brackets to mean the equivalence class of p. Of course we didn't see all the points in the equivalence class, since there are infinitely many.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "two-wolfram-steak-snake.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12799999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 8,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 12,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21099998,
        "text_offset": 16,
        "word_length": 9,
        "text": " notation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25099998,
        "text_offset": 25,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27299998,
        "text_offset": 27,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 30,
        "word_length": 9,
        "text": " brackets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799998,
        "text_offset": 39,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 42,
        "word_length": 5,
        "text": " mean",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 47,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40099998,
        "text_offset": 51,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199999,
        "text_offset": 59,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45399999,
        "text_offset": 63,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49900000,
        "text_offset": 69,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51299998,
        "text_offset": 72,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56799998,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 75,
        "word_length": 3,
        "text": " Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 78,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 86,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 89,
        "word_length": 5,
        "text": " didn",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 94,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 96,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 100,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 108,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 115,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 122,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 130,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 134,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 140,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 146,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 152,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 156,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 167,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 172,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will use the notation P in brackets to mean the equivalence class of P. Of course, we didn't see all the points in the equivalence class since there are infinitely many.",
    "final_audio": "two-wolfram-steak-snake.mp3"
  },
  {
    "input_text": "Let's see that process for a few more points.",
    "input_data": {
      "input_text": "Let's see that process for a few more points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sodium-wolfram-indigo-ceiling.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3399999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6599999,
        "text_offset": 10,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 15,
        "word_length": 8,
        "text": " process",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 23,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 27,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 29,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 33,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 38,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20599998,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see that process for a few more points.",
    "final_audio": "sodium-wolfram-indigo-ceiling.mp3"
  },
  {
    "input_text": "Now, we can do this for all points of the unit circle, so that we have a collection of all equivalence classes.",
    "input_data": {
      "input_text": "Now, we can do this for all points of the unit circle, so that we have a collection of all equivalence classes.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sweet-saturn-jig-timing.mp3",
    "word_boundaries": [
      {
        "audio_offset": 11799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 4,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 7,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 11,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 14,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 19,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 23,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 27,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 34,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 37,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30399998,
        "text_offset": 41,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699998,
        "text_offset": 46,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 53,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37899998,
        "text_offset": 56,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 61,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 64,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 69,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 71,
        "word_length": 11,
        "text": " collection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 82,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 85,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 89,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 97,
        "word_length": 4,
        "text": "ents",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 101,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 109,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now we can do this for all points of the unit circle so that we have a collection of all equivalents classes.",
    "final_audio": "sweet-saturn-jig-timing.mp3"
  },
  {
    "input_text": "Using the Axiom of Choice, we can pick exactly one point from each of these equivalence classes. This will be our non-measurable set M.",
    "input_data": {
      "input_text": "Using the Axiom of Choice, we can pick exactly one point from each of these equivalence classes. This will be our non-measurable set M.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "quiet-football-iowa-kentucky.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7399999,
        "text_offset": 0,
        "word_length": 6,
        "text": " Using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 6,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 10,
        "word_length": 3,
        "text": " ax",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 13,
        "word_length": 1,
        "text": "i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 14,
        "word_length": 2,
        "text": "om",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 16,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 19,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23199999,
        "text_offset": 26,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24900000,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26499999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 34,
        "word_length": 5,
        "text": " pick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31199998,
        "text_offset": 39,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 47,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38499999,
        "text_offset": 51,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42199997,
        "text_offset": 57,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44199998,
        "text_offset": 62,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47099997,
        "text_offset": 67,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48199999,
        "text_offset": 70,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 76,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 84,
        "word_length": 4,
        "text": "ents",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56299998,
        "text_offset": 88,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 96,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 97,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 102,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 107,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 110,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 114,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 118,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 119,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 121,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 123,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 129,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 133,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 135,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Using the axiom of choice, we can pick exactly one point from each of these equivalents classes. This will be our non-measurable set M.",
    "final_audio": "quiet-football-iowa-kentucky.mp3"
  },
  {
    "input_text": "Notice now that we can form the whole circle again by looking at all rational rotations of M",
    "input_data": {
      "input_text": "Notice now that we can form the whole circle again by looking at all rational rotations of M",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "eleven-artist-connecticut-nine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12400000,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 7,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 16,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 19,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 23,
        "word_length": 5,
        "text": " form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20599998,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 32,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 38,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 45,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 51,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 54,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35699999,
        "text_offset": 62,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37399998,
        "text_offset": 65,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 69,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 78,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 88,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 91,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice now that we can form the whole circle again by looking at all rational rotations of M.",
    "final_audio": "eleven-artist-connecticut-nine.mp3"
  },
  {
    "input_text": "By sigma additivity and rotation invariance, we then get the following",
    "input_data": {
      "input_text": "By sigma additivity and rotation invariance, we then get the following",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "south-oscar-vermont-butter.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 3,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16899999,
        "text_offset": 9,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 13,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 15,
        "word_length": 5,
        "text": "ivity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 20,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799999,
        "text_offset": 24,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 33,
        "word_length": 7,
        "text": " invari",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299999,
        "text_offset": 40,
        "word_length": 4,
        "text": "ance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 44,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599998,
        "text_offset": 47,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 52,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 56,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 60,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49700000,
        "text_offset": 70,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " By sigma additivity and rotation invariance we then get the following.",
    "final_audio": "south-oscar-vermont-butter.mp3"
  },
  {
    "input_text": "So then, what is mu of M?",
    "input_data": {
      "input_text": "So then, what is mu of M?",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "two-spaghetti-red-cat.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7299999,
        "text_offset": 8,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9399999,
        "text_offset": 13,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 16,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 19,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 22,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 24,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So then what is mu of m?",
    "final_audio": "two-spaghetti-red-cat.mp3"
  },
  {
    "input_text": "If we take mu of M is zero, then the measure of the unit circle must also be zero.",
    "input_data": {
      "input_text": "If we take mu of M is zero, then the measure of the unit circle must also be zero.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "carbon-connecticut-stairway-missouri.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 6,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 11,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 14,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 17,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 19,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 22,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 27,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29599999,
        "text_offset": 28,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 37,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39299999,
        "text_offset": 45,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 52,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "text_offset": 57,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49499998,
        "text_offset": 64,
        "word_length": 5,
        "text": " must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52099997,
        "text_offset": 69,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55299999,
        "text_offset": 74,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 77,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59699997,
        "text_offset": 82,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If we take mu of m as zero, then the measure of the unit circle must also be zero.",
    "final_audio": "carbon-connecticut-stairway-missouri.mp3"
  },
  {
    "input_text": "But if we take mu of M to be nonzero, then the measure of the unit circle must be infinite!",
    "input_data": {
      "input_text": "But if we take mu of M to be nonzero, then the measure of the unit circle must be infinite!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "bluebird-vegan-hot-west.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 4,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16199999,
        "text_offset": 7,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 10,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 15,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 21,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "text_offset": 23,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 26,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28099999,
        "text_offset": 29,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28599998,
        "text_offset": 33,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799998,
        "text_offset": 34,
        "word_length": 4,
        "text": "zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 38,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 39,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 48,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799998,
        "text_offset": 56,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 59,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199999,
        "text_offset": 63,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 68,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49599997,
        "text_offset": 75,
        "word_length": 5,
        "text": " must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 80,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199997,
        "text_offset": 83,
        "word_length": 9,
        "text": " infinite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58299999,
        "text_offset": 92,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " But if we take mu of m to be non-zero, then the measure of the unit circle must be infinite.",
    "final_audio": "bluebird-vegan-hot-west.mp3"
  },
  {
    "input_text": "It should be clear that neither of these options is a good choice.",
    "input_data": {
      "input_text": "It should be clear that neither of these options is a good choice.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "xray-fish-lemon-four.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4299999,
        "text_offset": 3,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6399999,
        "text_offset": 10,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 13,
        "word_length": 6,
        "text": " clear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9399999,
        "text_offset": 19,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 24,
        "word_length": 8,
        "text": " neither",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 35,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 41,
        "word_length": 8,
        "text": " options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23199999,
        "text_offset": 49,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24799998,
        "text_offset": 52,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26599999,
        "text_offset": 54,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 59,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31399999,
        "text_offset": 66,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " It should be clear that neither of these options is a good choice.",
    "final_audio": "xray-fish-lemon-four.mp3"
  },
  {
    "input_text": "Sometimes however, we cannot say what the size is of a certain set. In this section, we will give an example of such a non-measurable set.",
    "input_data": {
      "input_text": "Sometimes however, we cannot say what the size is of a certain set. In this section, we will give an example of such a non-measurable set.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "jig-glucose-black-pip.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4399999,
        "text_offset": 0,
        "word_length": 10,
        "text": " Sometimes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10300000,
        "text_offset": 11,
        "word_length": 8,
        "text": " however",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 19,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 20,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 23,
        "word_length": 7,
        "text": " cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 30,
        "word_length": 4,
        "text": " say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 34,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 39,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "text_offset": 43,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 48,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 51,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28700000,
        "text_offset": 53,
        "word_length": 8,
        "text": " certain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 61,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33899999,
        "text_offset": 65,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39099998,
        "text_offset": 68,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 69,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 72,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 77,
        "word_length": 8,
        "text": " section",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 86,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 89,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 94,
        "word_length": 5,
        "text": " give",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 99,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 102,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 110,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 113,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 118,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 120,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 124,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 125,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 127,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 129,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 135,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 139,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Sometimes, however, we cannot say what the size of a certain set is. In this section, we will give an example of such a non-measurable set.",
    "final_audio": "jig-glucose-black-pip.mp3"
  },
  {
    "input_text": "We will create a non-measurable subset on S1.",
    "input_data": {
      "input_text": "We will create a non-measurable subset on S1.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "montana-north-carbon-tennis.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7499999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 8,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 15,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 17,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 21,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299999,
        "text_offset": 22,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 24,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 26,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 32,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 39,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199999,
        "text_offset": 42,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36999999,
        "text_offset": 44,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will create a non-measurable subset on S1.",
    "final_audio": "montana-north-carbon-tennis.mp3"
  },
  {
    "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "input_data": {
      "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "violet-yankee-item-mobile.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 16,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 19,
        "word_length": 9,
        "text": " creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 28,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18100000,
        "text_offset": 36,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 40,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25899999,
        "text_offset": 48,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 51,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899999,
        "text_offset": 55,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 61,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 64,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 68,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 73,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41099998,
        "text_offset": 80,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48299996,
        "text_offset": 81,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49099998,
        "text_offset": 84,
        "word_length": 7,
        "text": " taking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50199999,
        "text_offset": 91,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53499999,
        "text_offset": 95,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 99,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58899998,
        "text_offset": 106,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60599999,
        "text_offset": 109,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62699999,
        "text_offset": 112,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68399999,
        "text_offset": 123,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199999,
        "text_offset": 128,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71699998,
        "text_offset": 134,
        "word_length": 7,
        "text": " exists",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76799998,
        "text_offset": 141,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79699995,
        "text_offset": 146,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83399996,
        "text_offset": 155,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 164,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 167,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 172,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 176,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 182,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 188,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 191,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 195,
        "word_length": 7,
        "text": " second",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 202,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will do this by creating equivalence classes on the point of the unit circle. By taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "final_audio": "violet-yankee-item-mobile.mp3"
  },
  {
    "input_text": "Let's look at how such an equivalence class is created by looking at the point 1, 0.",
    "input_data": {
      "input_text": "Let's look at how such an equivalence class is created by looking at the point 1, 0.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "item-hydrogen-colorado-mango.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14699999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 14,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 18,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 23,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099998,
        "text_offset": 26,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 37,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31100000,
        "text_offset": 43,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699999,
        "text_offset": 46,
        "word_length": 8,
        "text": " created",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35299998,
        "text_offset": 54,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40999997,
        "text_offset": 65,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42500000,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43799998,
        "text_offset": 72,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 75,
        "word_length": 2,
        "text": "10",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49700000,
        "text_offset": 77,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at how such an equivalent class is created by looking at the 0.10.",
    "final_audio": "item-hydrogen-colorado-mango.mp3"
  },
  {
    "input_text": "we will use the notation p in brackets to mean the equivalence class of p. Of course we didn't see all the points in the equivalence class, since there are infinitely many.",
    "input_data": {
      "input_text": "we will use the notation p in brackets to mean the equivalence class of p. Of course we didn't see all the points in the equivalence class, since there are infinitely many.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "two-wolfram-steak-snake.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12799999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 8,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 12,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21099998,
        "text_offset": 16,
        "word_length": 9,
        "text": " notation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25099998,
        "text_offset": 25,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27299998,
        "text_offset": 27,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 30,
        "word_length": 9,
        "text": " brackets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799998,
        "text_offset": 39,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 42,
        "word_length": 5,
        "text": " mean",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 47,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40099998,
        "text_offset": 51,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199999,
        "text_offset": 59,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45399999,
        "text_offset": 63,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49900000,
        "text_offset": 69,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51299998,
        "text_offset": 72,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56799998,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 75,
        "word_length": 3,
        "text": " Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 78,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 86,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 89,
        "word_length": 5,
        "text": " didn",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 94,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 96,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 100,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 108,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 115,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 122,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 130,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 134,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 140,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 146,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 152,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 156,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 167,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 172,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will use the notation P in brackets to mean the equivalence class of P. Of course, we didn't see all the points in the equivalence class since there are infinitely many.",
    "final_audio": "two-wolfram-steak-snake.mp3"
  },
  {
    "input_text": "Let's see that process for a few more points.",
    "input_data": {
      "input_text": "Let's see that process for a few more points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sodium-wolfram-indigo-ceiling.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3399999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6599999,
        "text_offset": 10,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 15,
        "word_length": 8,
        "text": " process",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 23,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 27,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 29,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 33,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 38,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20599998,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see that process for a few more points.",
    "final_audio": "sodium-wolfram-indigo-ceiling.mp3"
  },
  {
    "input_text": "Now, we can do this for all points of the unit circle, so that we have a collection of all equivalence classes.",
    "input_data": {
      "input_text": "Now, we can do this for all points of the unit circle, so that we have a collection of all equivalence classes.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sweet-saturn-jig-timing.mp3",
    "word_boundaries": [
      {
        "audio_offset": 11799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 4,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 7,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 11,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 14,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 19,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 23,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 27,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 34,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 37,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30399998,
        "text_offset": 41,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699998,
        "text_offset": 46,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 53,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37899998,
        "text_offset": 56,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 61,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 64,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 69,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 71,
        "word_length": 11,
        "text": " collection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 82,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 85,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 89,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 97,
        "word_length": 4,
        "text": "ents",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 101,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 109,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now we can do this for all points of the unit circle so that we have a collection of all equivalents classes.",
    "final_audio": "sweet-saturn-jig-timing.mp3"
  },
  {
    "input_text": "Using the Axiom of Choice, we can pick exactly one point from each of these equivalence classes. This will be our non-measurable set M.",
    "input_data": {
      "input_text": "Using the Axiom of Choice, we can pick exactly one point from each of these equivalence classes. This will be our non-measurable set M.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "quiet-football-iowa-kentucky.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7399999,
        "text_offset": 0,
        "word_length": 6,
        "text": " Using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 6,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 10,
        "word_length": 3,
        "text": " ax",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 13,
        "word_length": 1,
        "text": "i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 14,
        "word_length": 2,
        "text": "om",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 16,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 19,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23199999,
        "text_offset": 26,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24900000,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26499999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 34,
        "word_length": 5,
        "text": " pick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31199998,
        "text_offset": 39,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 47,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38499999,
        "text_offset": 51,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42199997,
        "text_offset": 57,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44199998,
        "text_offset": 62,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47099997,
        "text_offset": 67,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48199999,
        "text_offset": 70,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 76,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 84,
        "word_length": 4,
        "text": "ents",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56299998,
        "text_offset": 88,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 96,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 97,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 102,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 107,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 110,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 114,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 118,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 119,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 121,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 123,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 129,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 133,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 135,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Using the axiom of choice, we can pick exactly one point from each of these equivalents classes. This will be our non-measurable set M.",
    "final_audio": "quiet-football-iowa-kentucky.mp3"
  },
  {
    "input_text": "Notice now that we can form the whole circle again by looking at all rational rotations of M",
    "input_data": {
      "input_text": "Notice now that we can form the whole circle again by looking at all rational rotations of M",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "eleven-artist-connecticut-nine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12400000,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 7,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 16,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 19,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 23,
        "word_length": 5,
        "text": " form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20599998,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 32,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 38,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 45,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 51,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 54,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35699999,
        "text_offset": 62,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37399998,
        "text_offset": 65,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 69,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 78,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 88,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 91,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice now that we can form the whole circle again by looking at all rational rotations of M.",
    "final_audio": "eleven-artist-connecticut-nine.mp3"
  },
  {
    "input_text": "By sigma additivity and rotation invariance, we then get the following",
    "input_data": {
      "input_text": "By sigma additivity and rotation invariance, we then get the following",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "south-oscar-vermont-butter.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 3,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16899999,
        "text_offset": 9,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 13,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 15,
        "word_length": 5,
        "text": "ivity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 20,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799999,
        "text_offset": 24,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 33,
        "word_length": 7,
        "text": " invari",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299999,
        "text_offset": 40,
        "word_length": 4,
        "text": "ance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 44,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599998,
        "text_offset": 47,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 52,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 56,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 60,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49700000,
        "text_offset": 70,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " By sigma additivity and rotation invariance we then get the following.",
    "final_audio": "south-oscar-vermont-butter.mp3"
  },
  {
    "input_text": "So then, what is mu of M?",
    "input_data": {
      "input_text": "So then, what is mu of M?",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "two-spaghetti-red-cat.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7299999,
        "text_offset": 8,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9399999,
        "text_offset": 13,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 16,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 19,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 22,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 24,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So then what is mu of m?",
    "final_audio": "two-spaghetti-red-cat.mp3"
  },
  {
    "input_text": "If we take mu of M is zero, then the measure of the unit circle must also be zero.",
    "input_data": {
      "input_text": "If we take mu of M is zero, then the measure of the unit circle must also be zero.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "carbon-connecticut-stairway-missouri.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 6,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 11,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 14,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 17,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 19,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 22,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 27,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29599999,
        "text_offset": 28,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 37,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39299999,
        "text_offset": 45,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 52,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "text_offset": 57,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49499998,
        "text_offset": 64,
        "word_length": 5,
        "text": " must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52099997,
        "text_offset": 69,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55299999,
        "text_offset": 74,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 77,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59699997,
        "text_offset": 82,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If we take mu of m as zero, then the measure of the unit circle must also be zero.",
    "final_audio": "carbon-connecticut-stairway-missouri.mp3"
  },
  {
    "input_text": "But if we take mu of M to be nonzero, then the measure of the unit circle must be infinite!",
    "input_data": {
      "input_text": "But if we take mu of M to be nonzero, then the measure of the unit circle must be infinite!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "bluebird-vegan-hot-west.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 4,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16199999,
        "text_offset": 7,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 10,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 15,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 21,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "text_offset": 23,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 26,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28099999,
        "text_offset": 29,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28599998,
        "text_offset": 33,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799998,
        "text_offset": 34,
        "word_length": 4,
        "text": "zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 38,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 39,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 48,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799998,
        "text_offset": 56,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 59,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199999,
        "text_offset": 63,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 68,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49599997,
        "text_offset": 75,
        "word_length": 5,
        "text": " must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 80,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199997,
        "text_offset": 83,
        "word_length": 9,
        "text": " infinite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58299999,
        "text_offset": 92,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " But if we take mu of m to be non-zero, then the measure of the unit circle must be infinite.",
    "final_audio": "bluebird-vegan-hot-west.mp3"
  },
  {
    "input_text": "It should be clear that neither of these options is a good choice.",
    "input_data": {
      "input_text": "It should be clear that neither of these options is a good choice.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "xray-fish-lemon-four.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4299999,
        "text_offset": 3,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6399999,
        "text_offset": 10,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 13,
        "word_length": 6,
        "text": " clear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9399999,
        "text_offset": 19,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 24,
        "word_length": 8,
        "text": " neither",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 35,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 41,
        "word_length": 8,
        "text": " options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23199999,
        "text_offset": 49,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24799998,
        "text_offset": 52,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26599999,
        "text_offset": 54,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 59,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31399999,
        "text_offset": 66,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " It should be clear that neither of these options is a good choice.",
    "final_audio": "xray-fish-lemon-four.mp3"
  },
  {
    "input_text": "Sometimes however, we cannot say what the size is of a certain set. In this section, we will give an example of such a non-measurable set.",
    "input_data": {
      "input_text": "Sometimes however, we cannot say what the size is of a certain set. In this section, we will give an example of such a non-measurable set.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "jig-glucose-black-pip.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4399999,
        "text_offset": 0,
        "word_length": 10,
        "text": " Sometimes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10300000,
        "text_offset": 11,
        "word_length": 8,
        "text": " however",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 19,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 20,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 23,
        "word_length": 7,
        "text": " cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 30,
        "word_length": 4,
        "text": " say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 34,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 39,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "text_offset": 43,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 48,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 51,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28700000,
        "text_offset": 53,
        "word_length": 8,
        "text": " certain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 61,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33899999,
        "text_offset": 65,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39099998,
        "text_offset": 68,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 69,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 72,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 77,
        "word_length": 8,
        "text": " section",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 86,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 89,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 94,
        "word_length": 5,
        "text": " give",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 99,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 102,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 110,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 113,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 118,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 120,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 124,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 125,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 127,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 129,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 135,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 139,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Sometimes, however, we cannot say what the size of a certain set is. In this section, we will give an example of such a non-measurable set.",
    "final_audio": "jig-glucose-black-pip.mp3"
  },
  {
    "input_text": "We will create a non-measurable subset on S1.",
    "input_data": {
      "input_text": "We will create a non-measurable subset on S1.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "montana-north-carbon-tennis.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7499999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 8,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 15,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 17,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 21,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299999,
        "text_offset": 22,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 24,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 26,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 32,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 39,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199999,
        "text_offset": 42,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36999999,
        "text_offset": 44,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will create a non-measurable subset on S1.",
    "final_audio": "montana-north-carbon-tennis.mp3"
  },
  {
    "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "input_data": {
      "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "violet-yankee-item-mobile.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 16,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 19,
        "word_length": 9,
        "text": " creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 28,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18100000,
        "text_offset": 36,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 40,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25899999,
        "text_offset": 48,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 51,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899999,
        "text_offset": 55,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 61,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 64,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 68,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 73,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41099998,
        "text_offset": 80,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48299996,
        "text_offset": 81,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49099998,
        "text_offset": 84,
        "word_length": 7,
        "text": " taking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50199999,
        "text_offset": 91,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53499999,
        "text_offset": 95,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 99,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58899998,
        "text_offset": 106,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60599999,
        "text_offset": 109,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62699999,
        "text_offset": 112,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68399999,
        "text_offset": 123,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199999,
        "text_offset": 128,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71699998,
        "text_offset": 134,
        "word_length": 7,
        "text": " exists",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76799998,
        "text_offset": 141,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79699995,
        "text_offset": 146,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83399996,
        "text_offset": 155,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 164,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 167,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 172,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 176,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 182,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 188,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 191,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 195,
        "word_length": 7,
        "text": " second",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 202,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will do this by creating equivalence classes on the point of the unit circle. By taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "final_audio": "violet-yankee-item-mobile.mp3"
  },
  {
    "input_text": "Sometimes however, we cannot say what the size is of a certain set. In this section, we will give an example of such a non-measurable set.",
    "input_data": {
      "input_text": "Sometimes however, we cannot say what the size is of a certain set. In this section, we will give an example of such a non-measurable set.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "jig-glucose-black-pip.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4399999,
        "text_offset": 0,
        "word_length": 10,
        "text": " Sometimes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10300000,
        "text_offset": 11,
        "word_length": 8,
        "text": " however",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 19,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 20,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 23,
        "word_length": 7,
        "text": " cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 30,
        "word_length": 4,
        "text": " say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 34,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 39,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "text_offset": 43,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 48,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 51,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28700000,
        "text_offset": 53,
        "word_length": 8,
        "text": " certain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 61,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33899999,
        "text_offset": 65,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39099998,
        "text_offset": 68,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 69,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 72,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 77,
        "word_length": 8,
        "text": " section",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 86,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 89,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 94,
        "word_length": 5,
        "text": " give",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 99,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 102,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 110,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 113,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 118,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 120,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 124,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 125,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 127,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 129,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 135,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 139,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Sometimes, however, we cannot say what the size of a certain set is. In this section, we will give an example of such a non-measurable set.",
    "final_audio": "jig-glucose-black-pip.mp3"
  },
  {
    "input_text": "We will create a non-measurable subset on S1.",
    "input_data": {
      "input_text": "We will create a non-measurable subset on S1.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "montana-north-carbon-tennis.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7499999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 8,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 15,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 17,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 21,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299999,
        "text_offset": 22,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 24,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 26,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 32,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 39,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199999,
        "text_offset": 42,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36999999,
        "text_offset": 44,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will create a non-measurable subset on S1.",
    "final_audio": "montana-north-carbon-tennis.mp3"
  },
  {
    "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "input_data": {
      "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "violet-yankee-item-mobile.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 16,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 19,
        "word_length": 9,
        "text": " creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 28,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18100000,
        "text_offset": 36,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 40,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25899999,
        "text_offset": 48,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 51,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899999,
        "text_offset": 55,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 61,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 64,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 68,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 73,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41099998,
        "text_offset": 80,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48299996,
        "text_offset": 81,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49099998,
        "text_offset": 84,
        "word_length": 7,
        "text": " taking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50199999,
        "text_offset": 91,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53499999,
        "text_offset": 95,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 99,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58899998,
        "text_offset": 106,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60599999,
        "text_offset": 109,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62699999,
        "text_offset": 112,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68399999,
        "text_offset": 123,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199999,
        "text_offset": 128,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71699998,
        "text_offset": 134,
        "word_length": 7,
        "text": " exists",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76799998,
        "text_offset": 141,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79699995,
        "text_offset": 146,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83399996,
        "text_offset": 155,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 164,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 167,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 172,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 176,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 182,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 188,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 191,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 195,
        "word_length": 7,
        "text": " second",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 202,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will do this by creating equivalence classes on the point of the unit circle. By taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "final_audio": "violet-yankee-item-mobile.mp3"
  },
  {
    "input_text": "Let's look at how such an equivalence class is created by looking at the point 1, 0.",
    "input_data": {
      "input_text": "Let's look at how such an equivalence class is created by looking at the point 1, 0.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "item-hydrogen-colorado-mango.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14699999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 14,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 18,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 23,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099998,
        "text_offset": 26,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 37,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31100000,
        "text_offset": 43,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699999,
        "text_offset": 46,
        "word_length": 8,
        "text": " created",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35299998,
        "text_offset": 54,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40999997,
        "text_offset": 65,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42500000,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43799998,
        "text_offset": 72,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 75,
        "word_length": 2,
        "text": "10",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49700000,
        "text_offset": 77,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at how such an equivalent class is created by looking at the 0.10.",
    "final_audio": "item-hydrogen-colorado-mango.mp3"
  },
  {
    "input_text": "we will use the notation p in brackets to mean the equivalence class of p. Of course we didn't see all the points in the equivalence class, since there are infinitely many.",
    "input_data": {
      "input_text": "we will use the notation p in brackets to mean the equivalence class of p. Of course we didn't see all the points in the equivalence class, since there are infinitely many.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "two-wolfram-steak-snake.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12799999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 8,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 12,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21099998,
        "text_offset": 16,
        "word_length": 9,
        "text": " notation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25099998,
        "text_offset": 25,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27299998,
        "text_offset": 27,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 30,
        "word_length": 9,
        "text": " brackets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799998,
        "text_offset": 39,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 42,
        "word_length": 5,
        "text": " mean",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 47,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40099998,
        "text_offset": 51,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199999,
        "text_offset": 59,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45399999,
        "text_offset": 63,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49900000,
        "text_offset": 69,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51299998,
        "text_offset": 72,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56799998,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 75,
        "word_length": 3,
        "text": " Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 78,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 86,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 89,
        "word_length": 5,
        "text": " didn",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 94,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 96,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 100,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 108,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 115,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 122,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 130,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 134,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 140,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 146,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 152,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 156,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 167,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 172,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will use the notation P in brackets to mean the equivalence class of P. Of course, we didn't see all the points in the equivalence class since there are infinitely many.",
    "final_audio": "two-wolfram-steak-snake.mp3"
  },
  {
    "input_text": "Let's see that process for a few more points.",
    "input_data": {
      "input_text": "Let's see that process for a few more points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sodium-wolfram-indigo-ceiling.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3399999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6599999,
        "text_offset": 10,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 15,
        "word_length": 8,
        "text": " process",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 23,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 27,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 29,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 33,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 38,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20599998,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see that process for a few more points.",
    "final_audio": "sodium-wolfram-indigo-ceiling.mp3"
  },
  {
    "input_text": "Now, we can do this for all points of the unit circle, so that we have a collection of all equivalence classes.",
    "input_data": {
      "input_text": "Now, we can do this for all points of the unit circle, so that we have a collection of all equivalence classes.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sweet-saturn-jig-timing.mp3",
    "word_boundaries": [
      {
        "audio_offset": 11799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 4,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 7,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 11,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 14,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 19,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 23,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 27,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 34,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 37,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30399998,
        "text_offset": 41,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699998,
        "text_offset": 46,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 53,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37899998,
        "text_offset": 56,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 61,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 64,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 69,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 71,
        "word_length": 11,
        "text": " collection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 82,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 85,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 89,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 97,
        "word_length": 4,
        "text": "ents",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 101,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 109,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now we can do this for all points of the unit circle so that we have a collection of all equivalents classes.",
    "final_audio": "sweet-saturn-jig-timing.mp3"
  },
  {
    "input_text": "Using the Axiom of Choice, we can pick exactly one point from each of these equivalence classes. This will be our non-measurable set M.",
    "input_data": {
      "input_text": "Using the Axiom of Choice, we can pick exactly one point from each of these equivalence classes. This will be our non-measurable set M.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "quiet-football-iowa-kentucky.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7399999,
        "text_offset": 0,
        "word_length": 6,
        "text": " Using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 6,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 10,
        "word_length": 3,
        "text": " ax",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 13,
        "word_length": 1,
        "text": "i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 14,
        "word_length": 2,
        "text": "om",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 16,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 19,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23199999,
        "text_offset": 26,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24900000,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26499999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 34,
        "word_length": 5,
        "text": " pick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31199998,
        "text_offset": 39,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 47,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38499999,
        "text_offset": 51,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42199997,
        "text_offset": 57,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44199998,
        "text_offset": 62,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47099997,
        "text_offset": 67,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48199999,
        "text_offset": 70,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 76,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 84,
        "word_length": 4,
        "text": "ents",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56299998,
        "text_offset": 88,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 96,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 97,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 102,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 107,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 110,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 114,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 118,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 119,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 121,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 123,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 129,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 133,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 135,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Using the axiom of choice, we can pick exactly one point from each of these equivalents classes. This will be our non-measurable set M.",
    "final_audio": "quiet-football-iowa-kentucky.mp3"
  },
  {
    "input_text": "Notice now that we can form the whole circle again by looking at all rational rotations of M",
    "input_data": {
      "input_text": "Notice now that we can form the whole circle again by looking at all rational rotations of M",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "eleven-artist-connecticut-nine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12400000,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 7,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 16,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 19,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 23,
        "word_length": 5,
        "text": " form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20599998,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 32,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 38,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 45,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 51,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 54,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35699999,
        "text_offset": 62,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37399998,
        "text_offset": 65,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 69,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 78,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 88,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 91,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice now that we can form the whole circle again by looking at all rational rotations of M.",
    "final_audio": "eleven-artist-connecticut-nine.mp3"
  },
  {
    "input_text": "By sigma additivity and rotation invariance, we then get the following",
    "input_data": {
      "input_text": "By sigma additivity and rotation invariance, we then get the following",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "south-oscar-vermont-butter.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 3,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16899999,
        "text_offset": 9,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 13,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 15,
        "word_length": 5,
        "text": "ivity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 20,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799999,
        "text_offset": 24,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 33,
        "word_length": 7,
        "text": " invari",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299999,
        "text_offset": 40,
        "word_length": 4,
        "text": "ance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 44,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599998,
        "text_offset": 47,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 52,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 56,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 60,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49700000,
        "text_offset": 70,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " By sigma additivity and rotation invariance we then get the following.",
    "final_audio": "south-oscar-vermont-butter.mp3"
  },
  {
    "input_text": "So then, what is mu of M?",
    "input_data": {
      "input_text": "So then, what is mu of M?",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "two-spaghetti-red-cat.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7299999,
        "text_offset": 8,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9399999,
        "text_offset": 13,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 16,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 19,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 22,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 24,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So then what is mu of m?",
    "final_audio": "two-spaghetti-red-cat.mp3"
  },
  {
    "input_text": "If we take mu of M is zero, then the measure of the unit circle must also be zero.",
    "input_data": {
      "input_text": "If we take mu of M is zero, then the measure of the unit circle must also be zero.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "carbon-connecticut-stairway-missouri.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 6,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 11,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 14,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 17,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 19,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 22,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 27,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29599999,
        "text_offset": 28,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 37,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39299999,
        "text_offset": 45,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 52,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "text_offset": 57,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49499998,
        "text_offset": 64,
        "word_length": 5,
        "text": " must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52099997,
        "text_offset": 69,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55299999,
        "text_offset": 74,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 77,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59699997,
        "text_offset": 82,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If we take mu of m as zero, then the measure of the unit circle must also be zero.",
    "final_audio": "carbon-connecticut-stairway-missouri.mp3"
  },
  {
    "input_text": "But if we take mu of M to be nonzero, then the measure of the unit circle must be infinite!",
    "input_data": {
      "input_text": "But if we take mu of M to be nonzero, then the measure of the unit circle must be infinite!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "bluebird-vegan-hot-west.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 4,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16199999,
        "text_offset": 7,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 10,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 15,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 21,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "text_offset": 23,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 26,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28099999,
        "text_offset": 29,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28599998,
        "text_offset": 33,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799998,
        "text_offset": 34,
        "word_length": 4,
        "text": "zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 38,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 39,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 48,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799998,
        "text_offset": 56,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 59,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199999,
        "text_offset": 63,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 68,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49599997,
        "text_offset": 75,
        "word_length": 5,
        "text": " must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 80,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199997,
        "text_offset": 83,
        "word_length": 9,
        "text": " infinite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58299999,
        "text_offset": 92,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " But if we take mu of m to be non-zero, then the measure of the unit circle must be infinite.",
    "final_audio": "bluebird-vegan-hot-west.mp3"
  },
  {
    "input_text": "It should be clear that neither of these options is a good choice. As a result, we say that M is non-measurable.",
    "input_data": {
      "input_text": "It should be clear that neither of these options is a good choice. As a result, we say that M is non-measurable.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "blossom-solar-bravo-leopard.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7699999,
        "text_offset": 3,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9099999,
        "text_offset": 10,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 13,
        "word_length": 6,
        "text": " clear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 19,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15599999,
        "text_offset": 24,
        "word_length": 8,
        "text": " neither",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18499999,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19499999,
        "text_offset": 35,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699998,
        "text_offset": 41,
        "word_length": 8,
        "text": " options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 49,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 52,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 54,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 59,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34199998,
        "text_offset": 66,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 67,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 70,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 72,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 79,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 80,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 83,
        "word_length": 4,
        "text": " say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 87,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 92,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 94,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 97,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 101,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 102,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 104,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 106,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 112,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " It should be clear that neither of these options is a good choice. As a result, we say that M is non-measurable.",
    "final_audio": "blossom-solar-bravo-leopard.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "service": "gtts"
    },
    "original_audio": "december-washington-stream-batman.mp3",
    "final_audio": "december-washington-stream-batman.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "service": "gtts"
    },
    "original_audio": "charlie-enemy-illinois-fourteen.mp3",
    "final_audio": "charlie-enemy-illinois-fourteen.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "service": "gtts"
    },
    "original_audio": "tennessee-queen-robin-monkey.mp3",
    "final_audio": "tennessee-queen-robin-monkey.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "service": "gtts"
    },
    "original_audio": "december-washington-stream-batman.mp3",
    "final_audio": "december-washington-stream-batman.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "service": "gtts"
    },
    "original_audio": "charlie-enemy-illinois-fourteen.mp3",
    "final_audio": "charlie-enemy-illinois-fourteen.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "service": "gtts"
    },
    "original_audio": "tennessee-queen-robin-monkey.mp3",
    "final_audio": "tennessee-queen-robin-monkey.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "service": "gtts"
    },
    "original_audio": "december-washington-stream-batman.mp3",
    "final_audio": "december-washington-stream-batman.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "service": "gtts"
    },
    "original_audio": "charlie-enemy-illinois-fourteen.mp3",
    "final_audio": "charlie-enemy-illinois-fourteen.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "service": "gtts"
    },
    "original_audio": "tennessee-queen-robin-monkey.mp3",
    "final_audio": "tennessee-queen-robin-monkey.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "service": "gtts"
    },
    "original_audio": "december-washington-stream-batman.mp3",
    "final_audio": "december-washington-stream-batman.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "service": "gtts"
    },
    "original_audio": "charlie-enemy-illinois-fourteen.mp3",
    "final_audio": "charlie-enemy-illinois-fourteen.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "service": "gtts"
    },
    "original_audio": "tennessee-queen-robin-monkey.mp3",
    "final_audio": "tennessee-queen-robin-monkey.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "service": "gtts"
    },
    "original_audio": "december-washington-stream-batman.mp3",
    "final_audio": "december-washington-stream-batman.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "service": "gtts"
    },
    "original_audio": "charlie-enemy-illinois-fourteen.mp3",
    "final_audio": "charlie-enemy-illinois-fourteen.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "service": "gtts"
    },
    "original_audio": "tennessee-queen-robin-monkey.mp3",
    "final_audio": "tennessee-queen-robin-monkey.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "service": "gtts"
    },
    "original_audio": "december-washington-stream-batman.mp3",
    "final_audio": "december-washington-stream-batman.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "service": "gtts"
    },
    "original_audio": "charlie-enemy-illinois-fourteen.mp3",
    "final_audio": "charlie-enemy-illinois-fourteen.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "service": "gtts"
    },
    "original_audio": "tennessee-queen-robin-monkey.mp3",
    "final_audio": "tennessee-queen-robin-monkey.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "service": "gtts"
    },
    "original_audio": "december-washington-stream-batman.mp3",
    "final_audio": "december-washington-stream-batman.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "service": "gtts"
    },
    "original_audio": "charlie-enemy-illinois-fourteen.mp3",
    "final_audio": "charlie-enemy-illinois-fourteen.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "service": "gtts"
    },
    "original_audio": "tennessee-queen-robin-monkey.mp3",
    "final_audio": "tennessee-queen-robin-monkey.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "service": "gtts"
    },
    "original_audio": "december-washington-stream-batman.mp3",
    "final_audio": "december-washington-stream-batman.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "service": "gtts"
    },
    "original_audio": "charlie-enemy-illinois-fourteen.mp3",
    "final_audio": "charlie-enemy-illinois-fourteen.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "service": "gtts"
    },
    "original_audio": "tennessee-queen-robin-monkey.mp3",
    "final_audio": "tennessee-queen-robin-monkey.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "service": "gtts"
    },
    "original_audio": "december-washington-stream-batman.mp3",
    "final_audio": "december-washington-stream-batman.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "service": "gtts"
    },
    "original_audio": "charlie-enemy-illinois-fourteen.mp3",
    "final_audio": "charlie-enemy-illinois-fourteen.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "service": "gtts"
    },
    "original_audio": "tennessee-queen-robin-monkey.mp3",
    "final_audio": "tennessee-queen-robin-monkey.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "service": "gtts"
    },
    "original_audio": "december-washington-stream-batman.mp3",
    "final_audio": "december-washington-stream-batman.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "service": "gtts"
    },
    "original_audio": "charlie-enemy-illinois-fourteen.mp3",
    "final_audio": "charlie-enemy-illinois-fourteen.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "service": "gtts"
    },
    "original_audio": "tennessee-queen-robin-monkey.mp3",
    "final_audio": "tennessee-queen-robin-monkey.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations rotations.",
      "service": "gtts"
    },
    "original_audio": "tango-sixteen-mobile-batman.mp3",
    "final_audio": "tango-sixteen-mobile-batman.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations rotations.",
      "service": "gtts"
    },
    "original_audio": "tango-sixteen-mobile-batman.mp3",
    "final_audio": "tango-sixteen-mobile-batman.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations rotations.",
      "service": "gtts"
    },
    "original_audio": "tango-sixteen-mobile-batman.mp3",
    "final_audio": "tango-sixteen-mobile-batman.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "service": "gtts"
    },
    "original_audio": "island-equal-alabama-harry.mp3",
    "final_audio": "island-equal-alabama-harry.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by theta inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by theta inverse, we get all of E again. We can represent this visually as follows.",
      "service": "gtts"
    },
    "original_audio": "south-helium-orange-oranges.mp3",
    "final_audio": "south-helium-orange-oranges.mp3"
  },
  {
    "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "service": "gtts"
    },
    "original_audio": "asparagus-bakerloo-may-alpha.mp3",
    "final_audio": "asparagus-bakerloo-may-alpha.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "service": "gtts"
    },
    "original_audio": "six-romeo-three-early.mp3",
    "final_audio": "six-romeo-three-early.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations rotations.",
      "service": "gtts"
    },
    "original_audio": "tango-sixteen-mobile-batman.mp3",
    "final_audio": "tango-sixteen-mobile-batman.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
      "service": "gtts"
    },
    "original_audio": "steak-eight-emma-oranges.mp3",
    "final_audio": "steak-eight-emma-oranges.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations rotations.",
      "service": "gtts"
    },
    "original_audio": "tango-sixteen-mobile-batman.mp3",
    "final_audio": "tango-sixteen-mobile-batman.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
      "service": "gtts"
    },
    "original_audio": "steak-eight-emma-oranges.mp3",
    "final_audio": "steak-eight-emma-oranges.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "cola-alabama-muppet-north.mp3",
    "final_audio": "cola-alabama-muppet-north.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations rotations.",
      "service": "gtts"
    },
    "original_audio": "tango-sixteen-mobile-batman.mp3",
    "final_audio": "tango-sixteen-mobile-batman.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
      "service": "gtts"
    },
    "original_audio": "steak-eight-emma-oranges.mp3",
    "final_audio": "steak-eight-emma-oranges.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "cola-alabama-muppet-north.mp3",
    "final_audio": "cola-alabama-muppet-north.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations rotations.",
      "service": "gtts"
    },
    "original_audio": "tango-sixteen-mobile-batman.mp3",
    "final_audio": "tango-sixteen-mobile-batman.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
      "service": "gtts"
    },
    "original_audio": "steak-eight-emma-oranges.mp3",
    "final_audio": "steak-eight-emma-oranges.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "cola-alabama-muppet-north.mp3",
    "final_audio": "cola-alabama-muppet-north.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations rotations.",
      "service": "gtts"
    },
    "original_audio": "tango-sixteen-mobile-batman.mp3",
    "final_audio": "tango-sixteen-mobile-batman.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
      "service": "gtts"
    },
    "original_audio": "steak-eight-emma-oranges.mp3",
    "final_audio": "steak-eight-emma-oranges.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "cola-alabama-muppet-north.mp3",
    "final_audio": "cola-alabama-muppet-north.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations rotations.",
      "service": "gtts"
    },
    "original_audio": "tango-sixteen-mobile-batman.mp3",
    "final_audio": "tango-sixteen-mobile-batman.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
      "service": "gtts"
    },
    "original_audio": "steak-eight-emma-oranges.mp3",
    "final_audio": "steak-eight-emma-oranges.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "cola-alabama-muppet-north.mp3",
    "final_audio": "cola-alabama-muppet-north.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations rotations.",
      "service": "gtts"
    },
    "original_audio": "tango-sixteen-mobile-batman.mp3",
    "final_audio": "tango-sixteen-mobile-batman.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
      "service": "gtts"
    },
    "original_audio": "steak-eight-emma-oranges.mp3",
    "final_audio": "steak-eight-emma-oranges.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "cola-alabama-muppet-north.mp3",
    "final_audio": "cola-alabama-muppet-north.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations rotations.",
      "service": "gtts"
    },
    "original_audio": "tango-sixteen-mobile-batman.mp3",
    "final_audio": "tango-sixteen-mobile-batman.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
      "service": "gtts"
    },
    "original_audio": "steak-eight-emma-oranges.mp3",
    "final_audio": "steak-eight-emma-oranges.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "cola-alabama-muppet-north.mp3",
    "final_audio": "cola-alabama-muppet-north.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations rotations.",
      "service": "gtts"
    },
    "original_audio": "tango-sixteen-mobile-batman.mp3",
    "final_audio": "tango-sixteen-mobile-batman.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
      "service": "gtts"
    },
    "original_audio": "steak-eight-emma-oranges.mp3",
    "final_audio": "steak-eight-emma-oranges.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "cola-alabama-muppet-north.mp3",
    "final_audio": "cola-alabama-muppet-north.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations.",
      "service": "gtts"
    },
    "original_audio": "green-early-oven-bravo.mp3",
    "final_audio": "green-early-oven-bravo.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. We can represent this symbolically as follows.",
      "service": "gtts"
    },
    "original_audio": "steak-eight-emma-oranges.mp3",
    "final_audio": "steak-eight-emma-oranges.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole sphere.",
      "service": "gtts"
    },
    "original_audio": "cola-alabama-muppet-north.mp3",
    "final_audio": "cola-alabama-muppet-north.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations.",
      "service": "gtts"
    },
    "original_audio": "green-early-oven-bravo.mp3",
    "final_audio": "green-early-oven-bravo.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. The symbolic representation of this is at the bottom of the screen.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. The symbolic representation of this is at the bottom of the screen.",
      "service": "gtts"
    },
    "original_audio": "july-sink-california-asparagus.mp3",
    "final_audio": "july-sink-california-asparagus.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole ball.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole ball.",
      "service": "gtts"
    },
    "original_audio": "oxygen-alpha-william-quiet.mp3",
    "final_audio": "oxygen-alpha-william-quiet.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "service": "gtts"
    },
    "original_audio": "robin-hotel-three-east.mp3",
    "final_audio": "robin-hotel-three-east.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "service": "gtts"
    },
    "original_audio": "orange-single-fanta-maryland.mp3",
    "final_audio": "orange-single-fanta-maryland.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "service": "gtts"
    },
    "original_audio": "texas-pip-maryland-king.mp3",
    "final_audio": "texas-pip-maryland-king.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations.",
      "service": "gtts"
    },
    "original_audio": "green-early-oven-bravo.mp3",
    "final_audio": "green-early-oven-bravo.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "service": "gtts"
    },
    "original_audio": "network-king-yellow-october.mp3",
    "final_audio": "network-king-yellow-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. The symbolic representation of this is at the bottom of the screen.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. The symbolic representation of this is at the bottom of the screen.",
      "service": "gtts"
    },
    "original_audio": "july-sink-california-asparagus.mp3",
    "final_audio": "july-sink-california-asparagus.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole ball.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole ball.",
      "service": "gtts"
    },
    "original_audio": "oxygen-alpha-william-quiet.mp3",
    "final_audio": "oxygen-alpha-william-quiet.mp3"
  },
  {
    "input_text": "Now, since we can partition B3 as follows",
    "input_data": {
      "input_text": "Now, since we can partition B3 as follows",
      "service": "gtts"
    },
    "original_audio": "pennsylvania-quebec-nine-island.mp3",
    "final_audio": "pennsylvania-quebec-nine-island.mp3"
  },
  {
    "input_text": "combining this with the paradoxical decomposition of the ball without the origin.",
    "input_data": {
      "input_text": "combining this with the paradoxical decomposition of the ball without the origin.",
      "service": "gtts"
    },
    "original_audio": "chicken-carolina-vermont-coffee.mp3",
    "final_audio": "chicken-carolina-vermont-coffee.mp3"
  },
  {
    "input_text": "Now, since we can partition B3 as follows",
    "input_data": {
      "input_text": "Now, since we can partition B3 as follows",
      "service": "gtts"
    },
    "original_audio": "pennsylvania-quebec-nine-island.mp3",
    "final_audio": "pennsylvania-quebec-nine-island.mp3"
  },
  {
    "input_text": "combining this with the paradoxical decomposition of the ball without the origin.",
    "input_data": {
      "input_text": "combining this with the paradoxical decomposition of the ball without the origin.",
      "service": "gtts"
    },
    "original_audio": "chicken-carolina-vermont-coffee.mp3",
    "final_audio": "chicken-carolina-vermont-coffee.mp3"
  },
  {
    "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox",
    "input_data": {
      "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox",
      "service": "gtts"
    },
    "original_audio": "failed-floor-quiet-bluebird.mp3",
    "final_audio": "failed-floor-quiet-bluebird.mp3"
  },
  {
    "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
    "input_data": {
      "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
      "service": "gtts"
    },
    "original_audio": "sad-double-india-robert.mp3",
    "final_audio": "sad-double-india-robert.mp3"
  },
  {
    "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "service": "gtts"
    },
    "original_audio": "jupiter-freddie-echo-december.mp3",
    "final_audio": "jupiter-freddie-echo-december.mp3"
  },
  {
    "input_text": "Now, since we can partition B3 as follows",
    "input_data": {
      "input_text": "Now, since we can partition B3 as follows",
      "service": "gtts"
    },
    "original_audio": "pennsylvania-quebec-nine-island.mp3",
    "final_audio": "pennsylvania-quebec-nine-island.mp3"
  },
  {
    "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
    "input_data": {
      "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
      "service": "gtts"
    },
    "original_audio": "nine-oregon-stream-johnny.mp3",
    "final_audio": "nine-oregon-stream-johnny.mp3"
  },
  {
    "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox",
    "input_data": {
      "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox",
      "service": "gtts"
    },
    "original_audio": "failed-floor-quiet-bluebird.mp3",
    "final_audio": "failed-floor-quiet-bluebird.mp3"
  },
  {
    "input_text": "Again, a lot of new terms are used to make sure everything fits on screen. If we wanted to write the decomposition in full, it would unfortunately not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "Again, a lot of new terms are used to make sure everything fits on screen. If we wanted to write the decomposition in full, it would unfortunately not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "service": "gtts"
    },
    "original_audio": "fish-ten-triple-social.mp3",
    "final_audio": "fish-ten-triple-social.mp3"
  },
  {
    "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
    "input_data": {
      "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
      "service": "gtts"
    },
    "original_audio": "nebraska-alaska-three-oven.mp3",
    "final_audio": "nebraska-alaska-three-oven.mp3"
  },
  {
    "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
    "input_data": {
      "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
      "service": "gtts"
    },
    "original_audio": "nine-oregon-stream-johnny.mp3",
    "final_audio": "nine-oregon-stream-johnny.mp3"
  },
  {
    "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox",
    "input_data": {
      "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox",
      "service": "gtts"
    },
    "original_audio": "failed-floor-quiet-bluebird.mp3",
    "final_audio": "failed-floor-quiet-bluebird.mp3"
  },
  {
    "input_text": "Again, a lot of new terms are used to make sure everything fits on screen. If we wanted to write the decomposition in full, it would unfortunately not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "Again, a lot of new terms are used to make sure everything fits on screen. If we wanted to write the decomposition in full, it would unfortunately not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "service": "gtts"
    },
    "original_audio": "fish-ten-triple-social.mp3",
    "final_audio": "fish-ten-triple-social.mp3"
  },
  {
    "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
    "input_data": {
      "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
      "service": "gtts"
    },
    "original_audio": "nebraska-alaska-three-oven.mp3",
    "final_audio": "nebraska-alaska-three-oven.mp3"
  },
  {
    "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
    "input_data": {
      "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
      "service": "gtts"
    },
    "original_audio": "nine-oregon-stream-johnny.mp3",
    "final_audio": "nine-oregon-stream-johnny.mp3"
  },
  {
    "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox! Finally we have arrived at the result that we were working towards for the entirety of this video.",
    "input_data": {
      "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox! Finally we have arrived at the result that we were working towards for the entirety of this video.",
      "service": "gtts"
    },
    "original_audio": "neptune-indigo-oranges-two.mp3",
    "final_audio": "neptune-indigo-oranges-two.mp3"
  },
  {
    "input_text": "Again, a lot of new terms are used to make sure everything fits on screen.",
    "input_data": {
      "input_text": "Again, a lot of new terms are used to make sure everything fits on screen.",
      "service": "gtts"
    },
    "original_audio": "august-shade-wisconsin-lactose.mp3",
    "final_audio": "august-shade-wisconsin-lactose.mp3"
  },
  {
    "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
    "input_data": {
      "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
      "service": "gtts"
    },
    "original_audio": "nebraska-alaska-three-oven.mp3",
    "final_audio": "nebraska-alaska-three-oven.mp3"
  },
  {
    "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
    "input_data": {
      "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
      "service": "gtts"
    },
    "original_audio": "nine-oregon-stream-johnny.mp3",
    "final_audio": "nine-oregon-stream-johnny.mp3"
  },
  {
    "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox! Finally we have arrived at the result that we were working towards for the entirety of this video.",
    "input_data": {
      "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox! Finally we have arrived at the result that we were working towards for the entirety of this video.",
      "service": "gtts"
    },
    "original_audio": "neptune-indigo-oranges-two.mp3",
    "final_audio": "neptune-indigo-oranges-two.mp3"
  },
  {
    "input_text": "Again, a lot of new terms are used to make sure everything fits on screen, and we skipped over quite a few details to speed things up. For an exact treatment and definition of things, refer to the thesis.",
    "input_data": {
      "input_text": "Again, a lot of new terms are used to make sure everything fits on screen, and we skipped over quite a few details to speed things up. For an exact treatment and definition of things, refer to the thesis.",
      "service": "gtts"
    },
    "original_audio": "chicken-purple-pluto-ten.mp3",
    "final_audio": "chicken-purple-pluto-ten.mp3"
  },
  {
    "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
    "input_data": {
      "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
      "service": "gtts"
    },
    "original_audio": "nebraska-alaska-three-oven.mp3",
    "final_audio": "nebraska-alaska-three-oven.mp3"
  },
  {
    "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
    "input_data": {
      "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
      "service": "gtts"
    },
    "original_audio": "nine-oregon-stream-johnny.mp3",
    "final_audio": "nine-oregon-stream-johnny.mp3"
  },
  {
    "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition. We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$. Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball. We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
    "input_data": {
      "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition. We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$. Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball. We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
      "service": "gtts"
    },
    "original_audio": "minnesota-wolfram-edward-helium.mp3",
    "final_audio": "minnesota-wolfram-edward-helium.mp3"
  },
  {
    "input_text": "It is also possible to generalize this result, which is shown in the thesis. This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations. If that sounds interesting, make sure to read the thesis.",
    "input_data": {
      "input_text": "It is also possible to generalize this result, which is shown in the thesis. This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations. If that sounds interesting, make sure to read the thesis.",
      "service": "gtts"
    },
    "original_audio": "tango-low-chicken-robin.mp3",
    "final_audio": "tango-low-chicken-robin.mp3"
  },
  {
    "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition. We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$. Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball. We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
    "input_data": {
      "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition. We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$. Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball. We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
      "service": "gtts"
    },
    "original_audio": "minnesota-wolfram-edward-helium.mp3",
    "final_audio": "minnesota-wolfram-edward-helium.mp3"
  },
  {
    "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition. We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$. Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball. We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
    "input_data": {
      "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition. We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$. Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball. We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
      "service": "gtts"
    },
    "original_audio": "minnesota-wolfram-edward-helium.mp3",
    "final_audio": "minnesota-wolfram-edward-helium.mp3"
  },
  {
    "input_text": "It is also possible to generalize this result, which is shown in the thesis. This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations. If that sounds interesting, make sure to read the thesis.",
    "input_data": {
      "input_text": "It is also possible to generalize this result, which is shown in the thesis. This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations. If that sounds interesting, make sure to read the thesis.",
      "service": "gtts"
    },
    "original_audio": "tango-low-chicken-robin.mp3",
    "final_audio": "tango-low-chicken-robin.mp3"
  },
  {
    "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition. We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$. Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball. We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
    "input_data": {
      "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition. We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$. Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball. We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
      "service": "gtts"
    },
    "original_audio": "minnesota-wolfram-edward-helium.mp3",
    "final_audio": "minnesota-wolfram-edward-helium.mp3"
  },
  {
    "input_text": "It is also possible to generalize this result, which is shown in the thesis. This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations. If that sounds interesting, make sure to read the thesis.",
    "input_data": {
      "input_text": "It is also possible to generalize this result, which is shown in the thesis. This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations. If that sounds interesting, make sure to read the thesis.",
      "service": "gtts"
    },
    "original_audio": "tango-low-chicken-robin.mp3",
    "final_audio": "tango-low-chicken-robin.mp3"
  },
  {
    "input_text": "So, we have now come to the end of this video. Hopefully you now have a decent grasp of the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "So, we have now come to the end of this video. Hopefully you now have a decent grasp of the Banach-Tarski paradox.",
      "service": "gtts"
    },
    "original_audio": "illinois-ack-echo-dakota.mp3",
    "final_audio": "illinois-ack-echo-dakota.mp3"
  },
  {
    "input_text": "So, we have now come to the end of this video. Hopefully you now have a decent grasp of the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "So, we have now come to the end of this video. Hopefully you now have a decent grasp of the Banach-Tarski paradox.",
      "service": "gtts"
    },
    "original_audio": "illinois-ack-echo-dakota.mp3",
    "final_audio": "illinois-ack-echo-dakota.mp3"
  },
  {
    "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition. We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$. Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball. We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
    "input_data": {
      "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition. We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$. Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball. We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
      "service": "gtts"
    },
    "original_audio": "minnesota-wolfram-edward-helium.mp3",
    "final_audio": "minnesota-wolfram-edward-helium.mp3"
  },
  {
    "input_text": "It is also possible to generalize this result, which is shown in the thesis. This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations. If that sounds interesting, make sure to read the thesis.",
    "input_data": {
      "input_text": "It is also possible to generalize this result, which is shown in the thesis. This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations. If that sounds interesting, make sure to read the thesis.",
      "service": "gtts"
    },
    "original_audio": "tango-low-chicken-robin.mp3",
    "final_audio": "tango-low-chicken-robin.mp3"
  },
  {
    "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University. The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two. Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball. A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will take a short detour into the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all. Okay, let's get into it.",
    "input_data": {
      "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University. The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two. Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball. A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will take a short detour into the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all. Okay, let's get into it.",
      "service": "gtts"
    },
    "original_audio": "oxygen-maine-march-iowa.mp3",
    "final_audio": "oxygen-maine-march-iowa.mp3"
  },
  {
    "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University. The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two. Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball. A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will take a short detour into the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all. Okay, let's get into it.",
    "input_data": {
      "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University. The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two. Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball. A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will take a short detour into the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all. Okay, let's get into it.",
      "service": "gtts"
    },
    "original_audio": "oxygen-maine-march-iowa.mp3",
    "final_audio": "oxygen-maine-march-iowa.mp3"
  },
  {
    "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University. The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two. Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball. A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will take a short detour into the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all. Okay, let's get into it.",
    "input_data": {
      "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University. The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two. Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball. A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will take a short detour into the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all. Okay, let's get into it.",
      "service": "gtts"
    },
    "original_audio": "oxygen-maine-march-iowa.mp3",
    "final_audio": "oxygen-maine-march-iowa.mp3"
  },
  {
    "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University. The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two. Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball. A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will take a short detour into the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all. Okay, let's get into it.",
    "input_data": {
      "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University. The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two. Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball. A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will take a short detour into the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all. Okay, let's get into it.",
      "service": "gtts"
    },
    "original_audio": "oxygen-maine-march-iowa.mp3",
    "final_audio": "oxygen-maine-march-iowa.mp3"
  },
  {
    "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University. The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two. Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball. A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will take a short detour into the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all. Okay, let's get into it.",
    "input_data": {
      "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University. The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two. Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball. A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will take a short detour into the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all. Okay, let's get into it.",
      "service": "gtts"
    },
    "original_audio": "oxygen-maine-march-iowa.mp3",
    "final_audio": "oxygen-maine-march-iowa.mp3"
  },
  {
    "input_text": "When we talk about size, we have an intuitive idea of what it means: the interval from -1 to 1 has has \u201clength\u201d two, and we know it for every interval.",
    "input_data": {
      "input_text": "When we talk about size, we have an intuitive idea of what it means: the interval from -1 to 1 has has \u201clength\u201d two, and we know it for every interval.",
      "service": "gtts"
    },
    "original_audio": "uranus-triple-montana-sink.mp3",
    "final_audio": "uranus-triple-montana-sink.mp3"
  },
  {
    "input_text": "Similarly, we can expand that notion to two dimensions: rectangle sizes are the length of the width multiplied by the height",
    "input_data": {
      "input_text": "Similarly, we can expand that notion to two dimensions: rectangle sizes are the length of the width multiplied by the height",
      "service": "gtts"
    },
    "original_audio": "lactose-friend-winner-quebec.mp3",
    "final_audio": "lactose-friend-winner-quebec.mp3"
  },
  {
    "input_text": "When we talk about size, we have an intuitive idea of what it means: the interval from -1 to 1 has has \u201clength\u201d two, and we know it for every interval.",
    "input_data": {
      "input_text": "When we talk about size, we have an intuitive idea of what it means: the interval from -1 to 1 has has \u201clength\u201d two, and we know it for every interval.",
      "service": "gtts"
    },
    "original_audio": "uranus-triple-montana-sink.mp3",
    "final_audio": "uranus-triple-montana-sink.mp3"
  },
  {
    "input_text": "Similarly, we can expand that notion to two dimensions: rectangle sizes are the length of the width multiplied by the height",
    "input_data": {
      "input_text": "Similarly, we can expand that notion to two dimensions: rectangle sizes are the length of the width multiplied by the height",
      "service": "gtts"
    },
    "original_audio": "lactose-friend-winner-quebec.mp3",
    "final_audio": "lactose-friend-winner-quebec.mp3"
  },
  {
    "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University. The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two. Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball. A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will make a short stop in the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all. Okay, let's get into it.",
    "input_data": {
      "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University. The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two. Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball. A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will make a short stop in the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all. Okay, let's get into it.",
      "service": "gtts"
    },
    "original_audio": "romeo-two-nebraska-happy.mp3",
    "final_audio": "romeo-two-nebraska-happy.mp3"
  },
  {
    "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University.",
    "input_data": {
      "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "oranges-princess-oscar-island.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3899999,
        "text_offset": 0,
        "word_length": 8,
        "text": " Welcome",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5799999,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7399999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 16,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 22,
        "word_length": 6,
        "text": " about",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 32,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19099999,
        "text_offset": 36,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "text_offset": 39,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 41,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24600000,
        "text_offset": 44,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26899999,
        "text_offset": 46,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 54,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33299999,
        "text_offset": 55,
        "word_length": 3,
        "text": " My",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 58,
        "word_length": 5,
        "text": " name",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 63,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36199998,
        "text_offset": 66,
        "word_length": 4,
        "text": " Don",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36999999,
        "text_offset": 70,
        "word_length": 4,
        "text": "ovan",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 74,
        "word_length": 4,
        "text": " Las",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42800000,
        "text_offset": 78,
        "word_length": 2,
        "text": "al",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46700000,
        "text_offset": 80,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46700000,
        "text_offset": 84,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46799998,
        "text_offset": 89,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 95,
        "word_length": 4,
        "text": " was",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 99,
        "word_length": 5,
        "text": " made",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 104,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 107,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51799998,
        "text_offset": 112,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51899998,
        "text_offset": 115,
        "word_length": 3,
        "text": " my",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 118,
        "word_length": 9,
        "text": " Bachelor",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58499999,
        "text_offset": 127,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59600000,
        "text_offset": 130,
        "word_length": 3,
        "text": " Se",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60700001,
        "text_offset": 133,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63999998,
        "text_offset": 135,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "text_offset": 137,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66199998,
        "text_offset": 140,
        "word_length": 5,
        "text": " Math",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74199998,
        "text_offset": 145,
        "word_length": 7,
        "text": "ematics",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 152,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 155,
        "word_length": 2,
        "text": " U",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84199998,
        "text_offset": 157,
        "word_length": 3,
        "text": "tre",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87399997,
        "text_offset": 160,
        "word_length": 3,
        "text": "cht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89599995,
        "text_offset": 163,
        "word_length": 11,
        "text": " University",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 174,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Welcome to this video about the Banachhtarsky paradox. My name is Donovan Lasal and this video was made as part of my Bachelor of Seasis in Mathematics at Utrecht University.",
    "final_audio": "oranges-princess-oscar-island.mp3"
  },
  {
    "input_text": "The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two.",
    "input_data": {
      "input_text": "The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "west-virginia-chicken-robert.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4399999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6499999,
        "text_offset": 4,
        "word_length": 5,
        "text": " goal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7800000,
        "text_offset": 9,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8899999,
        "text_offset": 12,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 17,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 23,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 26,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 29,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 37,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 39,
        "word_length": 7,
        "text": " visual",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 46,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 57,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42200000,
        "text_offset": 69,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 74,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 80,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 83,
        "word_length": 3,
        "text": " my",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49299998,
        "text_offset": 86,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50999999,
        "text_offset": 93,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53599998,
        "text_offset": 94,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54900000,
        "text_offset": 97,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56099998,
        "text_offset": 102,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57599999,
        "text_offset": 105,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 110,
        "word_length": 7,
        "text": " people",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62399997,
        "text_offset": 117,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199997,
        "text_offset": 120,
        "word_length": 9,
        "text": " possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 129,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 133,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 137,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 139,
        "word_length": 6,
        "text": " grasp",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 145,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 148,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 152,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 160,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 164,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 169,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 173,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 176,
        "word_length": 7,
        "text": " turned",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 183,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 188,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 192,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two.",
    "final_audio": "west-virginia-chicken-robert.mp3"
  },
  {
    "input_text": "Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball.",
    "input_data": {
      "input_text": "Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "river-emma-butter-california.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 8,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 13,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9999999,
        "text_offset": 16,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 21,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12899999,
        "text_offset": 25,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 29,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 32,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 34,
        "word_length": 3,
        "text": "ors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 37,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22699999,
        "text_offset": 39,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 47,
        "word_length": 5,
        "text": " says",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 52,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199999,
        "text_offset": 53,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 57,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 61,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 66,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599998,
        "text_offset": 72,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41699998,
        "text_offset": 75,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43599998,
        "text_offset": 79,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 84,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47499997,
        "text_offset": 89,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 90,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54199998,
        "text_offset": 97,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56699998,
        "text_offset": 101,
        "word_length": 10,
        "text": " translate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61299998,
        "text_offset": 111,
        "word_length": 6,
        "text": " those",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63299999,
        "text_offset": 117,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71999998,
        "text_offset": 123,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74499998,
        "text_offset": 131,
        "word_length": 11,
        "text": " stretching",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79199998,
        "text_offset": 142,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83299994,
        "text_offset": 145,
        "word_length": 8,
        "text": " scaling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 153,
        "word_length": 9,
        "text": " anything",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101499996,
        "text_offset": 162,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104099993,
        "text_offset": 166,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104599995,
        "text_offset": 170,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106399998,
        "text_offset": 174,
        "word_length": 7,
        "text": " copies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107899994,
        "text_offset": 181,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110299992,
        "text_offset": 184,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599993,
        "text_offset": 188,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112699995,
        "text_offset": 193,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113199996,
        "text_offset": 198,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " because that is what the Banach Torski paradox says. You can take parts of the unit ball, rotate and translate those parts without stretching or scaling anything and get two copies of the unit ball.",
    "final_audio": "river-emma-butter-california.mp3"
  },
  {
    "input_text": "A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will make a short stop in the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all.",
    "input_data": {
      "input_text": "A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will make a short stop in the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "double-autumn-johnny-freddie.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6999999,
        "text_offset": 0,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 2,
        "word_length": 12,
        "text": " fascinating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 14,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15299999,
        "text_offset": 21,
        "word_length": 7,
        "text": " indeed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799998,
        "text_offset": 28,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 29,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 35,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "text_offset": 38,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 43,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31299999,
        "text_offset": 47,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 50,
        "word_length": 8,
        "text": " proving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 58,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 63,
        "word_length": 8,
        "text": " shortly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599997,
        "text_offset": 71,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 72,
        "word_length": 7,
        "text": " Before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 79,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 82,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53599998,
        "text_offset": 85,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 90,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 91,
        "word_length": 8,
        "text": " however",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61199998,
        "text_offset": 99,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62899999,
        "text_offset": 100,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199997,
        "text_offset": 103,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 108,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199999,
        "text_offset": 113,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69699997,
        "text_offset": 115,
        "word_length": 6,
        "text": " short",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399998,
        "text_offset": 121,
        "word_length": 5,
        "text": " stop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75799999,
        "text_offset": 126,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 129,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78599998,
        "text_offset": 133,
        "word_length": 6,
        "text": " world",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399997,
        "text_offset": 139,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 142,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84399995,
        "text_offset": 146,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85699996,
        "text_offset": 147,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000001,
        "text_offset": 149,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000001,
        "text_offset": 151,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89699997,
        "text_offset": 157,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93999996,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 163,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 168,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 171,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 179,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 180,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 188,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 192,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 193,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 195,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 197,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 203,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 208,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 209,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 213,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 217,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 220,
        "word_length": 4,
        "text": "ters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 224,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 226,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 234,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 240,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 244,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 247,
        "word_length": 9,
        "text": " possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 256,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 259,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 263,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " a fascinating result indeed, which we will get to proving very shortly. Before we do that, however, we will make a short stop in the world of non-measurable sets. This is because, without non-measurable sets, the Banachterski paradox would not be possible at all.",
    "final_audio": "double-autumn-johnny-freddie.mp3"
  },
  {
    "input_text": "Okay, let's get into it.",
    "input_data": {
      "input_text": "Okay, let's get into it.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fruit-mango-nebraska-hydrogen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13899999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Okay",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "text_offset": 5,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 6,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 10,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 12,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 16,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 21,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 24,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Okay, let's get into it.",
    "final_audio": "fruit-mango-nebraska-hydrogen.mp3"
  },
  {
    "input_text": "Okay, let's get into it.",
    "input_data": {
      "input_text": "Okay, let's get into it.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fruit-mango-nebraska-hydrogen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13899999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Okay",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "text_offset": 5,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 6,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 10,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 12,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 16,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 21,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 24,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Okay, let's get into it.",
    "final_audio": "fruit-mango-nebraska-hydrogen.mp3"
  },
  {
    "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University.",
    "input_data": {
      "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "oranges-princess-oscar-island.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3899999,
        "text_offset": 0,
        "word_length": 8,
        "text": " Welcome",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5799999,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7399999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 16,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 22,
        "word_length": 6,
        "text": " about",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 32,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19099999,
        "text_offset": 36,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "text_offset": 39,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 41,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24600000,
        "text_offset": 44,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26899999,
        "text_offset": 46,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 54,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33299999,
        "text_offset": 55,
        "word_length": 3,
        "text": " My",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 58,
        "word_length": 5,
        "text": " name",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 63,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36199998,
        "text_offset": 66,
        "word_length": 4,
        "text": " Don",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36999999,
        "text_offset": 70,
        "word_length": 4,
        "text": "ovan",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 74,
        "word_length": 4,
        "text": " Las",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42800000,
        "text_offset": 78,
        "word_length": 2,
        "text": "al",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46700000,
        "text_offset": 80,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46700000,
        "text_offset": 84,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46799998,
        "text_offset": 89,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 95,
        "word_length": 4,
        "text": " was",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 99,
        "word_length": 5,
        "text": " made",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 104,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 107,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51799998,
        "text_offset": 112,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51899998,
        "text_offset": 115,
        "word_length": 3,
        "text": " my",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 118,
        "word_length": 9,
        "text": " Bachelor",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58499999,
        "text_offset": 127,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59600000,
        "text_offset": 130,
        "word_length": 3,
        "text": " Se",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60700001,
        "text_offset": 133,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63999998,
        "text_offset": 135,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "text_offset": 137,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66199998,
        "text_offset": 140,
        "word_length": 5,
        "text": " Math",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74199998,
        "text_offset": 145,
        "word_length": 7,
        "text": "ematics",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 152,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 155,
        "word_length": 2,
        "text": " U",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84199998,
        "text_offset": 157,
        "word_length": 3,
        "text": "tre",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87399997,
        "text_offset": 160,
        "word_length": 3,
        "text": "cht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89599995,
        "text_offset": 163,
        "word_length": 11,
        "text": " University",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 174,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Welcome to this video about the Banachhtarsky paradox. My name is Donovan Lasal and this video was made as part of my Bachelor of Seasis in Mathematics at Utrecht University.",
    "final_audio": "oranges-princess-oscar-island.mp3"
  },
  {
    "input_text": "The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two.",
    "input_data": {
      "input_text": "The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "west-virginia-chicken-robert.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4399999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6499999,
        "text_offset": 4,
        "word_length": 5,
        "text": " goal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7800000,
        "text_offset": 9,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8899999,
        "text_offset": 12,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 17,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 23,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 26,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 29,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 37,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 39,
        "word_length": 7,
        "text": " visual",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 46,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 57,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42200000,
        "text_offset": 69,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 74,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 80,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 83,
        "word_length": 3,
        "text": " my",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49299998,
        "text_offset": 86,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50999999,
        "text_offset": 93,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53599998,
        "text_offset": 94,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54900000,
        "text_offset": 97,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56099998,
        "text_offset": 102,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57599999,
        "text_offset": 105,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 110,
        "word_length": 7,
        "text": " people",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62399997,
        "text_offset": 117,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199997,
        "text_offset": 120,
        "word_length": 9,
        "text": " possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 129,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 133,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 137,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 139,
        "word_length": 6,
        "text": " grasp",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 145,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 148,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 152,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 160,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 164,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 169,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 173,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 176,
        "word_length": 7,
        "text": " turned",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 183,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 188,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 192,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two.",
    "final_audio": "west-virginia-chicken-robert.mp3"
  },
  {
    "input_text": "Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball.",
    "input_data": {
      "input_text": "Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "river-emma-butter-california.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 8,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 13,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9999999,
        "text_offset": 16,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 21,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12899999,
        "text_offset": 25,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 29,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 32,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 34,
        "word_length": 3,
        "text": "ors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 37,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22699999,
        "text_offset": 39,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 47,
        "word_length": 5,
        "text": " says",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 52,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199999,
        "text_offset": 53,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 57,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 61,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 66,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599998,
        "text_offset": 72,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41699998,
        "text_offset": 75,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43599998,
        "text_offset": 79,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 84,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47499997,
        "text_offset": 89,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 90,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54199998,
        "text_offset": 97,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56699998,
        "text_offset": 101,
        "word_length": 10,
        "text": " translate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61299998,
        "text_offset": 111,
        "word_length": 6,
        "text": " those",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63299999,
        "text_offset": 117,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71999998,
        "text_offset": 123,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74499998,
        "text_offset": 131,
        "word_length": 11,
        "text": " stretching",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79199998,
        "text_offset": 142,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83299994,
        "text_offset": 145,
        "word_length": 8,
        "text": " scaling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 153,
        "word_length": 9,
        "text": " anything",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101499996,
        "text_offset": 162,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104099993,
        "text_offset": 166,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104599995,
        "text_offset": 170,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106399998,
        "text_offset": 174,
        "word_length": 7,
        "text": " copies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107899994,
        "text_offset": 181,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110299992,
        "text_offset": 184,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599993,
        "text_offset": 188,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112699995,
        "text_offset": 193,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113199996,
        "text_offset": 198,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " because that is what the Banach Torski paradox says. You can take parts of the unit ball, rotate and translate those parts without stretching or scaling anything and get two copies of the unit ball.",
    "final_audio": "river-emma-butter-california.mp3"
  },
  {
    "input_text": "A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will make a short stop in the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all.",
    "input_data": {
      "input_text": "A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will make a short stop in the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "double-autumn-johnny-freddie.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6999999,
        "text_offset": 0,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 2,
        "word_length": 12,
        "text": " fascinating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 14,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15299999,
        "text_offset": 21,
        "word_length": 7,
        "text": " indeed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799998,
        "text_offset": 28,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 29,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 35,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "text_offset": 38,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 43,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31299999,
        "text_offset": 47,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 50,
        "word_length": 8,
        "text": " proving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 58,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 63,
        "word_length": 8,
        "text": " shortly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599997,
        "text_offset": 71,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 72,
        "word_length": 7,
        "text": " Before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 79,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 82,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53599998,
        "text_offset": 85,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 90,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 91,
        "word_length": 8,
        "text": " however",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61199998,
        "text_offset": 99,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62899999,
        "text_offset": 100,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199997,
        "text_offset": 103,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 108,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199999,
        "text_offset": 113,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69699997,
        "text_offset": 115,
        "word_length": 6,
        "text": " short",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399998,
        "text_offset": 121,
        "word_length": 5,
        "text": " stop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75799999,
        "text_offset": 126,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 129,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78599998,
        "text_offset": 133,
        "word_length": 6,
        "text": " world",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399997,
        "text_offset": 139,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 142,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84399995,
        "text_offset": 146,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85699996,
        "text_offset": 147,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000001,
        "text_offset": 149,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000001,
        "text_offset": 151,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89699997,
        "text_offset": 157,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93999996,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 163,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 168,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 171,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 179,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 180,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 188,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 192,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 193,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 195,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 197,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 203,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 208,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 209,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 213,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 217,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 220,
        "word_length": 4,
        "text": "ters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 224,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 226,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 234,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 240,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 244,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 247,
        "word_length": 9,
        "text": " possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 256,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 259,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 263,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " a fascinating result indeed, which we will get to proving very shortly. Before we do that, however, we will make a short stop in the world of non-measurable sets. This is because, without non-measurable sets, the Banachterski paradox would not be possible at all.",
    "final_audio": "double-autumn-johnny-freddie.mp3"
  },
  {
    "input_text": "Okay, let's get into it.",
    "input_data": {
      "input_text": "Okay, let's get into it.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fruit-mango-nebraska-hydrogen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13899999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Okay",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "text_offset": 5,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 6,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 10,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 12,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 16,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 21,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 24,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Okay, let's get into it.",
    "final_audio": "fruit-mango-nebraska-hydrogen.mp3"
  },
  {
    "input_text": "When we talk about size, we have an intuitive idea of what it means:",
    "input_data": {
      "input_text": "When we talk about size, we have an intuitive idea of what it means:",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "cat-north-butter-zulu.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3299999,
        "text_offset": 0,
        "word_length": 5,
        "text": " When",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4800000,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6199999,
        "text_offset": 8,
        "word_length": 5,
        "text": " talk",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 13,
        "word_length": 6,
        "text": " about",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 19,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14299999,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 25,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 28,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 33,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799998,
        "text_offset": 36,
        "word_length": 10,
        "text": " intuitive",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 46,
        "word_length": 5,
        "text": " idea",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399998,
        "text_offset": 51,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 54,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30299998,
        "text_offset": 59,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499999,
        "text_offset": 62,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34599999,
        "text_offset": 68,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " When we talk about size, we have an intuitive idea of what it means.",
    "final_audio": "cat-north-butter-zulu.mp3"
  },
  {
    "input_text": "the interval from -1 to 1 has has \u201clength\u201d two, and we know it for every interval.",
    "input_data": {
      "input_text": "the interval from -1 to 1 has has \u201clength\u201d two, and we know it for every interval.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nebraska-fix-may-uncle.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 4,
        "word_length": 9,
        "text": " interval",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11099999,
        "text_offset": 13,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 18,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 24,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 26,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 29,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23700000,
        "text_offset": 31,
        "word_length": 4,
        "text": " has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 35,
        "word_length": 7,
        "text": " length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999999,
        "text_offset": 42,
        "word_length": 2,
        "text": " 2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 44,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 48,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 51,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "text_offset": 56,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46599998,
        "text_offset": 59,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48499999,
        "text_offset": 63,
        "word_length": 6,
        "text": " every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50999999,
        "text_offset": 69,
        "word_length": 9,
        "text": " interval",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The interval from minus 1 to 1 has length 2 and we know it for every interval.",
    "final_audio": "nebraska-fix-may-uncle.mp3"
  },
  {
    "input_text": "Similarly, we can expand that notion to two dimensions: rectangle sizes are the length of the width multiplied by the height",
    "input_data": {
      "input_text": "Similarly, we can expand that notion to two dimensions: rectangle sizes are the length of the width multiplied by the height",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sweet-friend-twelve-bacon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6700000,
        "text_offset": 0,
        "word_length": 10,
        "text": " Similarly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 11,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13700000,
        "text_offset": 14,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15899999,
        "text_offset": 18,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 25,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 30,
        "word_length": 7,
        "text": " notion",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21899999,
        "text_offset": 37,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 40,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 44,
        "word_length": 11,
        "text": " dimensions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31399999,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34399999,
        "text_offset": 56,
        "word_length": 2,
        "text": " R",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42799999,
        "text_offset": 58,
        "word_length": 3,
        "text": "ack",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 61,
        "word_length": 1,
        "text": "t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199998,
        "text_offset": 62,
        "word_length": 5,
        "text": "angle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199998,
        "text_offset": 67,
        "word_length": 6,
        "text": " sizes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999999,
        "text_offset": 73,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48799998,
        "text_offset": 77,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49999997,
        "text_offset": 81,
        "word_length": 7,
        "text": " length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 88,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 91,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52599997,
        "text_offset": 95,
        "word_length": 10,
        "text": " rectangle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56899999,
        "text_offset": 105,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 110,
        "word_length": 8,
        "text": " planned",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57199997,
        "text_offset": 118,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57199997,
        "text_offset": 121,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57199997,
        "text_offset": 125,
        "word_length": 6,
        "text": " width",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57199997,
        "text_offset": 131,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Similarly, we can expand that notion to two dimensions. Racktangle sizes are the length of the rectangle also planned by the width.",
    "final_audio": "sweet-friend-twelve-bacon.mp3"
  },
  {
    "input_text": "Of course, this notion can be generalized to any higher dimension if you'd like.",
    "input_data": {
      "input_text": "Of course, this notion can be generalized to any higher dimension if you'd like.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "east-pennsylvania-twenty-winter.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8599999,
        "text_offset": 0,
        "word_length": 3,
        "text": " Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 3,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14899999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16199999,
        "text_offset": 16,
        "word_length": 7,
        "text": " notion",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 23,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 27,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21899999,
        "text_offset": 30,
        "word_length": 12,
        "text": " generalized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 42,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 45,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34799998,
        "text_offset": 49,
        "word_length": 7,
        "text": " higher",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 56,
        "word_length": 10,
        "text": " dimension",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 66,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42799999,
        "text_offset": 69,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 73,
        "word_length": 2,
        "text": "'d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 75,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46799998,
        "text_offset": 80,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Of course, this notion can be generalized to any higher dimension if you'd like.",
    "final_audio": "east-pennsylvania-twenty-winter.mp3"
  },
  {
    "input_text": "When trying to generalize a notion of size to arbitrary sets however, we run into trouble. For some sets, it ends up being impossible to say what its 'size' is. We call these sets 'non-measurable' In this section, we will give an example of such a non-measurable set.",
    "input_data": {
      "input_text": "When trying to generalize a notion of size to arbitrary sets however, we run into trouble. For some sets, it ends up being impossible to say what its 'size' is. We call these sets 'non-measurable' In this section, we will give an example of such a non-measurable set.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lactose-papa-sixteen-six.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6200000,
        "text_offset": 0,
        "word_length": 5,
        "text": " When",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 5,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11200000,
        "text_offset": 12,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "text_offset": 15,
        "word_length": 8,
        "text": " general",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "text_offset": 23,
        "word_length": 3,
        "text": "ize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "text_offset": 26,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25699999,
        "text_offset": 28,
        "word_length": 7,
        "text": " notion",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26599999,
        "text_offset": 35,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 38,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29099999,
        "text_offset": 43,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29800000,
        "text_offset": 46,
        "word_length": 10,
        "text": " arbitrary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32300000,
        "text_offset": 56,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 61,
        "word_length": 8,
        "text": " however",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36499999,
        "text_offset": 69,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36599999,
        "text_offset": 70,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37899999,
        "text_offset": 73,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 77,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40899999,
        "text_offset": 82,
        "word_length": 8,
        "text": " trouble",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55799999,
        "text_offset": 91,
        "word_length": 4,
        "text": " For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 95,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 100,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57399997,
        "text_offset": 105,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57899997,
        "text_offset": 108,
        "word_length": 5,
        "text": " ends",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59799997,
        "text_offset": 113,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62200000,
        "text_offset": 116,
        "word_length": 6,
        "text": " being",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 122,
        "word_length": 11,
        "text": " impossible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199997,
        "text_offset": 133,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72299997,
        "text_offset": 136,
        "word_length": 4,
        "text": " say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999999,
        "text_offset": 140,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77599997,
        "text_offset": 145,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 149,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 154,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85899996,
        "text_offset": 157,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89099998,
        "text_offset": 158,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89600000,
        "text_offset": 161,
        "word_length": 5,
        "text": " call",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 166,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 172,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 177,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90899996,
        "text_offset": 181,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199994,
        "text_offset": 182,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92600002,
        "text_offset": 184,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99199995,
        "text_offset": 186,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107599997,
        "text_offset": 192,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 193,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 196,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 201,
        "word_length": 8,
        "text": " section",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 209,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 212,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 217,
        "word_length": 5,
        "text": " give",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 222,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 225,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 236,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 241,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 243,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 247,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 248,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 250,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 252,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 258,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 262,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " When trying to generalize a notion of size to arbitrary sets however, we run into trouble. For some sets it ends up being impossible to say what its size is. We call these sets non-measurable. In this section we will give an example of such a non-measurable set.",
    "final_audio": "lactose-papa-sixteen-six.mp3"
  },
  {
    "input_text": "We will create a non-measurable subset on S1.",
    "input_data": {
      "input_text": "We will create a non-measurable subset on S1.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "montana-north-carbon-tennis.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7499999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 8,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 15,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 17,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 21,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299999,
        "text_offset": 22,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 24,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 26,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 32,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 39,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199999,
        "text_offset": 42,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36999999,
        "text_offset": 44,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will create a non-measurable subset on S1.",
    "final_audio": "montana-north-carbon-tennis.mp3"
  },
  {
    "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "input_data": {
      "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "violet-yankee-item-mobile.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 16,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 19,
        "word_length": 9,
        "text": " creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 28,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18100000,
        "text_offset": 36,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 40,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25899999,
        "text_offset": 48,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 51,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899999,
        "text_offset": 55,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 61,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 64,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 68,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 73,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41099998,
        "text_offset": 80,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48299996,
        "text_offset": 81,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49099998,
        "text_offset": 84,
        "word_length": 7,
        "text": " taking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50199999,
        "text_offset": 91,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53499999,
        "text_offset": 95,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 99,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58899998,
        "text_offset": 106,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60599999,
        "text_offset": 109,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62699999,
        "text_offset": 112,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68399999,
        "text_offset": 123,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199999,
        "text_offset": 128,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71699998,
        "text_offset": 134,
        "word_length": 7,
        "text": " exists",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76799998,
        "text_offset": 141,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79699995,
        "text_offset": 146,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83399996,
        "text_offset": 155,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 164,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 167,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 172,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 176,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 182,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 188,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 191,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 195,
        "word_length": 7,
        "text": " second",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 202,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will do this by creating equivalence classes on the point of the unit circle. By taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "final_audio": "violet-yankee-item-mobile.mp3"
  },
  {
    "input_text": "Let's look at how such an equivalence class is created by looking at the point 1, 0.",
    "input_data": {
      "input_text": "Let's look at how such an equivalence class is created by looking at the point 1, 0.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "item-hydrogen-colorado-mango.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14699999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 14,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 18,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 23,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099998,
        "text_offset": 26,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 37,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31100000,
        "text_offset": 43,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699999,
        "text_offset": 46,
        "word_length": 8,
        "text": " created",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35299998,
        "text_offset": 54,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40999997,
        "text_offset": 65,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42500000,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43799998,
        "text_offset": 72,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 75,
        "word_length": 2,
        "text": "10",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49700000,
        "text_offset": 77,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at how such an equivalent class is created by looking at the 0.10.",
    "final_audio": "item-hydrogen-colorado-mango.mp3"
  },
  {
    "input_text": "we will use the notation p in brackets to mean the equivalence class of p. Of course we didn't see all the points in the equivalence class, since there are infinitely many.",
    "input_data": {
      "input_text": "we will use the notation p in brackets to mean the equivalence class of p. Of course we didn't see all the points in the equivalence class, since there are infinitely many.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "two-wolfram-steak-snake.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12799999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 8,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 12,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21099998,
        "text_offset": 16,
        "word_length": 9,
        "text": " notation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25099998,
        "text_offset": 25,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27299998,
        "text_offset": 27,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 30,
        "word_length": 9,
        "text": " brackets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799998,
        "text_offset": 39,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 42,
        "word_length": 5,
        "text": " mean",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 47,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40099998,
        "text_offset": 51,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199999,
        "text_offset": 59,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45399999,
        "text_offset": 63,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49900000,
        "text_offset": 69,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51299998,
        "text_offset": 72,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56799998,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 75,
        "word_length": 3,
        "text": " Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 78,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 86,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 89,
        "word_length": 5,
        "text": " didn",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 94,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 96,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 100,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 108,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 115,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 122,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 130,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 134,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 140,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 146,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 152,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 156,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 167,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 172,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will use the notation P in brackets to mean the equivalence class of P. Of course, we didn't see all the points in the equivalence class since there are infinitely many.",
    "final_audio": "two-wolfram-steak-snake.mp3"
  },
  {
    "input_text": "Let's see that process for a few more points.",
    "input_data": {
      "input_text": "Let's see that process for a few more points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sodium-wolfram-indigo-ceiling.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3399999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6599999,
        "text_offset": 10,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 15,
        "word_length": 8,
        "text": " process",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 23,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 27,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 29,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 33,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 38,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20599998,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see that process for a few more points.",
    "final_audio": "sodium-wolfram-indigo-ceiling.mp3"
  },
  {
    "input_text": "Now, we can do this for all points of the unit circle, so that we have a collection of all equivalence classes.",
    "input_data": {
      "input_text": "Now, we can do this for all points of the unit circle, so that we have a collection of all equivalence classes.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sweet-saturn-jig-timing.mp3",
    "word_boundaries": [
      {
        "audio_offset": 11799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 4,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 7,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 11,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 14,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 19,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 23,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 27,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 34,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 37,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30399998,
        "text_offset": 41,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699998,
        "text_offset": 46,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 53,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37899998,
        "text_offset": 56,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 61,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 64,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 69,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 71,
        "word_length": 11,
        "text": " collection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 82,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 85,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 89,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 97,
        "word_length": 4,
        "text": "ents",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 101,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 109,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now we can do this for all points of the unit circle so that we have a collection of all equivalents classes.",
    "final_audio": "sweet-saturn-jig-timing.mp3"
  },
  {
    "input_text": "Using the Axiom of Choice, we can pick exactly one point from each of these equivalence classes. This will be our non-measurable set M.",
    "input_data": {
      "input_text": "Using the Axiom of Choice, we can pick exactly one point from each of these equivalence classes. This will be our non-measurable set M.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "quiet-football-iowa-kentucky.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7399999,
        "text_offset": 0,
        "word_length": 6,
        "text": " Using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 6,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 10,
        "word_length": 3,
        "text": " ax",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 13,
        "word_length": 1,
        "text": "i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 14,
        "word_length": 2,
        "text": "om",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 16,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 19,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23199999,
        "text_offset": 26,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24900000,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26499999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 34,
        "word_length": 5,
        "text": " pick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31199998,
        "text_offset": 39,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 47,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38499999,
        "text_offset": 51,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42199997,
        "text_offset": 57,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44199998,
        "text_offset": 62,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47099997,
        "text_offset": 67,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48199999,
        "text_offset": 70,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 76,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 84,
        "word_length": 4,
        "text": "ents",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56299998,
        "text_offset": 88,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 96,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 97,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 102,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 107,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 110,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 114,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 118,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 119,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 121,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 123,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 129,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 133,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 135,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Using the axiom of choice, we can pick exactly one point from each of these equivalents classes. This will be our non-measurable set M.",
    "final_audio": "quiet-football-iowa-kentucky.mp3"
  },
  {
    "input_text": "Notice now that we can form the whole circle again by looking at all rational rotations of M",
    "input_data": {
      "input_text": "Notice now that we can form the whole circle again by looking at all rational rotations of M",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "eleven-artist-connecticut-nine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12400000,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 7,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 16,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 19,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 23,
        "word_length": 5,
        "text": " form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20599998,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 32,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 38,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 45,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 51,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 54,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35699999,
        "text_offset": 62,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37399998,
        "text_offset": 65,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 69,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 78,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 88,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 91,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice now that we can form the whole circle again by looking at all rational rotations of M.",
    "final_audio": "eleven-artist-connecticut-nine.mp3"
  },
  {
    "input_text": "By sigma additivity and rotation invariance, we then get the following",
    "input_data": {
      "input_text": "By sigma additivity and rotation invariance, we then get the following",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "south-oscar-vermont-butter.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 3,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16899999,
        "text_offset": 9,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 13,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 15,
        "word_length": 5,
        "text": "ivity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 20,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799999,
        "text_offset": 24,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 33,
        "word_length": 7,
        "text": " invari",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299999,
        "text_offset": 40,
        "word_length": 4,
        "text": "ance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 44,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599998,
        "text_offset": 47,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 52,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 56,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 60,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49700000,
        "text_offset": 70,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " By sigma additivity and rotation invariance we then get the following.",
    "final_audio": "south-oscar-vermont-butter.mp3"
  },
  {
    "input_text": "So then, what is mu of M?",
    "input_data": {
      "input_text": "So then, what is mu of M?",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "two-spaghetti-red-cat.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7299999,
        "text_offset": 8,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9399999,
        "text_offset": 13,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 16,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 19,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 22,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 24,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So then what is mu of m?",
    "final_audio": "two-spaghetti-red-cat.mp3"
  },
  {
    "input_text": "If we take mu of M is zero, then the measure of the unit circle must also be zero.",
    "input_data": {
      "input_text": "If we take mu of M is zero, then the measure of the unit circle must also be zero.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "carbon-connecticut-stairway-missouri.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 6,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 11,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 14,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 17,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 19,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 22,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 27,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29599999,
        "text_offset": 28,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 37,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39299999,
        "text_offset": 45,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 52,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "text_offset": 57,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49499998,
        "text_offset": 64,
        "word_length": 5,
        "text": " must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52099997,
        "text_offset": 69,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55299999,
        "text_offset": 74,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 77,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59699997,
        "text_offset": 82,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If we take mu of m as zero, then the measure of the unit circle must also be zero.",
    "final_audio": "carbon-connecticut-stairway-missouri.mp3"
  },
  {
    "input_text": "But if we take mu of M to be nonzero, then the measure of the unit circle must be infinite!",
    "input_data": {
      "input_text": "But if we take mu of M to be nonzero, then the measure of the unit circle must be infinite!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "bluebird-vegan-hot-west.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 4,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16199999,
        "text_offset": 7,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 10,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 15,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 21,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "text_offset": 23,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 26,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28099999,
        "text_offset": 29,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28599998,
        "text_offset": 33,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799998,
        "text_offset": 34,
        "word_length": 4,
        "text": "zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 38,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 39,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 48,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799998,
        "text_offset": 56,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 59,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199999,
        "text_offset": 63,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 68,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49599997,
        "text_offset": 75,
        "word_length": 5,
        "text": " must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 80,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199997,
        "text_offset": 83,
        "word_length": 9,
        "text": " infinite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58299999,
        "text_offset": 92,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " But if we take mu of m to be non-zero, then the measure of the unit circle must be infinite.",
    "final_audio": "bluebird-vegan-hot-west.mp3"
  },
  {
    "input_text": "It should be clear that neither of these options is a good choice. As a result, we say that M is non-measurable. You might be wondering why this is relevant to the Banach-Tarski paradox? It is relevant because the parts that we will divide the ball into, are going to be non-measurable. In fact, there is no other way for the paradox to make sense; if we could assign a size to each of these parts, then the Banach-Tarski paradox would imply that the volume of one unit ball is the same as the volume of two unit balls - and that obviously cannot be the case.",
    "input_data": {
      "input_text": "It should be clear that neither of these options is a good choice. As a result, we say that M is non-measurable. You might be wondering why this is relevant to the Banach-Tarski paradox? It is relevant because the parts that we will divide the ball into, are going to be non-measurable. In fact, there is no other way for the paradox to make sense; if we could assign a size to each of these parts, then the Banach-Tarski paradox would imply that the volume of one unit ball is the same as the volume of two unit balls - and that obviously cannot be the case.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "pluto-autumn-oklahoma-hydrogen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6799999,
        "text_offset": 0,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 3,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14899999,
        "text_offset": 10,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 13,
        "word_length": 6,
        "text": " clear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 19,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 24,
        "word_length": 8,
        "text": " neither",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 35,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 41,
        "word_length": 8,
        "text": " options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31699999,
        "text_offset": 49,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 52,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 54,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 59,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43399997,
        "text_offset": 66,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56399998,
        "text_offset": 67,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56399998,
        "text_offset": 70,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799999,
        "text_offset": 72,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59399998,
        "text_offset": 79,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60599999,
        "text_offset": 80,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 83,
        "word_length": 4,
        "text": " say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62299997,
        "text_offset": 87,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63799998,
        "text_offset": 92,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67999999,
        "text_offset": 94,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69999997,
        "text_offset": 97,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71499998,
        "text_offset": 101,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72799997,
        "text_offset": 102,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73099997,
        "text_offset": 104,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76999998,
        "text_offset": 106,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85599999,
        "text_offset": 112,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89399999,
        "text_offset": 113,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90799999,
        "text_offset": 117,
        "word_length": 6,
        "text": " might",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110399994,
        "text_offset": 123,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110799994,
        "text_offset": 126,
        "word_length": 10,
        "text": " wondering",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112399997,
        "text_offset": 136,
        "word_length": 4,
        "text": " why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113199996,
        "text_offset": 140,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113399996,
        "text_offset": 145,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113699994,
        "text_offset": 148,
        "word_length": 9,
        "text": " relevant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 157,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 160,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 164,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 168,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 171,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121599993,
        "text_offset": 173,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121599993,
        "text_offset": 176,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121599993,
        "text_offset": 178,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127499995,
        "text_offset": 186,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130799999,
        "text_offset": 187,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132199997,
        "text_offset": 190,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133699998,
        "text_offset": 193,
        "word_length": 9,
        "text": " relevant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135799994,
        "text_offset": 202,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140799999,
        "text_offset": 210,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143399996,
        "text_offset": 214,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145399994,
        "text_offset": 220,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146999993,
        "text_offset": 225,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148399996,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149599995,
        "text_offset": 233,
        "word_length": 7,
        "text": " divide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154799995,
        "text_offset": 240,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156599993,
        "text_offset": 244,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158599996,
        "text_offset": 249,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164399995,
        "text_offset": 254,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166599998,
        "text_offset": 258,
        "word_length": 6,
        "text": " going",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168299999,
        "text_offset": 264,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169499988,
        "text_offset": 267,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170599994,
        "text_offset": 270,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173099994,
        "text_offset": 274,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174700002,
        "text_offset": 275,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180899991,
        "text_offset": 277,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182699995,
        "text_offset": 279,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183099994,
        "text_offset": 285,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188799991,
        "text_offset": 286,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 189799995,
        "text_offset": 289,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190799999,
        "text_offset": 294,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191899995,
        "text_offset": 295,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192799997,
        "text_offset": 301,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 193899993,
        "text_offset": 304,
        "word_length": 3,
        "text": " no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195500001,
        "text_offset": 307,
        "word_length": 6,
        "text": " other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197799997,
        "text_offset": 313,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 200999994,
        "text_offset": 317,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202399988,
        "text_offset": 321,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204599990,
        "text_offset": 325,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207799997,
        "text_offset": 333,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208999996,
        "text_offset": 336,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211199989,
        "text_offset": 341,
        "word_length": 6,
        "text": " sense",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218199996,
        "text_offset": 347,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 219999995,
        "text_offset": 348,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220199995,
        "text_offset": 351,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220799999,
        "text_offset": 354,
        "word_length": 6,
        "text": " could",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221199989,
        "text_offset": 360,
        "word_length": 7,
        "text": " assign",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229399995,
        "text_offset": 367,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234200000,
        "text_offset": 369,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236899986,
        "text_offset": 374,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238599996,
        "text_offset": 377,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241099996,
        "text_offset": 382,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243399991,
        "text_offset": 385,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246999988,
        "text_offset": 391,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 251499996,
        "text_offset": 397,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 253399991,
        "text_offset": 398,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255899991,
        "text_offset": 403,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257199993,
        "text_offset": 407,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258799991,
        "text_offset": 411,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258799991,
        "text_offset": 414,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258999996,
        "text_offset": 416,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 260599994,
        "text_offset": 419,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262500000,
        "text_offset": 421,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 266199989,
        "text_offset": 429,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272600002,
        "text_offset": 435,
        "word_length": 6,
        "text": " imply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 278400001,
        "text_offset": 441,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281000003,
        "text_offset": 446,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281900005,
        "text_offset": 450,
        "word_length": 7,
        "text": " volume",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 282800006,
        "text_offset": 457,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284100008,
        "text_offset": 460,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285300006,
        "text_offset": 464,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287200002,
        "text_offset": 469,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289499998,
        "text_offset": 474,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291900005,
        "text_offset": 477,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294399995,
        "text_offset": 481,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296600008,
        "text_offset": 486,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299200010,
        "text_offset": 489,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301599998,
        "text_offset": 491,
        "word_length": 7,
        "text": " volume",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 303800001,
        "text_offset": 498,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305799999,
        "text_offset": 501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307600002,
        "text_offset": 505,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 310799999,
        "text_offset": 510,
        "word_length": 6,
        "text": " balls",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316800003,
        "text_offset": 516,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 517,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 521,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 526,
        "word_length": 10,
        "text": " obviously",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 536,
        "word_length": 7,
        "text": " cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 543,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 546,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 550,
        "word_length": 5,
        "text": " case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 555,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " It should be clear that neither of these options is a good choice. As a result, we say that m is non-measurable. You might be wondering why this is relevant to the Banachhtarsky paradox. It is relevant because the parts that we will divide the ball into are going to be non-measurable. In fact, there is no other way for the paradox to make sense. If we could assign a size to each of these parts, then the Banachhtarsky paradox would imply that the volume of one unit ball is the same as a volume of two unit balls. And that obviously cannot be the case.",
    "final_audio": "pluto-autumn-oklahoma-hydrogen.mp3"
  },
  {
    "input_text": "One of the essential constructions in the proof of the Banach-Tarski paradox is the use of the free group to \u201cduplicate\u201d the ball. We will see that the free group generated by two elements can be easily divided into parts, such that they can be shifted to create two copies of itself. This is in essence what we wil eventually be doing with the unit ball as well. So what is the free group?",
    "input_data": {
      "input_text": "One of the essential constructions in the proof of the Banach-Tarski paradox is the use of the free group to \u201cduplicate\u201d the ball. We will see that the free group generated by two elements can be easily divided into parts, such that they can be shifted to create two copies of itself. This is in essence what we wil eventually be doing with the unit ball as well. So what is the free group?",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "freddie-pluto-spring-friend.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 4,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7699999,
        "text_offset": 7,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 11,
        "word_length": 10,
        "text": " essential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8899999,
        "text_offset": 21,
        "word_length": 10,
        "text": " construct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9699999,
        "text_offset": 31,
        "word_length": 4,
        "text": "ions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 35,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11699999,
        "text_offset": 42,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 48,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 51,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 55,
        "word_length": 4,
        "text": " Man",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 59,
        "word_length": 4,
        "text": "acht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 63,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 66,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30399998,
        "text_offset": 68,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 76,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 79,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 83,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 87,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 90,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 94,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 99,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 105,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 108,
        "word_length": 10,
        "text": " duplicate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55399999,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57400000,
        "text_offset": 122,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60499999,
        "text_offset": 127,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 128,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 131,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67199997,
        "text_offset": 136,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68299999,
        "text_offset": 140,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69399998,
        "text_offset": 145,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70799999,
        "text_offset": 149,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72399997,
        "text_offset": 154,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74399998,
        "text_offset": 160,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77999997,
        "text_offset": 170,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79399998,
        "text_offset": 173,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81599998,
        "text_offset": 177,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88799996,
        "text_offset": 186,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91399998,
        "text_offset": 190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93999996,
        "text_offset": 193,
        "word_length": 7,
        "text": " easily",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96700000,
        "text_offset": 200,
        "word_length": 8,
        "text": " divided",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99599995,
        "text_offset": 208,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 213,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107599997,
        "text_offset": 219,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599998,
        "text_offset": 224,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 229,
        "word_length": 5,
        "text": " they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115799994,
        "text_offset": 234,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117199997,
        "text_offset": 238,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119599995,
        "text_offset": 241,
        "word_length": 8,
        "text": " shifted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122399997,
        "text_offset": 249,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124799995,
        "text_offset": 252,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799998,
        "text_offset": 259,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129199995,
        "text_offset": 263,
        "word_length": 7,
        "text": " copies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133199996,
        "text_offset": 270,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135799994,
        "text_offset": 273,
        "word_length": 7,
        "text": " itself",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139599995,
        "text_offset": 280,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144099998,
        "text_offset": 281,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145699996,
        "text_offset": 286,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147699995,
        "text_offset": 289,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150399999,
        "text_offset": 292,
        "word_length": 8,
        "text": " essence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 151999998,
        "text_offset": 300,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153999996,
        "text_offset": 305,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155799994,
        "text_offset": 308,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158399996,
        "text_offset": 313,
        "word_length": 11,
        "text": " eventually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 162799997,
        "text_offset": 324,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165199995,
        "text_offset": 327,
        "word_length": 6,
        "text": " doing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168399991,
        "text_offset": 333,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170399990,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600002,
        "text_offset": 342,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174599990,
        "text_offset": 347,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176800003,
        "text_offset": 352,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179200000,
        "text_offset": 355,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181999998,
        "text_offset": 360,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 361,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 364,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 369,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 372,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 376,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 381,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 387,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " One of the essential constructions in the proof of the Manachtarski paradox is the use of the free group to duplicate the ball. We will see that the free group generated by two elements can be easily divided into parts such that they can be shifted to create two copies of itself. This is in essence what we will eventually be doing with the unit ball as well. So what is the free group?",
    "final_audio": "freddie-pluto-spring-friend.mp3"
  },
  {
    "input_text": "Let's look at a definition. The free group f two generated by two elements sigma and tau is the group consisting of all finite products of sigma, tau and their inverses. The identity in this group is the empty product.",
    "input_data": {
      "input_text": "Let's look at a definition. The free group f two generated by two elements sigma and tau is the group consisting of all finite products of sigma, tau and their inverses. The identity in this group is the empty product.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vegan-ack-red-burger.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6499999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9599999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 14,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 16,
        "word_length": 11,
        "text": " definition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 27,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21800000,
        "text_offset": 28,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 32,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999998,
        "text_offset": 37,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 43,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 45,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34599999,
        "text_offset": 46,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39799998,
        "text_offset": 56,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799998,
        "text_offset": 59,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44499998,
        "text_offset": 63,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 72,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 78,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52099997,
        "text_offset": 82,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60199999,
        "text_offset": 86,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 89,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62199997,
        "text_offset": 93,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63799998,
        "text_offset": 99,
        "word_length": 11,
        "text": " consisting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 110,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69099998,
        "text_offset": 113,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71499998,
        "text_offset": 117,
        "word_length": 7,
        "text": " finite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74199998,
        "text_offset": 124,
        "word_length": 9,
        "text": " products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78799998,
        "text_offset": 133,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80599999,
        "text_offset": 136,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84599995,
        "text_offset": 142,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86599998,
        "text_offset": 143,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89299998,
        "text_offset": 147,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90299997,
        "text_offset": 148,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91300001,
        "text_offset": 152,
        "word_length": 6,
        "text": " their",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92799997,
        "text_offset": 158,
        "word_length": 7,
        "text": " invers",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97899999,
        "text_offset": 165,
        "word_length": 2,
        "text": "es",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 167,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 168,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 172,
        "word_length": 9,
        "text": " identity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 181,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 184,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 189,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 195,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 198,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 202,
        "word_length": 6,
        "text": " empty",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 208,
        "word_length": 8,
        "text": " product",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 216,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at a definition. The free group F2 generated by two elements sigma and tau is the group consisting of all finite products of sigma, tau, and their inverses. The identity in this group is the empty product.",
    "final_audio": "vegan-ack-red-burger.mp3"
  },
  {
    "input_text": "These are some examples of elements.",
    "input_data": {
      "input_text": "These are some examples of elements.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "bakerloo-twelve-sixteen-salami.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2500000,
        "text_offset": 0,
        "word_length": 6,
        "text": " These",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4499999,
        "text_offset": 6,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 10,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 15,
        "word_length": 9,
        "text": " examples",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 24,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 27,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " These are some examples of elements.",
    "final_audio": "bakerloo-twelve-sixteen-salami.mp3"
  },
  {
    "input_text": "One way to look at this group is to consider it as a directed tree. At the root of the tree, we have the identity element e. We can then go further down the tree by multiplying on the right with sigma, tau, sigma inverse or tau inverse.",
    "input_data": {
      "input_text": "One way to look at this group is to consider it as a directed tree. At the root of the tree, we have the identity element e. We can then go further down the tree by multiplying on the right with sigma, tau, sigma inverse or tau inverse.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "orange-nebraska-leopard-video.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13399999,
        "text_offset": 0,
        "word_length": 4,
        "text": " One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 4,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19399999,
        "text_offset": 16,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20299999,
        "text_offset": 19,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 24,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 30,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 33,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28499999,
        "text_offset": 36,
        "word_length": 9,
        "text": " consider",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999998,
        "text_offset": 45,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33599998,
        "text_offset": 48,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36599999,
        "text_offset": 51,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 53,
        "word_length": 9,
        "text": " directed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 62,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 67,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 68,
        "word_length": 3,
        "text": " At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 71,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 75,
        "word_length": 5,
        "text": " root",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56399998,
        "text_offset": 80,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57699997,
        "text_offset": 83,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59599997,
        "text_offset": 87,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62499997,
        "text_offset": 92,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63499999,
        "text_offset": 93,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 96,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65799999,
        "text_offset": 101,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67099997,
        "text_offset": 105,
        "word_length": 9,
        "text": " identity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72099997,
        "text_offset": 114,
        "word_length": 8,
        "text": " element",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999999,
        "text_offset": 122,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80199997,
        "text_offset": 124,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 125,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 128,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 132,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 137,
        "word_length": 3,
        "text": " go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 140,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 148,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 153,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 157,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 162,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 165,
        "word_length": 12,
        "text": " multiplying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 177,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 180,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 184,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 190,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 195,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 201,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 202,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 206,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 207,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 213,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 221,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 224,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 228,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 236,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " One way to look at this group is to consider it as a directed tree. At the root of the tree, we have the identity element E. We can then go further down the tree by multiplying on the right with sigma, tau, sigma inverse or tau inverse.",
    "final_audio": "orange-nebraska-leopard-video.mp3"
  },
  {
    "input_text": "Each step down the tree is a multiplication on the right by some element of F2. Note that we can't show the whole tree, since it is infinitely big. We only show the progression of the tree for elements starting with sigma, then starting with sigma tau. You should imagine the tree continuing infinitely for all the other branches as well.",
    "input_data": {
      "input_text": "Each step down the tree is a multiplication on the right by some element of F2. Note that we can't show the whole tree, since it is infinitely big. We only show the progression of the tree for elements starting with sigma, then starting with sigma tau. You should imagine the tree continuing infinitely for all the other branches as well.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "angel-south-pip-delaware.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6199999,
        "text_offset": 5,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8400000,
        "text_offset": 10,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10899999,
        "text_offset": 19,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13799999,
        "text_offset": 24,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 27,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 29,
        "word_length": 15,
        "text": " multiplication",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 44,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 47,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 51,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 57,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399998,
        "text_offset": 60,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 65,
        "word_length": 8,
        "text": " element",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32199999,
        "text_offset": 73,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33299999,
        "text_offset": 76,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 78,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 80,
        "word_length": 5,
        "text": " Note",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 85,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49900000,
        "text_offset": 90,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 93,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 97,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53299999,
        "text_offset": 99,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54699997,
        "text_offset": 104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55899999,
        "text_offset": 108,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57399997,
        "text_offset": 114,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60199997,
        "text_offset": 119,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62199997,
        "text_offset": 125,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63799998,
        "text_offset": 128,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 130,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70799999,
        "text_offset": 141,
        "word_length": 4,
        "text": " big",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74799997,
        "text_offset": 145,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 146,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 149,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 154,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87600002,
        "text_offset": 159,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88400001,
        "text_offset": 163,
        "word_length": 12,
        "text": " progression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92999997,
        "text_offset": 175,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94299998,
        "text_offset": 178,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95199999,
        "text_offset": 182,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97399997,
        "text_offset": 187,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 191,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103399996,
        "text_offset": 200,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106599998,
        "text_offset": 209,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110000000,
        "text_offset": 214,
        "word_length": 4,
        "text": " sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599998,
        "text_offset": 218,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112699999,
        "text_offset": 219,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112899994,
        "text_offset": 220,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114499998,
        "text_offset": 225,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116199994,
        "text_offset": 234,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116799998,
        "text_offset": 239,
        "word_length": 4,
        "text": " sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116799998,
        "text_offset": 243,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121499996,
        "text_offset": 244,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799993,
        "text_offset": 248,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 249,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 253,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 260,
        "word_length": 8,
        "text": " imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 272,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 277,
        "word_length": 11,
        "text": " continuing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 288,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 299,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 303,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 307,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 311,
        "word_length": 6,
        "text": " other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 317,
        "word_length": 9,
        "text": " branches",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 326,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 329,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 334,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Each step down the tree is a multiplication on the right by some element of F2. Note that we can't show the whole tree since it's infinitely big. We only show the progression of the tree for elements starting with suma, then starting with suma tau. You should imagine the tree continuing infinitely for all the other branches as well.",
    "final_audio": "angel-south-pip-delaware.mp3"
  },
  {
    "input_text": "We can represent the same thing symbolically as follows. F2 can be written as",
    "input_data": {
      "input_text": "We can represent the same thing symbolically as follows. F2 can be written as",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "triple-kentucky-mobile-maine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6499999,
        "text_offset": 3,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 7,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9099999,
        "text_offset": 17,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 21,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12399999,
        "text_offset": 26,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14699999,
        "text_offset": 32,
        "word_length": 7,
        "text": " symbol",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 39,
        "word_length": 6,
        "text": "ically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 48,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 57,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 59,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 60,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 64,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 67,
        "word_length": 8,
        "text": " written",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 75,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 78,
        "word_length": 3,
        "text": "...",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We can represent the same thing symbolically as follows. F2 can be written as...",
    "final_audio": "triple-kentucky-mobile-maine.mp3"
  },
  {
    "input_text": "the disjoint union of the empty word, all the elements starting with sigma, the elements starting with sigma inverse, the elements starting with tau, and the elements starting with tau inverse. The notation W of sigma means: the elements starting with sigma.",
    "input_data": {
      "input_text": "the disjoint union of the empty word, all the elements starting with sigma, the elements starting with sigma inverse, the elements starting with tau, and the elements starting with tau inverse. The notation W of sigma means: the elements starting with sigma.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "uranus-early-zulu-december.mp3",
    "word_boundaries": [
      {
        "audio_offset": 10799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 4,
        "word_length": 4,
        "text": " dis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 8,
        "word_length": 5,
        "text": "joint",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 13,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18499999,
        "text_offset": 19,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 22,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21399999,
        "text_offset": 26,
        "word_length": 6,
        "text": " empty",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 32,
        "word_length": 5,
        "text": " word",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899998,
        "text_offset": 37,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 38,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 42,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32899998,
        "text_offset": 46,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35699999,
        "text_offset": 55,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38499999,
        "text_offset": 64,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39499999,
        "text_offset": 69,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44499998,
        "text_offset": 75,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 76,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49299998,
        "text_offset": 80,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 89,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55099999,
        "text_offset": 98,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57500000,
        "text_offset": 103,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 109,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62999997,
        "text_offset": 117,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64999997,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66999998,
        "text_offset": 122,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69599997,
        "text_offset": 131,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 140,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72999997,
        "text_offset": 145,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77099997,
        "text_offset": 149,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80199995,
        "text_offset": 150,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80299997,
        "text_offset": 154,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84000000,
        "text_offset": 158,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 167,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90199999,
        "text_offset": 176,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90799999,
        "text_offset": 181,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94399995,
        "text_offset": 185,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97799997,
        "text_offset": 193,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 194,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 198,
        "word_length": 9,
        "text": " notation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 207,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 209,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 212,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 218,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 224,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 228,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 237,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 246,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 251,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 257,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The disjoint union of the empty word, all the elements starting with sigma, the elements starting with sigma inverse, the elements starting with tau, and the elements starting with tau inverse. The notation W of sigma means the elements starting with sigma.",
    "final_audio": "uranus-early-zulu-december.mp3"
  },
  {
    "input_text": "Now let's take a closer look at the branch that has elements starting with sigma.",
    "input_data": {
      "input_text": "Now let's take a closer look at the branch that has elements starting with sigma.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "south-network-nitrogen-bakerloo.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 4,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 8,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 10,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 15,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 17,
        "word_length": 7,
        "text": " closer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 24,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 29,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 32,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 36,
        "word_length": 7,
        "text": " branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 43,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 48,
        "word_length": 4,
        "text": " has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27299998,
        "text_offset": 52,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32399998,
        "text_offset": 61,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 70,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36799999,
        "text_offset": 75,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38299999,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now let's take a closer look at the branch that has elements starting with Sigma.",
    "final_audio": "south-network-nitrogen-bakerloo.mp3"
  },
  {
    "input_text": "Notice that when, for all these elements, we multiply on the left by sigma inverse, we get the whole tree again!",
    "input_data": {
      "input_text": "Notice that when, for all these elements, we multiply on the left by sigma inverse, we get the whole tree again!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "november-zebra-solar-kilo.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8299999,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 7,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 12,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23199999,
        "text_offset": 17,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 21,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26799999,
        "text_offset": 25,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 31,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 40,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 43,
        "word_length": 9,
        "text": " multiply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 52,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41999998,
        "text_offset": 55,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43699998,
        "text_offset": 59,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 64,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48799998,
        "text_offset": 67,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50899999,
        "text_offset": 73,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "text_offset": 81,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56299998,
        "text_offset": 82,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57099997,
        "text_offset": 85,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799997,
        "text_offset": 89,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 93,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59300000,
        "text_offset": 99,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59600000,
        "text_offset": 104,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 110,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice that when for all these elements we multiply on the left by sigma inverse, we get the whole tree again.",
    "final_audio": "november-zebra-solar-kilo.mp3"
  },
  {
    "input_text": "Or rather, we get almost the whole tree. The part of the tree that shows elements starting with sigma inverse is not there!",
    "input_data": {
      "input_text": "Or rather, we get almost the whole tree. The part of the tree that shows elements starting with sigma inverse is not there!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "happy-alpha-uniform-stream.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4799999,
        "text_offset": 3,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 11,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 14,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 18,
        "word_length": 7,
        "text": " almost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 29,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 35,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999998,
        "text_offset": 40,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899998,
        "text_offset": 41,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799998,
        "text_offset": 45,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 50,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33099999,
        "text_offset": 53,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 57,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34499999,
        "text_offset": 62,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599998,
        "text_offset": 67,
        "word_length": 6,
        "text": " shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39099999,
        "text_offset": 73,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 82,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 91,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 96,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 102,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 110,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 117,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 123,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " or rather, we get almost the whole tree. The part of the tree that shows elements starting with sigma inverse is not there.",
    "final_audio": "happy-alpha-uniform-stream.mp3"
  },
  {
    "input_text": "So what we can conclude from all the trees is the following.",
    "input_data": {
      "input_text": "So what we can conclude from all the trees is the following.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "colorado-orange-michigan-stairway.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4799999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6599999,
        "text_offset": 3,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 11,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 15,
        "word_length": 9,
        "text": " conclude",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15499999,
        "text_offset": 24,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 29,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20999999,
        "text_offset": 37,
        "word_length": 6,
        "text": " trees",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999999,
        "text_offset": 43,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 46,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29999998,
        "text_offset": 50,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 60,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So what we can conclude from all the trees is the following.",
    "final_audio": "colorado-orange-michigan-stairway.mp3"
  },
  {
    "input_text": "If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
    "input_data": {
      "input_text": "If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nevada-florida-mississippi-nebraska.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 6,
        "word_length": 9,
        "text": " multiply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 19,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 28,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30099998,
        "text_offset": 31,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 33,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 34,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 43,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 48,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 54,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 57,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 63,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 71,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53899998,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 78,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59399998,
        "text_offset": 83,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62399997,
        "text_offset": 84,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64299998,
        "text_offset": 87,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 91,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 95,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 98,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 102,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 107,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 113,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 114,
        "word_length": 7,
        "text": " except",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 121,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 125,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 134,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 143,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 148,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 154,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
    "final_audio": "nevada-florida-mississippi-nebraska.mp3"
  },
  {
    "input_text": "This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse",
    "input_data": {
      "input_text": "This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "burger-winter-princess-mobile.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 11,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20499999,
        "text_offset": 18,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22399999,
        "text_offset": 29,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23099999,
        "text_offset": 32,
        "word_length": 7,
        "text": " saying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 39,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299999,
        "text_offset": 44,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399998,
        "text_offset": 46,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29899998,
        "text_offset": 47,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 50,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32399998,
        "text_offset": 54,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 60,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 63,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 69,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 77,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 79,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 85,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57599999,
        "text_offset": 89,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61199998,
        "text_offset": 91,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65099999,
        "text_offset": 97,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68699998,
        "text_offset": 105,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse.",
    "final_audio": "burger-winter-princess-mobile.mp3"
  },
  {
    "input_text": "But the choice for sigma was arbitrary, we could just as well have chosen to looked at the subtree of elements starting with tau.",
    "input_data": {
      "input_text": "But the choice for sigma was arbitrary, we could just as well have chosen to looked at the subtree of elements starting with tau.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mango-stream-network-twenty.mp3",
    "word_boundaries": [
      {
        "audio_offset": 11899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12299999,
        "text_offset": 4,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "text_offset": 8,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 15,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17400000,
        "text_offset": 19,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 25,
        "word_length": 4,
        "text": " was",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25900000,
        "text_offset": 29,
        "word_length": 10,
        "text": " arbitrary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30599999,
        "text_offset": 39,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30999999,
        "text_offset": 40,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 43,
        "word_length": 6,
        "text": " could",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34199999,
        "text_offset": 49,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36699999,
        "text_offset": 54,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38600000,
        "text_offset": 57,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 62,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 67,
        "word_length": 7,
        "text": " chosen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 74,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46299998,
        "text_offset": 77,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999999,
        "text_offset": 82,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 85,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 89,
        "word_length": 4,
        "text": " sub",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 93,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 94,
        "word_length": 1,
        "text": "t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 95,
        "word_length": 3,
        "text": "rie",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 98,
        "word_length": 2,
        "text": "ve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 100,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 109,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 118,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 123,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 125,
        "word_length": 2,
        "text": "OW",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 127,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " But the choice for Sigma was arbitrary. We could just as well have chosen to look at the sub-trieve elements starting with TOW.",
    "final_audio": "mango-stream-network-twenty.mp3"
  },
  {
    "input_text": "So we also have that F2 is the union of tau inverse W tau and W tau inverse",
    "input_data": {
      "input_text": "So we also have that F2 is the union of tau inverse W tau and W tau inverse",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "pizza-single-carbon-ten.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9099999,
        "text_offset": 6,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14899999,
        "text_offset": 16,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 21,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 23,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 24,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 27,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 31,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 37,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30099998,
        "text_offset": 40,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33599998,
        "text_offset": 44,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 52,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 54,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 58,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 62,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 64,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 68,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So we also have that F2 is the union of tau inverse W tau and W tau inverse.",
    "final_audio": "pizza-single-carbon-ten.mp3"
  },
  {
    "input_text": "Let's look at the original partition of F2 that we made.",
    "input_data": {
      "input_text": "Let's look at the original partition of F2 that we made.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mobile-diet-ack-fanta.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2899999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3900000,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5399999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "text_offset": 14,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8400000,
        "text_offset": 18,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 27,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 37,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 40,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 42,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799999,
        "text_offset": 43,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 48,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22099999,
        "text_offset": 51,
        "word_length": 5,
        "text": " made",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at the original partition of F2 that we made.",
    "final_audio": "mobile-diet-ack-fanta.mp3"
  },
  {
    "input_text": "Notice that the parts in the original partition are now disjointly used in the two new partitions that we have found.",
    "input_data": {
      "input_text": "Notice that the parts in the original partition are now disjointly used in the two new partitions that we have found.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "oven-uniform-north-comet.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8399999,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 7,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 12,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 16,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 22,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15299999,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 29,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 38,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "text_offset": 48,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24600000,
        "text_offset": 52,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 56,
        "word_length": 4,
        "text": " dis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399999,
        "text_offset": 60,
        "word_length": 5,
        "text": "joint",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 65,
        "word_length": 2,
        "text": "ly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 67,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799998,
        "text_offset": 72,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42199997,
        "text_offset": 75,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 79,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45299999,
        "text_offset": 83,
        "word_length": 4,
        "text": " new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 87,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399999,
        "text_offset": 92,
        "word_length": 6,
        "text": "itions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 98,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 103,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 106,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 111,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 117,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice that the parts in the original partition are now disjointly used in the two new partitions that we have found.",
    "final_audio": "oven-uniform-north-comet.mp3"
  },
  {
    "input_text": "So what we have now is called a paradoxical decomposition. We have split the free group F2 into five parts, took four of them and sort of shifted two of those parts to create two copies of F2. This is called a paradoxical decomposition",
    "input_data": {
      "input_text": "So what we have now is called a paradoxical decomposition. We have split the free group F2 into five parts, took four of them and sort of shifted two of those parts to create two copies of F2. This is called a paradoxical decomposition",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "ceiling-georgia-mars-bluebird.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2899999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4199999,
        "text_offset": 3,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9299999,
        "text_offset": 16,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 20,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13799999,
        "text_offset": 23,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 30,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19399999,
        "text_offset": 32,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 40,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 44,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37300000,
        "text_offset": 58,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 59,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 62,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199999,
        "text_offset": 67,
        "word_length": 6,
        "text": " split",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60399999,
        "text_offset": 77,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61399998,
        "text_offset": 82,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62799999,
        "text_offset": 88,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63699998,
        "text_offset": 90,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65499999,
        "text_offset": 91,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66999998,
        "text_offset": 96,
        "word_length": 5,
        "text": " five",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70999999,
        "text_offset": 101,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72299997,
        "text_offset": 107,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199997,
        "text_offset": 108,
        "word_length": 5,
        "text": " took",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76399998,
        "text_offset": 113,
        "word_length": 5,
        "text": " four",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77599997,
        "text_offset": 118,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79599997,
        "text_offset": 121,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799995,
        "text_offset": 126,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84199995,
        "text_offset": 130,
        "word_length": 5,
        "text": " sort",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "text_offset": 135,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89499998,
        "text_offset": 138,
        "word_length": 8,
        "text": " shifted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94599995,
        "text_offset": 146,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96999998,
        "text_offset": 150,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98199996,
        "text_offset": 153,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99499998,
        "text_offset": 159,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199998,
        "text_offset": 165,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108599996,
        "text_offset": 168,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110999999,
        "text_offset": 175,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112999997,
        "text_offset": 179,
        "word_length": 7,
        "text": " copies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114899997,
        "text_offset": 186,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117099995,
        "text_offset": 189,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118999996,
        "text_offset": 191,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122899994,
        "text_offset": 192,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 193,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 201,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 208,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 210,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 218,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 222,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 236,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So what we have now is called a paradoxical decomposition. We have split the free group F2 into five parts, took four of them and sort of shifted two of these parts to create two copies of F2. This is called a paradoxical decomposition.",
    "final_audio": "ceiling-georgia-mars-bluebird.mp3"
  },
  {
    "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "missouri-music-sweet-lemon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 4,
        "word_length": 6,
        "text": " might",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 10,
        "word_length": 7,
        "text": " wonder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 17,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 21,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 26,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21099999,
        "text_offset": 34,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 38,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29999998,
        "text_offset": 55,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 59,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33999998,
        "text_offset": 64,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 70,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799998,
        "text_offset": 75,
        "word_length": 5,
        "text": " help",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 80,
        "word_length": 3,
        "text": " us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 83,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 86,
        "word_length": 10,
        "text": " improving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 96,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 100,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 104,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 107,
        "word_length": 3,
        "text": "ats",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 110,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 112,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 120,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " You might wonder how this paradoxical decomposition of the free group will help us in improving the Banachatsky paradox.",
    "final_audio": "missouri-music-sweet-lemon.mp3"
  },
  {
    "input_text": "We can transfer the paradoxical decomposition of the Free Group to the points of the unit sphere almost directly using independent rotations that behave identically to the Free Group. Sigma, tau, and their products will then represent certain rotations. We will see these soon",
    "input_data": {
      "input_text": "We can transfer the paradoxical decomposition of the Free Group to the points of the unit sphere almost directly using independent rotations that behave identically to the Free Group. Sigma, tau, and their products will then represent certain rotations. We will see these soon",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "carpet-stairway-music-bacon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 14199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14499999,
        "text_offset": 3,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 7,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 16,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 20,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25900000,
        "text_offset": 28,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 32,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 46,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 49,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 53,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 58,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "text_offset": 64,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44599997,
        "text_offset": 67,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 71,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 77,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 80,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 84,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54399998,
        "text_offset": 89,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64900000,
        "text_offset": 96,
        "word_length": 7,
        "text": " almost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 103,
        "word_length": 9,
        "text": " directly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199999,
        "text_offset": 112,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399996,
        "text_offset": 118,
        "word_length": 12,
        "text": " independent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74899997,
        "text_offset": 130,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84000000,
        "text_offset": 140,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 145,
        "word_length": 7,
        "text": " behave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199998,
        "text_offset": 152,
        "word_length": 6,
        "text": " ident",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94099993,
        "text_offset": 158,
        "word_length": 6,
        "text": "ically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97300000,
        "text_offset": 164,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99600000,
        "text_offset": 167,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100899996,
        "text_offset": 171,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103799996,
        "text_offset": 176,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107399997,
        "text_offset": 182,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111699995,
        "text_offset": 183,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113599996,
        "text_offset": 189,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116599998,
        "text_offset": 190,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120999999,
        "text_offset": 194,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123399996,
        "text_offset": 198,
        "word_length": 6,
        "text": " their",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799993,
        "text_offset": 204,
        "word_length": 9,
        "text": " products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129799995,
        "text_offset": 213,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132599997,
        "text_offset": 218,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136399998,
        "text_offset": 223,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140399999,
        "text_offset": 233,
        "word_length": 8,
        "text": " certain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144599995,
        "text_offset": 241,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147399997,
        "text_offset": 251,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150900001,
        "text_offset": 252,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154300003,
        "text_offset": 255,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157599997,
        "text_offset": 260,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158499999,
        "text_offset": 264,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159399995,
        "text_offset": 269,
        "word_length": 5,
        "text": " soon",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159699997,
        "text_offset": 274,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We can transfer the paradoxical decomposition of the free group to the point of the unit sphere almost directly using independent rotations that behave identically to the free group. Sigma, tau and their products will then represent certain rotations. We will see this soon.",
    "final_audio": "carpet-stairway-music-bacon.mp3"
  },
  {
    "input_text": "You might notice that the paradoxical decomposition is not of the whole sphere; this is because we need to remove a set of problematic points D from the sphere to make the transfer work. We will see later exactly which points these are.",
    "input_data": {
      "input_text": "You might notice that the paradoxical decomposition is not of the whole sphere; this is because we need to remove a set of problematic points D from the sphere to make the transfer work. We will see later exactly which points these are.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hawaii-green-indigo-yankee.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 4,
        "word_length": 6,
        "text": " might",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 10,
        "word_length": 7,
        "text": " notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9899999,
        "text_offset": 17,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 22,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 26,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 34,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 38,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23700000,
        "text_offset": 52,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24699999,
        "text_offset": 55,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26499999,
        "text_offset": 59,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27499998,
        "text_offset": 62,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 66,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 72,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33700000,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 80,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 85,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 88,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50199999,
        "text_offset": 96,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 99,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 104,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51999998,
        "text_offset": 107,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54399998,
        "text_offset": 114,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55899999,
        "text_offset": 116,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 120,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58899998,
        "text_offset": 123,
        "word_length": 12,
        "text": " problematic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64699997,
        "text_offset": 135,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68599998,
        "text_offset": 142,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72899997,
        "text_offset": 144,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76499998,
        "text_offset": 149,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77799997,
        "text_offset": 153,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83499999,
        "text_offset": 160,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85199995,
        "text_offset": 163,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86799998,
        "text_offset": 168,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 172,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91700000,
        "text_offset": 181,
        "word_length": 5,
        "text": " work",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93799996,
        "text_offset": 186,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 187,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 190,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 195,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 199,
        "word_length": 6,
        "text": " later",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 205,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 213,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 219,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 225,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 232,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 236,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " You might notice that the paradoxical decomposition is not of the whole sphere. This is because we need to remove a set of problematic points d from the sphere to make the transfer work. We will see later exactly which these points are.",
    "final_audio": "hawaii-green-indigo-yankee.mp3"
  },
  {
    "input_text": "You will also see that there is a subset M of the unit sphere that we will apply those rotations to. This is not just any set; we will need to pick it carefully so that this transfer works.",
    "input_data": {
      "input_text": "You will also see that there is a subset M of the unit sphere that we will apply those rotations to. This is not just any set; we will need to pick it carefully so that this transfer works.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "pizza-arkansas-october-winter.mp3",
    "word_boundaries": [
      {
        "audio_offset": 999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 4,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 9,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13700000,
        "text_offset": 14,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 18,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18099999,
        "text_offset": 23,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 29,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20900000,
        "text_offset": 32,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 34,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27200000,
        "text_offset": 41,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 43,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 46,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36499999,
        "text_offset": 50,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 55,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 62,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43899998,
        "text_offset": 67,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44900000,
        "text_offset": 70,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46699998,
        "text_offset": 75,
        "word_length": 6,
        "text": " apply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50499999,
        "text_offset": 81,
        "word_length": 6,
        "text": " those",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56699998,
        "text_offset": 87,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59699997,
        "text_offset": 97,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 100,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 101,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 106,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 109,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 113,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 118,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 122,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 126,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 127,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 130,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 135,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 140,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 143,
        "word_length": 5,
        "text": " pick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 148,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 151,
        "word_length": 10,
        "text": " carefully",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 161,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 164,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 169,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 173,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 182,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 188,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " You will also see that there is a subset M of the unit sphere that we will apply those rotations to. This is not just any set, we will need to pick it carefully so that the transfer works.",
    "final_audio": "pizza-arkansas-october-winter.mp3"
  },
  {
    "input_text": "As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidian group E_3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
    "input_data": {
      "input_text": "As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidian group E_3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fanta-moon-aspen-red.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 3,
        "word_length": 10,
        "text": " mentioned",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 13,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 21,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 24,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20899999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22299998,
        "text_offset": 37,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 51,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31299999,
        "text_offset": 56,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33199998,
        "text_offset": 60,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 65,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37799998,
        "text_offset": 71,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999997,
        "text_offset": 72,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48900001,
        "text_offset": 75,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 80,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 84,
        "word_length": 12,
        "text": " independent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51499998,
        "text_offset": 96,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59399998,
        "text_offset": 106,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 109,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62599997,
        "text_offset": 113,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62999997,
        "text_offset": 115,
        "word_length": 2,
        "text": "uc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 117,
        "word_length": 4,
        "text": "lide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 121,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399998,
        "text_offset": 123,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74999997,
        "text_offset": 129,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77999999,
        "text_offset": 131,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81999998,
        "text_offset": 132,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83799996,
        "text_offset": 135,
        "word_length": 5,
        "text": " form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86399998,
        "text_offset": 140,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88599996,
        "text_offset": 142,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91599998,
        "text_offset": 148,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96599998,
        "text_offset": 158,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98199996,
        "text_offset": 161,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100799999,
        "text_offset": 167,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103799996,
        "text_offset": 171,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107499995,
        "text_offset": 181,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115399994,
        "text_offset": 182,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117399997,
        "text_offset": 185,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119199995,
        "text_offset": 189,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121799998,
        "text_offset": 194,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124399995,
        "text_offset": 203,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799998,
        "text_offset": 207,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132199997,
        "text_offset": 221,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133399996,
        "text_offset": 225,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134799995,
        "text_offset": 229,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137399997,
        "text_offset": 234,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139899997,
        "text_offset": 240,
        "word_length": 5,
        "text": " onto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143899993,
        "text_offset": 245,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145199995,
        "text_offset": 249,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148599996,
        "text_offset": 256,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 151299996,
        "text_offset": 258,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 259,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 262,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 271,
        "word_length": 6,
        "text": " those",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 277,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 287,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 290,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 294,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 301,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidean group E3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
    "final_audio": "fanta-moon-aspen-red.mp3"
  },
  {
    "input_text": "Let's look at an example of two such rotations. These are the rotations around the x and y axes by an angle of the arc cosine of one third. We will call the rotation around the x-axis sigma, and the rotation along the y-axis tau.",
    "input_data": {
      "input_text": "Let's look at an example of two such rotations. These are the rotations around the x and y axes by an angle of the arc cosine of one third. We will call the rotation around the x-axis sigma, and the rotation along the y-axis tau.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "utah-lactose-solar-gee.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3599999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 14,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899998,
        "text_offset": 17,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899998,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 28,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 32,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399998,
        "text_offset": 37,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 47,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 48,
        "word_length": 6,
        "text": " These",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 54,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799998,
        "text_offset": 58,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 62,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999998,
        "text_offset": 72,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 79,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 83,
        "word_length": 2,
        "text": " x",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47399997,
        "text_offset": 85,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 89,
        "word_length": 2,
        "text": " y",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 91,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52500000,
        "text_offset": 92,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199996,
        "text_offset": 96,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199996,
        "text_offset": 99,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61799998,
        "text_offset": 102,
        "word_length": 6,
        "text": " angle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63999998,
        "text_offset": 108,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65999999,
        "text_offset": 111,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "text_offset": 115,
        "word_length": 4,
        "text": " arc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71999998,
        "text_offset": 119,
        "word_length": 7,
        "text": " cosine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73399996,
        "text_offset": 126,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75699996,
        "text_offset": 129,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 131,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82199997,
        "text_offset": 132,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84599995,
        "text_offset": 137,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86300001,
        "text_offset": 138,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 141,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " call",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 151,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 155,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96399998,
        "text_offset": 164,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98399996,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100799999,
        "text_offset": 175,
        "word_length": 2,
        "text": " x",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102799997,
        "text_offset": 177,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105199995,
        "text_offset": 178,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107599997,
        "text_offset": 182,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 188,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 193,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 202,
        "word_length": 6,
        "text": " along",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 208,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 212,
        "word_length": 2,
        "text": " y",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 214,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 215,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 219,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 223,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at an example of two such rotations. These are the rotations around the x and y-axis by an angle of the arc cosine of 1-third. We will call the rotation around the x-axis sigma that rotation along the y-axis tau.",
    "final_audio": "utah-lactose-solar-gee.mp3"
  },
  {
    "input_text": "Let's quickly look at what these two rotations look like by seeing how they apply to the unit sphere.",
    "input_data": {
      "input_text": "Let's quickly look at what these two rotations look like by seeing how they apply to the unit sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "ack-california-montana-yellow.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2499999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3399999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 6,
        "word_length": 8,
        "text": " quickly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7099999,
        "text_offset": 14,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9899999,
        "text_offset": 19,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11200000,
        "text_offset": 22,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 27,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 33,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 37,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23499999,
        "text_offset": 47,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26399999,
        "text_offset": 52,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 57,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499999,
        "text_offset": 60,
        "word_length": 7,
        "text": " seeing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 67,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34899998,
        "text_offset": 71,
        "word_length": 5,
        "text": " they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36499999,
        "text_offset": 76,
        "word_length": 6,
        "text": " apply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39299999,
        "text_offset": 82,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41099998,
        "text_offset": 85,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42099997,
        "text_offset": 89,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299999,
        "text_offset": 94,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45099997,
        "text_offset": 101,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's quickly look at what these two rotations look like by seeing how they apply to the unit sphere.",
    "final_audio": "ack-california-montana-yellow.mp3"
  },
  {
    "input_text": "The rotation tau looks as follows when applied to the sphere",
    "input_data": {
      "input_text": "The rotation tau looks as follows when applied to the sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "johnny-social-utah-nitrogen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 13,
        "word_length": 6,
        "text": " towel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 19,
        "word_length": 6,
        "text": " looks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 25,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 28,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20900000,
        "text_offset": 36,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21899999,
        "text_offset": 41,
        "word_length": 8,
        "text": " applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 49,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25499999,
        "text_offset": 52,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 56,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28400000,
        "text_offset": 63,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The rotation towel looks as follows when applied to the sphere.",
    "final_audio": "johnny-social-utah-nitrogen.mp3"
  },
  {
    "input_text": "The rotation tau looks as follows when applied to the sphere",
    "input_data": {
      "input_text": "The rotation tau looks as follows when applied to the sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "johnny-social-utah-nitrogen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 13,
        "word_length": 6,
        "text": " towel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 19,
        "word_length": 6,
        "text": " looks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 25,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 28,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20900000,
        "text_offset": 36,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21899999,
        "text_offset": 41,
        "word_length": 8,
        "text": " applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 49,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25499999,
        "text_offset": 52,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 56,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28400000,
        "text_offset": 63,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The rotation towel looks as follows when applied to the sphere.",
    "final_audio": "johnny-social-utah-nitrogen.mp3"
  },
  {
    "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "missouri-music-sweet-lemon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 4,
        "word_length": 6,
        "text": " might",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 10,
        "word_length": 7,
        "text": " wonder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 17,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 21,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 26,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21099999,
        "text_offset": 34,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 38,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29999998,
        "text_offset": 55,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 59,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33999998,
        "text_offset": 64,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 70,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799998,
        "text_offset": 75,
        "word_length": 5,
        "text": " help",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 80,
        "word_length": 3,
        "text": " us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 83,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 86,
        "word_length": 10,
        "text": " improving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 96,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 100,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 104,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 107,
        "word_length": 3,
        "text": "ats",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 110,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 112,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 120,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " You might wonder how this paradoxical decomposition of the free group will help us in improving the Banachatsky paradox.",
    "final_audio": "missouri-music-sweet-lemon.mp3"
  },
  {
    "input_text": "We can transfer the paradoxical decomposition of the Free Group to the points of the unit sphere almost directly using independent rotations that behave identically to the Free Group. Sigma, tau, and their products will then represent certain rotations. We will see these soon",
    "input_data": {
      "input_text": "We can transfer the paradoxical decomposition of the Free Group to the points of the unit sphere almost directly using independent rotations that behave identically to the Free Group. Sigma, tau, and their products will then represent certain rotations. We will see these soon",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "carpet-stairway-music-bacon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 14199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14499999,
        "text_offset": 3,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 7,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 16,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 20,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25900000,
        "text_offset": 28,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 32,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 46,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 49,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 53,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 58,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "text_offset": 64,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44599997,
        "text_offset": 67,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 71,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 77,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 80,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 84,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54399998,
        "text_offset": 89,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64900000,
        "text_offset": 96,
        "word_length": 7,
        "text": " almost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 103,
        "word_length": 9,
        "text": " directly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199999,
        "text_offset": 112,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399996,
        "text_offset": 118,
        "word_length": 12,
        "text": " independent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74899997,
        "text_offset": 130,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84000000,
        "text_offset": 140,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 145,
        "word_length": 7,
        "text": " behave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199998,
        "text_offset": 152,
        "word_length": 6,
        "text": " ident",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94099993,
        "text_offset": 158,
        "word_length": 6,
        "text": "ically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97300000,
        "text_offset": 164,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99600000,
        "text_offset": 167,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100899996,
        "text_offset": 171,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103799996,
        "text_offset": 176,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107399997,
        "text_offset": 182,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111699995,
        "text_offset": 183,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113599996,
        "text_offset": 189,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116599998,
        "text_offset": 190,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120999999,
        "text_offset": 194,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123399996,
        "text_offset": 198,
        "word_length": 6,
        "text": " their",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799993,
        "text_offset": 204,
        "word_length": 9,
        "text": " products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129799995,
        "text_offset": 213,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132599997,
        "text_offset": 218,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136399998,
        "text_offset": 223,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140399999,
        "text_offset": 233,
        "word_length": 8,
        "text": " certain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144599995,
        "text_offset": 241,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147399997,
        "text_offset": 251,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150900001,
        "text_offset": 252,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154300003,
        "text_offset": 255,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157599997,
        "text_offset": 260,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158499999,
        "text_offset": 264,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159399995,
        "text_offset": 269,
        "word_length": 5,
        "text": " soon",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159699997,
        "text_offset": 274,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We can transfer the paradoxical decomposition of the free group to the point of the unit sphere almost directly using independent rotations that behave identically to the free group. Sigma, tau and their products will then represent certain rotations. We will see this soon.",
    "final_audio": "carpet-stairway-music-bacon.mp3"
  },
  {
    "input_text": "You might notice that the paradoxical decomposition is not of the whole sphere; this is because we need to remove a set of problematic points D from the sphere to make the transfer work. We will see later exactly which points these are.",
    "input_data": {
      "input_text": "You might notice that the paradoxical decomposition is not of the whole sphere; this is because we need to remove a set of problematic points D from the sphere to make the transfer work. We will see later exactly which points these are.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hawaii-green-indigo-yankee.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 4,
        "word_length": 6,
        "text": " might",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 10,
        "word_length": 7,
        "text": " notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9899999,
        "text_offset": 17,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 22,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 26,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 34,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 38,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23700000,
        "text_offset": 52,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24699999,
        "text_offset": 55,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26499999,
        "text_offset": 59,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27499998,
        "text_offset": 62,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 66,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 72,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33700000,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 80,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 85,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 88,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50199999,
        "text_offset": 96,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 99,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 104,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51999998,
        "text_offset": 107,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54399998,
        "text_offset": 114,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55899999,
        "text_offset": 116,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 120,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58899998,
        "text_offset": 123,
        "word_length": 12,
        "text": " problematic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64699997,
        "text_offset": 135,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68599998,
        "text_offset": 142,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72899997,
        "text_offset": 144,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76499998,
        "text_offset": 149,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77799997,
        "text_offset": 153,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83499999,
        "text_offset": 160,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85199995,
        "text_offset": 163,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86799998,
        "text_offset": 168,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 172,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91700000,
        "text_offset": 181,
        "word_length": 5,
        "text": " work",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93799996,
        "text_offset": 186,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 187,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 190,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 195,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 199,
        "word_length": 6,
        "text": " later",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 205,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 213,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 219,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 225,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 232,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 236,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " You might notice that the paradoxical decomposition is not of the whole sphere. This is because we need to remove a set of problematic points d from the sphere to make the transfer work. We will see later exactly which these points are.",
    "final_audio": "hawaii-green-indigo-yankee.mp3"
  },
  {
    "input_text": "You will also see that there is a subset M of the unit sphere that we will apply those rotations to. This is not just any set; we will need to pick it carefully so that this transfer works.",
    "input_data": {
      "input_text": "You will also see that there is a subset M of the unit sphere that we will apply those rotations to. This is not just any set; we will need to pick it carefully so that this transfer works.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "pizza-arkansas-october-winter.mp3",
    "word_boundaries": [
      {
        "audio_offset": 999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 4,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 9,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13700000,
        "text_offset": 14,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 18,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18099999,
        "text_offset": 23,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 29,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20900000,
        "text_offset": 32,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 34,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27200000,
        "text_offset": 41,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 43,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 46,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36499999,
        "text_offset": 50,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 55,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 62,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43899998,
        "text_offset": 67,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44900000,
        "text_offset": 70,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46699998,
        "text_offset": 75,
        "word_length": 6,
        "text": " apply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50499999,
        "text_offset": 81,
        "word_length": 6,
        "text": " those",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56699998,
        "text_offset": 87,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59699997,
        "text_offset": 97,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 100,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 101,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 106,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 109,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 113,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 118,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 122,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 126,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 127,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 130,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 135,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 140,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 143,
        "word_length": 5,
        "text": " pick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 148,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 151,
        "word_length": 10,
        "text": " carefully",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 161,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 164,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 169,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 173,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 182,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 188,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " You will also see that there is a subset M of the unit sphere that we will apply those rotations to. This is not just any set, we will need to pick it carefully so that the transfer works.",
    "final_audio": "pizza-arkansas-october-winter.mp3"
  },
  {
    "input_text": "As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidian group E_3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
    "input_data": {
      "input_text": "As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidian group E_3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fanta-moon-aspen-red.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 3,
        "word_length": 10,
        "text": " mentioned",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 13,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 21,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 24,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20899999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22299998,
        "text_offset": 37,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 51,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31299999,
        "text_offset": 56,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33199998,
        "text_offset": 60,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 65,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37799998,
        "text_offset": 71,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999997,
        "text_offset": 72,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48900001,
        "text_offset": 75,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 80,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 84,
        "word_length": 12,
        "text": " independent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51499998,
        "text_offset": 96,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59399998,
        "text_offset": 106,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 109,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62599997,
        "text_offset": 113,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62999997,
        "text_offset": 115,
        "word_length": 2,
        "text": "uc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 117,
        "word_length": 4,
        "text": "lide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 121,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399998,
        "text_offset": 123,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74999997,
        "text_offset": 129,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77999999,
        "text_offset": 131,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81999998,
        "text_offset": 132,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83799996,
        "text_offset": 135,
        "word_length": 5,
        "text": " form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86399998,
        "text_offset": 140,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88599996,
        "text_offset": 142,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91599998,
        "text_offset": 148,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96599998,
        "text_offset": 158,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98199996,
        "text_offset": 161,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100799999,
        "text_offset": 167,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103799996,
        "text_offset": 171,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107499995,
        "text_offset": 181,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115399994,
        "text_offset": 182,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117399997,
        "text_offset": 185,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119199995,
        "text_offset": 189,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121799998,
        "text_offset": 194,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124399995,
        "text_offset": 203,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799998,
        "text_offset": 207,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132199997,
        "text_offset": 221,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133399996,
        "text_offset": 225,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134799995,
        "text_offset": 229,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137399997,
        "text_offset": 234,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139899997,
        "text_offset": 240,
        "word_length": 5,
        "text": " onto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143899993,
        "text_offset": 245,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145199995,
        "text_offset": 249,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148599996,
        "text_offset": 256,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 151299996,
        "text_offset": 258,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 259,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 262,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 271,
        "word_length": 6,
        "text": " those",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 277,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 287,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 290,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 294,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 301,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidean group E3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
    "final_audio": "fanta-moon-aspen-red.mp3"
  },
  {
    "input_text": "Let's look at an example of two such rotations. These are the rotations around the x and y axes by an angle of the arc cosine of one third. We will call the rotation around the x-axis sigma, and the rotation along the y-axis tau.",
    "input_data": {
      "input_text": "Let's look at an example of two such rotations. These are the rotations around the x and y axes by an angle of the arc cosine of one third. We will call the rotation around the x-axis sigma, and the rotation along the y-axis tau.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "utah-lactose-solar-gee.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3599999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 14,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899998,
        "text_offset": 17,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899998,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 28,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 32,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399998,
        "text_offset": 37,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 47,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 48,
        "word_length": 6,
        "text": " These",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 54,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799998,
        "text_offset": 58,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 62,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999998,
        "text_offset": 72,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 79,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 83,
        "word_length": 2,
        "text": " x",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47399997,
        "text_offset": 85,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 89,
        "word_length": 2,
        "text": " y",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 91,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52500000,
        "text_offset": 92,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199996,
        "text_offset": 96,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199996,
        "text_offset": 99,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61799998,
        "text_offset": 102,
        "word_length": 6,
        "text": " angle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63999998,
        "text_offset": 108,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65999999,
        "text_offset": 111,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "text_offset": 115,
        "word_length": 4,
        "text": " arc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71999998,
        "text_offset": 119,
        "word_length": 7,
        "text": " cosine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73399996,
        "text_offset": 126,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75699996,
        "text_offset": 129,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 131,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82199997,
        "text_offset": 132,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84599995,
        "text_offset": 137,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86300001,
        "text_offset": 138,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 141,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " call",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 151,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 155,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96399998,
        "text_offset": 164,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98399996,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100799999,
        "text_offset": 175,
        "word_length": 2,
        "text": " x",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102799997,
        "text_offset": 177,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105199995,
        "text_offset": 178,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107599997,
        "text_offset": 182,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 188,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 193,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 202,
        "word_length": 6,
        "text": " along",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 208,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 212,
        "word_length": 2,
        "text": " y",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 214,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 215,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 219,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 223,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at an example of two such rotations. These are the rotations around the x and y-axis by an angle of the arc cosine of 1-third. We will call the rotation around the x-axis sigma that rotation along the y-axis tau.",
    "final_audio": "utah-lactose-solar-gee.mp3"
  },
  {
    "input_text": "Let's quickly look at what these two rotations look like by seeing how they apply to the unit sphere.",
    "input_data": {
      "input_text": "Let's quickly look at what these two rotations look like by seeing how they apply to the unit sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "ack-california-montana-yellow.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2499999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3399999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 6,
        "word_length": 8,
        "text": " quickly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7099999,
        "text_offset": 14,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9899999,
        "text_offset": 19,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11200000,
        "text_offset": 22,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 27,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 33,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 37,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23499999,
        "text_offset": 47,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26399999,
        "text_offset": 52,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 57,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499999,
        "text_offset": 60,
        "word_length": 7,
        "text": " seeing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 67,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34899998,
        "text_offset": 71,
        "word_length": 5,
        "text": " they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36499999,
        "text_offset": 76,
        "word_length": 6,
        "text": " apply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39299999,
        "text_offset": 82,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41099998,
        "text_offset": 85,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42099997,
        "text_offset": 89,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299999,
        "text_offset": 94,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45099997,
        "text_offset": 101,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's quickly look at what these two rotations look like by seeing how they apply to the unit sphere.",
    "final_audio": "ack-california-montana-yellow.mp3"
  },
  {
    "input_text": "The rotation sigma looks as follows when applied to the sphere",
    "input_data": {
      "input_text": "The rotation sigma looks as follows when applied to the sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "december-south-august-nevada.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 4,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4599999,
        "text_offset": 13,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 19,
        "word_length": 6,
        "text": " looks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 25,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17400000,
        "text_offset": 28,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20600000,
        "text_offset": 36,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22099999,
        "text_offset": 41,
        "word_length": 8,
        "text": " applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 49,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26799999,
        "text_offset": 52,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 56,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30599999,
        "text_offset": 63,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The rotation sigma looks as follows when applied to the sphere.",
    "final_audio": "december-south-august-nevada.mp3"
  },
  {
    "input_text": "The rotation tau looks as follows when applied to the sphere",
    "input_data": {
      "input_text": "The rotation tau looks as follows when applied to the sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "johnny-social-utah-nitrogen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 13,
        "word_length": 6,
        "text": " towel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 19,
        "word_length": 6,
        "text": " looks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 25,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 28,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20900000,
        "text_offset": 36,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21899999,
        "text_offset": 41,
        "word_length": 8,
        "text": " applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 49,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25499999,
        "text_offset": 52,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 56,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28400000,
        "text_offset": 63,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The rotation towel looks as follows when applied to the sphere.",
    "final_audio": "johnny-social-utah-nitrogen.mp3"
  },
  {
    "input_text": "As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidian group E_3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
    "input_data": {
      "input_text": "As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidian group E_3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fanta-moon-aspen-red.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 3,
        "word_length": 10,
        "text": " mentioned",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 13,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 21,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 24,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20899999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22299998,
        "text_offset": 37,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 51,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31299999,
        "text_offset": 56,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33199998,
        "text_offset": 60,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 65,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37799998,
        "text_offset": 71,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999997,
        "text_offset": 72,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48900001,
        "text_offset": 75,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 80,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 84,
        "word_length": 12,
        "text": " independent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51499998,
        "text_offset": 96,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59399998,
        "text_offset": 106,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 109,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62599997,
        "text_offset": 113,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62999997,
        "text_offset": 115,
        "word_length": 2,
        "text": "uc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 117,
        "word_length": 4,
        "text": "lide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 121,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399998,
        "text_offset": 123,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74999997,
        "text_offset": 129,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77999999,
        "text_offset": 131,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81999998,
        "text_offset": 132,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83799996,
        "text_offset": 135,
        "word_length": 5,
        "text": " form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86399998,
        "text_offset": 140,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88599996,
        "text_offset": 142,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91599998,
        "text_offset": 148,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96599998,
        "text_offset": 158,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98199996,
        "text_offset": 161,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100799999,
        "text_offset": 167,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103799996,
        "text_offset": 171,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107499995,
        "text_offset": 181,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115399994,
        "text_offset": 182,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117399997,
        "text_offset": 185,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119199995,
        "text_offset": 189,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121799998,
        "text_offset": 194,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124399995,
        "text_offset": 203,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799998,
        "text_offset": 207,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132199997,
        "text_offset": 221,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133399996,
        "text_offset": 225,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134799995,
        "text_offset": 229,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137399997,
        "text_offset": 234,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139899997,
        "text_offset": 240,
        "word_length": 5,
        "text": " onto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143899993,
        "text_offset": 245,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145199995,
        "text_offset": 249,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148599996,
        "text_offset": 256,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 151299996,
        "text_offset": 258,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 259,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 262,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 271,
        "word_length": 6,
        "text": " those",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 277,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 287,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 290,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 294,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 301,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidean group E3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
    "final_audio": "fanta-moon-aspen-red.mp3"
  },
  {
    "input_text": "Let's look at an example of two such rotations. These are the rotations around the x and y axes by an angle of the arc cosine of one third. We will call the rotation around the x-axis sigma, and the rotation along the y-axis tau.",
    "input_data": {
      "input_text": "Let's look at an example of two such rotations. These are the rotations around the x and y axes by an angle of the arc cosine of one third. We will call the rotation around the x-axis sigma, and the rotation along the y-axis tau.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "utah-lactose-solar-gee.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3599999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 14,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899998,
        "text_offset": 17,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899998,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 28,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 32,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399998,
        "text_offset": 37,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 47,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 48,
        "word_length": 6,
        "text": " These",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 54,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799998,
        "text_offset": 58,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 62,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999998,
        "text_offset": 72,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 79,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 83,
        "word_length": 2,
        "text": " x",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47399997,
        "text_offset": 85,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 89,
        "word_length": 2,
        "text": " y",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 91,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52500000,
        "text_offset": 92,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199996,
        "text_offset": 96,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199996,
        "text_offset": 99,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61799998,
        "text_offset": 102,
        "word_length": 6,
        "text": " angle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63999998,
        "text_offset": 108,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65999999,
        "text_offset": 111,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "text_offset": 115,
        "word_length": 4,
        "text": " arc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71999998,
        "text_offset": 119,
        "word_length": 7,
        "text": " cosine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73399996,
        "text_offset": 126,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75699996,
        "text_offset": 129,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 131,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82199997,
        "text_offset": 132,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84599995,
        "text_offset": 137,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86300001,
        "text_offset": 138,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 141,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " call",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 151,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 155,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96399998,
        "text_offset": 164,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98399996,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100799999,
        "text_offset": 175,
        "word_length": 2,
        "text": " x",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102799997,
        "text_offset": 177,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105199995,
        "text_offset": 178,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107599997,
        "text_offset": 182,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 188,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 193,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 202,
        "word_length": 6,
        "text": " along",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 208,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 212,
        "word_length": 2,
        "text": " y",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 214,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 215,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 219,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 223,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at an example of two such rotations. These are the rotations around the x and y-axis by an angle of the arc cosine of 1-third. We will call the rotation around the x-axis sigma that rotation along the y-axis tau.",
    "final_audio": "utah-lactose-solar-gee.mp3"
  },
  {
    "input_text": "We will refer to this group of rotations as G sigma tau",
    "input_data": {
      "input_text": "We will refer to this group of rotations as G sigma tau",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "earth-ten-december-double.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4599999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 8,
        "word_length": 6,
        "text": " refer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 14,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 17,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 22,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 28,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17399999,
        "text_offset": 31,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299998,
        "text_offset": 41,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28400000,
        "text_offset": 44,
        "word_length": 2,
        "text": " G",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 46,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399998,
        "text_offset": 52,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will refer to this group of rotations as G sigma tau.",
    "final_audio": "earth-ten-december-double.mp3"
  },
  {
    "input_text": "As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidian group E_3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
    "input_data": {
      "input_text": "As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidian group E_3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fanta-moon-aspen-red.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 3,
        "word_length": 10,
        "text": " mentioned",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 13,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 21,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 24,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20899999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22299998,
        "text_offset": 37,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 51,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31299999,
        "text_offset": 56,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33199998,
        "text_offset": 60,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 65,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37799998,
        "text_offset": 71,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999997,
        "text_offset": 72,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48900001,
        "text_offset": 75,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 80,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 84,
        "word_length": 12,
        "text": " independent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51499998,
        "text_offset": 96,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59399998,
        "text_offset": 106,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 109,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62599997,
        "text_offset": 113,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62999997,
        "text_offset": 115,
        "word_length": 2,
        "text": "uc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 117,
        "word_length": 4,
        "text": "lide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 121,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399998,
        "text_offset": 123,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74999997,
        "text_offset": 129,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77999999,
        "text_offset": 131,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81999998,
        "text_offset": 132,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83799996,
        "text_offset": 135,
        "word_length": 5,
        "text": " form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86399998,
        "text_offset": 140,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88599996,
        "text_offset": 142,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91599998,
        "text_offset": 148,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96599998,
        "text_offset": 158,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98199996,
        "text_offset": 161,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100799999,
        "text_offset": 167,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103799996,
        "text_offset": 171,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107499995,
        "text_offset": 181,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115399994,
        "text_offset": 182,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117399997,
        "text_offset": 185,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119199995,
        "text_offset": 189,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121799998,
        "text_offset": 194,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124399995,
        "text_offset": 203,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799998,
        "text_offset": 207,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132199997,
        "text_offset": 221,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133399996,
        "text_offset": 225,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134799995,
        "text_offset": 229,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137399997,
        "text_offset": 234,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139899997,
        "text_offset": 240,
        "word_length": 5,
        "text": " onto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143899993,
        "text_offset": 245,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145199995,
        "text_offset": 249,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148599996,
        "text_offset": 256,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 151299996,
        "text_offset": 258,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 259,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 262,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 271,
        "word_length": 6,
        "text": " those",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 277,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 287,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 290,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 294,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 301,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidean group E3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
    "final_audio": "fanta-moon-aspen-red.mp3"
  },
  {
    "input_text": "Let's look at an example of two such rotations. These are the rotations around the x and y axes by an angle of the arc cosine of one third. We will call the rotation around the x-axis sigma, and the rotation along the y-axis tau.",
    "input_data": {
      "input_text": "Let's look at an example of two such rotations. These are the rotations around the x and y axes by an angle of the arc cosine of one third. We will call the rotation around the x-axis sigma, and the rotation along the y-axis tau.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "utah-lactose-solar-gee.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3599999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 14,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899998,
        "text_offset": 17,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899998,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 28,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 32,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399998,
        "text_offset": 37,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 47,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 48,
        "word_length": 6,
        "text": " These",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 54,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799998,
        "text_offset": 58,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 62,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999998,
        "text_offset": 72,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 79,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 83,
        "word_length": 2,
        "text": " x",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47399997,
        "text_offset": 85,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 89,
        "word_length": 2,
        "text": " y",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 91,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52500000,
        "text_offset": 92,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199996,
        "text_offset": 96,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199996,
        "text_offset": 99,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61799998,
        "text_offset": 102,
        "word_length": 6,
        "text": " angle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63999998,
        "text_offset": 108,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65999999,
        "text_offset": 111,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "text_offset": 115,
        "word_length": 4,
        "text": " arc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71999998,
        "text_offset": 119,
        "word_length": 7,
        "text": " cosine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73399996,
        "text_offset": 126,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75699996,
        "text_offset": 129,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 131,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82199997,
        "text_offset": 132,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84599995,
        "text_offset": 137,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86300001,
        "text_offset": 138,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 141,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " call",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 151,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 155,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96399998,
        "text_offset": 164,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98399996,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100799999,
        "text_offset": 175,
        "word_length": 2,
        "text": " x",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102799997,
        "text_offset": 177,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105199995,
        "text_offset": 178,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107599997,
        "text_offset": 182,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 188,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 193,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 202,
        "word_length": 6,
        "text": " along",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 208,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 212,
        "word_length": 2,
        "text": " y",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 214,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 215,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 219,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 223,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at an example of two such rotations. These are the rotations around the x and y-axis by an angle of the arc cosine of 1-third. We will call the rotation around the x-axis sigma that rotation along the y-axis tau.",
    "final_audio": "utah-lactose-solar-gee.mp3"
  },
  {
    "input_text": "We will refer to this group of rotations as G sigma tau",
    "input_data": {
      "input_text": "We will refer to this group of rotations as G sigma tau",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "earth-ten-december-double.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4599999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 8,
        "word_length": 6,
        "text": " refer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 14,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 17,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 22,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 28,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17399999,
        "text_offset": 31,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299998,
        "text_offset": 41,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28400000,
        "text_offset": 44,
        "word_length": 2,
        "text": " G",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 46,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399998,
        "text_offset": 52,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will refer to this group of rotations as G sigma tau.",
    "final_audio": "earth-ten-december-double.mp3"
  },
  {
    "input_text": "Let's see how we can create the set M by dividing the sphere by the group of rotations. We will make points equivalent whenever they can be transformed into each other using rotations from G(sigma, tau)",
    "input_data": {
      "input_text": "Let's see how we can create the set M by dividing the sphere by the group of rotations. We will make points equivalent whenever they can be transformed into each other using rotations from G(sigma, tau)",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "echo-pasta-table-maine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6199999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 10,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 14,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26399999,
        "text_offset": 17,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 21,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29899999,
        "text_offset": 32,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31200000,
        "text_offset": 36,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 38,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33899999,
        "text_offset": 41,
        "word_length": 9,
        "text": " dividing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 50,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36799999,
        "text_offset": 54,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 61,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 64,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40499999,
        "text_offset": 68,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42599999,
        "text_offset": 74,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 77,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53799998,
        "text_offset": 87,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600002,
        "text_offset": 88,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800003,
        "text_offset": 91,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62600002,
        "text_offset": 96,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65500001,
        "text_offset": 101,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65900001,
        "text_offset": 107,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66200001,
        "text_offset": 118,
        "word_length": 9,
        "text": " whenever",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000001,
        "text_offset": 127,
        "word_length": 5,
        "text": " they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68400001,
        "text_offset": 132,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69200000,
        "text_offset": 136,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 139,
        "word_length": 12,
        "text": " transformed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "text_offset": 151,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70100002,
        "text_offset": 156,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76599998,
        "text_offset": 161,
        "word_length": 6,
        "text": " other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85900001,
        "text_offset": 167,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 173,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 183,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88899998,
        "text_offset": 188,
        "word_length": 2,
        "text": " G",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112799997,
        "text_offset": 190,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117700004,
        "text_offset": 196,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 200,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see how we can create the set M by dividing the sphere by the group of rotations. We will make point equivalent whenever they can be transformed into each other using rotations from G sigma tau.",
    "final_audio": "echo-pasta-table-maine.mp3"
  },
  {
    "input_text": "Similarly to the construction of the non-measurable set, we will look at equivalence classes over rotations. The only differences are that we are now looking at three-dimensional rotations instead of two, and that we are not looking at rational rotations, but at rotations from the group generated by sigma and tau.",
    "input_data": {
      "input_text": "Similarly to the construction of the non-measurable set, we will look at equivalence classes over rotations. The only differences are that we are now looking at three-dimensional rotations instead of two, and that we are not looking at rational rotations, but at rotations from the group generated by sigma and tau.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "washington-carbon-paris-edward.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7999999,
        "text_offset": 0,
        "word_length": 10,
        "text": " Similarly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 10,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 17,
        "word_length": 13,
        "text": " construction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 30,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 37,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22799999,
        "text_offset": 41,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22799999,
        "text_offset": 42,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 44,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 46,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34699999,
        "text_offset": 56,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 57,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 60,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 65,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799999,
        "text_offset": 70,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 73,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42799997,
        "text_offset": 81,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 85,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50999999,
        "text_offset": 93,
        "word_length": 5,
        "text": " over",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53899998,
        "text_offset": 98,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63999998,
        "text_offset": 108,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "text_offset": 109,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66699998,
        "text_offset": 113,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199997,
        "text_offset": 118,
        "word_length": 12,
        "text": " differences",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74599997,
        "text_offset": 130,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77599999,
        "text_offset": 134,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81700000,
        "text_offset": 139,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82699995,
        "text_offset": 142,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83899998,
        "text_offset": 146,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85499997,
        "text_offset": 150,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92799997,
        "text_offset": 158,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98599996,
        "text_offset": 161,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101399998,
        "text_offset": 167,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102499995,
        "text_offset": 168,
        "word_length": 11,
        "text": "dimensional",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103299994,
        "text_offset": 179,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103499999,
        "text_offset": 189,
        "word_length": 8,
        "text": " instead",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105399994,
        "text_offset": 197,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107399997,
        "text_offset": 200,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "text_offset": 204,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111099996,
        "text_offset": 205,
        "word_length": 11,
        "text": "dimensional",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115199995,
        "text_offset": 216,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120399999,
        "text_offset": 217,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122099995,
        "text_offset": 221,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123899993,
        "text_offset": 226,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 229,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126900000,
        "text_offset": 233,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129199995,
        "text_offset": 237,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130999999,
        "text_offset": 245,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132599997,
        "text_offset": 248,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135199995,
        "text_offset": 257,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153299994,
        "text_offset": 267,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153999996,
        "text_offset": 271,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156399993,
        "text_offset": 274,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157199997,
        "text_offset": 284,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157599997,
        "text_offset": 289,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158299999,
        "text_offset": 293,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158399991,
        "text_offset": 299,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158599991,
        "text_offset": 309,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158599991,
        "text_offset": 312,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159999990,
        "text_offset": 318,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160199995,
        "text_offset": 322,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160399990,
        "text_offset": 326,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Similarly to the construction of the non-measurable set, we will look at equivalence classes over rotations. The only differences are that we are now looking at three-dimensional rotations instead of two-dimensional, and that we are not looking at rational rotations but at rotations from the group generated by sigma and tau.",
    "final_audio": "washington-carbon-paris-edward.mp3"
  },
  {
    "input_text": "Let's once again look at how the equivalence classes are formed; we apply rotations from G(sigma, tau) to it. Each color here represents a unique equivalence class. Of course, as was the case with the non-measurable set and the tree of the free group, this is an infinite process of which we can only show a finite part. This is because, to get the equivalence class of any particular point, we would need to apply ALL rotations from the group G(tau, sigma) to it; hopefully these finite examples do illustrate how that would be done. The lines from the origin to the points are there to make it easier to see how the points are rotating.",
    "input_data": {
      "input_text": "Let's once again look at how the equivalence classes are formed; we apply rotations from G(sigma, tau) to it. Each color here represents a unique equivalence class. Of course, as was the case with the non-measurable set and the tree of the free group, this is an infinite process of which we can only show a finite part. This is because, to get the equivalence class of any particular point, we would need to apply ALL rotations from the group G(tau, sigma) to it; hopefully these finite examples do illustrate how that would be done. The lines from the origin to the points are there to make it easier to see how the points are rotating.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "friend-carolina-bulldog-twenty.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2699999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5199999,
        "text_offset": 6,
        "word_length": 5,
        "text": " once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 11,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 17,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 22,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13499999,
        "text_offset": 25,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 29,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 33,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 41,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 53,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599998,
        "text_offset": 57,
        "word_length": 7,
        "text": " formed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49600000,
        "text_offset": 65,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49600000,
        "text_offset": 68,
        "word_length": 6,
        "text": " apply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50699999,
        "text_offset": 74,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52199997,
        "text_offset": 84,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54099998,
        "text_offset": 89,
        "word_length": 2,
        "text": " g",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57400000,
        "text_offset": 91,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60399997,
        "text_offset": 97,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64299998,
        "text_offset": 101,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65399999,
        "text_offset": 104,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 107,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77599997,
        "text_offset": 108,
        "word_length": 5,
        "text": " Each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79099996,
        "text_offset": 113,
        "word_length": 6,
        "text": " color",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 119,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84599995,
        "text_offset": 124,
        "word_length": 11,
        "text": " represents",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91300001,
        "text_offset": 135,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93599996,
        "text_offset": 137,
        "word_length": 7,
        "text": " unique",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95299997,
        "text_offset": 144,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97599997,
        "text_offset": 152,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100499997,
        "text_offset": 156,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103899998,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115199995,
        "text_offset": 163,
        "word_length": 3,
        "text": " Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115799999,
        "text_offset": 166,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116799993,
        "text_offset": 173,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117799997,
        "text_offset": 174,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120099997,
        "text_offset": 177,
        "word_length": 4,
        "text": " was",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120199995,
        "text_offset": 181,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120999994,
        "text_offset": 185,
        "word_length": 5,
        "text": " case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122999997,
        "text_offset": 190,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123799996,
        "text_offset": 195,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124299993,
        "text_offset": 199,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124399995,
        "text_offset": 203,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135499997,
        "text_offset": 204,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135499997,
        "text_offset": 206,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135499997,
        "text_offset": 208,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147500000,
        "text_offset": 214,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149299998,
        "text_offset": 218,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 151599998,
        "text_offset": 222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152300000,
        "text_offset": 226,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153099999,
        "text_offset": 231,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153399996,
        "text_offset": 234,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153799996,
        "text_offset": 238,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154899997,
        "text_offset": 243,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156199994,
        "text_offset": 249,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163500003,
        "text_offset": 250,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164700002,
        "text_offset": 255,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166299991,
        "text_offset": 258,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168299999,
        "text_offset": 261,
        "word_length": 9,
        "text": " infinite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170599994,
        "text_offset": 270,
        "word_length": 8,
        "text": " process",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177299995,
        "text_offset": 278,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178999996,
        "text_offset": 281,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181899995,
        "text_offset": 287,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182899990,
        "text_offset": 290,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184499988,
        "text_offset": 294,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186499996,
        "text_offset": 299,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188999996,
        "text_offset": 304,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190099992,
        "text_offset": 306,
        "word_length": 7,
        "text": " finite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192299995,
        "text_offset": 313,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196299991,
        "text_offset": 318,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209199995,
        "text_offset": 319,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209399995,
        "text_offset": 324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000001,
        "text_offset": 327,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216199998,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218699989,
        "text_offset": 338,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220199995,
        "text_offset": 342,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221599998,
        "text_offset": 346,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 223899993,
        "text_offset": 354,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 226299991,
        "text_offset": 358,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229499988,
        "text_offset": 364,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230799989,
        "text_offset": 367,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233199987,
        "text_offset": 371,
        "word_length": 11,
        "text": " particular",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238599996,
        "text_offset": 382,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242599992,
        "text_offset": 388,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 251799998,
        "text_offset": 389,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 251799998,
        "text_offset": 392,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399997,
        "text_offset": 398,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255599994,
        "text_offset": 403,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256299991,
        "text_offset": 406,
        "word_length": 6,
        "text": " apply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261199998,
        "text_offset": 412,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265299997,
        "text_offset": 416,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270499992,
        "text_offset": 426,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272299985,
        "text_offset": 431,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272699995,
        "text_offset": 435,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 274999990,
        "text_offset": 441,
        "word_length": 2,
        "text": " g",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276799993,
        "text_offset": 443,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 280799999,
        "text_offset": 449,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 283899993,
        "text_offset": 453,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286499996,
        "text_offset": 456,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287399997,
        "text_offset": 459,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299799995,
        "text_offset": 460,
        "word_length": 10,
        "text": " Hopefully",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301599988,
        "text_offset": 470,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 302799987,
        "text_offset": 471,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304799995,
        "text_offset": 477,
        "word_length": 7,
        "text": " finite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308199987,
        "text_offset": 484,
        "word_length": 9,
        "text": " examples",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311799993,
        "text_offset": 493,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316799993,
        "text_offset": 496,
        "word_length": 11,
        "text": " illustrate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 320000000,
        "text_offset": 507,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322799987,
        "text_offset": 511,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 325200004,
        "text_offset": 516,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327099990,
        "text_offset": 522,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 328599987,
        "text_offset": 525,
        "word_length": 5,
        "text": " done",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 329799976,
        "text_offset": 530,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334900016,
        "text_offset": 531,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 340600013,
        "text_offset": 535,
        "word_length": 8,
        "text": " lengths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349200019,
        "text_offset": 543,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 351700000,
        "text_offset": 548,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 353600025,
        "text_offset": 552,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 355800018,
        "text_offset": 559,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357700023,
        "text_offset": 562,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360700016,
        "text_offset": 566,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362900009,
        "text_offset": 573,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365700016,
        "text_offset": 577,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 368400020,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400020,
        "text_offset": 586,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000003,
        "text_offset": 591,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379100036,
        "text_offset": 594,
        "word_length": 7,
        "text": " easier",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383400020,
        "text_offset": 601,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800025,
        "text_offset": 604,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391400012,
        "text_offset": 608,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 392700023,
        "text_offset": 612,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 394700031,
        "text_offset": 616,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 394900016,
        "text_offset": 623,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395300006,
        "text_offset": 627,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395600013,
        "text_offset": 636,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's once again look at how the equivalence classes are formed. We apply rotations from g sigma tau to it. Each color here represents a unique equivalence class. Of course, as was the case with the non-measurable set and the tree of the free group, this is an infinite process of which we can only show a finite part. This is because to get the equivalence class of any particular point, we would need to apply all rotations from the group g sigma tau to it. Hopefully, these finite examples do illustrate how that would be done. The lengths from the origin to the points are there to make it easier to see how the points are rotating.",
    "final_audio": "friend-carolina-bulldog-twenty.mp3"
  },
  {
    "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
    "input_data": {
      "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "network-kilo-dakota-coffee.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 4,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 9,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 12,
        "word_length": 3,
        "text": "'ve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13399999,
        "text_offset": 15,
        "word_length": 5,
        "text": " seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 20,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 24,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 27,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20899999,
        "text_offset": 31,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23799998,
        "text_offset": 38,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25699999,
        "text_offset": 46,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 50,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 58,
        "word_length": 5,
        "text": " over",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 63,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 67,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 73,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 76,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 86,
        "word_length": 2,
        "text": " G",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 88,
        "word_length": 8,
        "text": " segment",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 96,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 100,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 103,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 107,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 114,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 119,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 122,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 124,
        "word_length": 6,
        "text": " ident",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 130,
        "word_length": 6,
        "text": "ically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 136,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 139,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 143,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 146,
        "word_length": 4,
        "text": " did",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 150,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 153,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 160,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now that we've seen how we can create equivalence classes over the group of rotations G segment how we can create this at m identically to how we did it before.",
    "final_audio": "network-kilo-dakota-coffee.mp3"
  },
  {
    "input_text": "We look at all the equivalence classes.",
    "input_data": {
      "input_text": "We look at all the equivalence classes.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "september-gee-yankee-fillet.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 3,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 8,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 11,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799998,
        "text_offset": 19,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899999,
        "text_offset": 27,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 31,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25599999,
        "text_offset": 39,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We look at all the equivalence classes.",
    "final_audio": "september-gee-yankee-fillet.mp3"
  },
  {
    "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
    "input_data": {
      "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "washington-delta-green-lithium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4799999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4999999,
        "text_offset": 5,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5299999,
        "text_offset": 11,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5999999,
        "text_offset": 14,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 18,
        "word_length": 2,
        "text": " X",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 20,
        "word_length": 1,
        "text": "M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 21,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27499999,
        "text_offset": 24,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30499999,
        "text_offset": 31,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30599999,
        "text_offset": 32,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31399998,
        "text_offset": 35,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32199999,
        "text_offset": 39,
        "word_length": 5,
        "text": " pick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33199999,
        "text_offset": 44,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 52,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399998,
        "text_offset": 56,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 62,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40499998,
        "text_offset": 67,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299999,
        "text_offset": 72,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44099998,
        "text_offset": 75,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45399999,
        "text_offset": 79,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 87,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 91,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55799999,
        "text_offset": 99,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199999,
        "text_offset": 102,
        "word_length": 5,
        "text": " form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60399997,
        "text_offset": 107,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63299999,
        "text_offset": 111,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66399998,
        "text_offset": 115,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199996,
        "text_offset": 117,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, again by the XM of choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
    "final_audio": "washington-delta-green-lithium.mp3"
  },
  {
    "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere. This results in the paradoxical decomposition of S2 minus D that we saw.",
    "input_data": {
      "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere. This results in the paradoxical decomposition of S2 minus D that we saw.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "idaho-zulu-kitten-six.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6399999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10899999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 5,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 9,
        "word_length": 10,
        "text": " different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 19,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21099999,
        "text_offset": 29,
        "word_length": 8,
        "text": " applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 37,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 40,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "text_offset": 42,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29899998,
        "text_offset": 47,
        "word_length": 3,
        "text": " no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999998,
        "text_offset": 50,
        "word_length": 8,
        "text": " overlap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 58,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39299999,
        "text_offset": 59,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 63,
        "word_length": 10,
        "text": " similarly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45499999,
        "text_offset": 73,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 76,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54999997,
        "text_offset": 83,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 84,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 93,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63599998,
        "text_offset": 97,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65499999,
        "text_offset": 100,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66499998,
        "text_offset": 104,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67799997,
        "text_offset": 114,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68999996,
        "text_offset": 119,
        "word_length": 2,
        "text": " G",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70399999,
        "text_offset": 121,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73099999,
        "text_offset": 122,
        "word_length": 1,
        "text": "S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76999998,
        "text_offset": 123,
        "word_length": 4,
        "text": "igma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76999998,
        "text_offset": 127,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78899998,
        "text_offset": 131,
        "word_length": 6,
        "text": " gives",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79499995,
        "text_offset": 137,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 141,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 147,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89799995,
        "text_offset": 154,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 155,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 160,
        "word_length": 8,
        "text": " results",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 168,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 175,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 183,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 187,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 201,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 204,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 206,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 207,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 213,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 215,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 220,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 223,
        "word_length": 4,
        "text": " saw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 227,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G-Sigma tau gives the whole sphere. This results in the paradoxical decomposition of S2 minus D that we saw.",
    "final_audio": "idaho-zulu-kitten-six.mp3"
  },
  {
    "input_text": "Let's look at that paradoxical decomposition again.",
    "input_data": {
      "input_text": "Let's look at that paradoxical decomposition again.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "harry-avocado-michigan-island.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5699999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 14,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 19,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13100000,
        "text_offset": 27,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 34,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 48,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22799998,
        "text_offset": 54,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at that paradox called decomposition again.",
    "final_audio": "harry-avocado-michigan-island.mp3"
  },
  {
    "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
    "input_data": {
      "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "don-quebec-mango-mississippi.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3399999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5199999,
        "text_offset": 3,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7099999,
        "text_offset": 11,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 16,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 20,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 27,
        "word_length": 6,
        "text": " apart",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 33,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 36,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18699999,
        "text_offset": 40,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 45,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 49,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399999,
        "text_offset": 52,
        "word_length": 4,
        "text": " did",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 56,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30599999,
        "text_offset": 59,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32099999,
        "text_offset": 63,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 68,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38099999,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 75,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 78,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48799998,
        "text_offset": 81,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49299998,
        "text_offset": 84,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 85,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 88,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52999999,
        "text_offset": 93,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54299998,
        "text_offset": 98,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 101,
        "word_length": 6,
        "text": " apply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57599999,
        "text_offset": 107,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59199998,
        "text_offset": 111,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63599998,
        "text_offset": 121,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65299999,
        "text_offset": 124,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67199997,
        "text_offset": 128,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69599997,
        "text_offset": 135,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70899999,
        "text_offset": 138,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72399997,
        "text_offset": 142,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999999,
        "text_offset": 149,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 150,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 154,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 163,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 165,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 174,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 177,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 181,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 187,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 194,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 199,
        "word_length": 6,
        "text": " gives",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 205,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 209,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 215,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 222,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere just gives the whole sphere.",
    "final_audio": "don-quebec-mango-mississippi.mp3"
  },
  {
    "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique. Actually, this set M and all its rotation will be non-measurable - that is why we talked about non-measurable sets before.",
    "input_data": {
      "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique. Actually, this set M and all its rotation will be non-measurable - that is why we talked about non-measurable sets before.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "stairway-north-two-wisconsin.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4500000,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7999999,
        "text_offset": 6,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 16,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13099999,
        "text_offset": 19,
        "word_length": 7,
        "text": " choose",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 26,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 28,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 35,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22099999,
        "text_offset": 37,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 40,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 44,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 51,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32899998,
        "text_offset": 57,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35099998,
        "text_offset": 62,
        "word_length": 6,
        "text": " every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 68,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42799999,
        "text_offset": 77,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 80,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 85,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 89,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51099998,
        "text_offset": 92,
        "word_length": 7,
        "text": " unique",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54799997,
        "text_offset": 99,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64899997,
        "text_offset": 100,
        "word_length": 9,
        "text": " Actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66399998,
        "text_offset": 109,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68799998,
        "text_offset": 110,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71199998,
        "text_offset": 115,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74399998,
        "text_offset": 119,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 121,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78799998,
        "text_offset": 125,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80799996,
        "text_offset": 129,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83499994,
        "text_offset": 133,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86799998,
        "text_offset": 142,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88400001,
        "text_offset": 147,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89599995,
        "text_offset": 150,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90599999,
        "text_offset": 154,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91099996,
        "text_offset": 155,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91799998,
        "text_offset": 157,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93599996,
        "text_offset": 159,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95899996,
        "text_offset": 165,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 166,
        "word_length": 5,
        "text": " That",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 171,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 174,
        "word_length": 4,
        "text": " why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 178,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 181,
        "word_length": 7,
        "text": " talked",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 188,
        "word_length": 6,
        "text": " about",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 194,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 198,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 199,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 201,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 203,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 209,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 214,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 221,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So we will need to choose a subset M of the sphere, such that every rotation of that set is unique. Actually, this set M and all its rotation will be non-measurable. That is why we talked about non-measurable sets before.",
    "final_audio": "stairway-north-two-wisconsin.mp3"
  },
  {
    "input_text": "We will do this by dividing the sphere based on the group of rotations. We will see how exactly we do that right now.",
    "input_data": {
      "input_text": "We will do this by dividing the sphere based on the group of rotations. We will see how exactly we do that right now.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fanta-asparagus-uncle-princess.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6399999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 8,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 16,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "text_offset": 19,
        "word_length": 9,
        "text": " dividing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23700000,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 32,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 39,
        "word_length": 6,
        "text": " based",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33099998,
        "text_offset": 45,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34199999,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 52,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 61,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46599998,
        "text_offset": 71,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52100000,
        "text_offset": 72,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53500001,
        "text_offset": 75,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54500000,
        "text_offset": 80,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57300000,
        "text_offset": 84,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59700000,
        "text_offset": 92,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61300001,
        "text_offset": 96,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62799999,
        "text_offset": 99,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64599997,
        "text_offset": 102,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 107,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68299999,
        "text_offset": 113,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 117,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will do this by dividing the sphere based on the group of rotations. We will see exactly how we do that right now.",
    "final_audio": "fanta-asparagus-uncle-princess.mp3"
  },
  {
    "input_text": "So, we have now come to the end of this video. Hopefully you now have a decent grasp of the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "So, we have now come to the end of this video. Hopefully you now have a decent grasp of the Banach-Tarski paradox.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "twelve-ceiling-johnny-avocado.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9399999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12899999,
        "text_offset": 6,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 15,
        "word_length": 5,
        "text": " come",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 20,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 23,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 27,
        "word_length": 4,
        "text": " end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 31,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399999,
        "text_offset": 34,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 39,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34899999,
        "text_offset": 46,
        "word_length": 10,
        "text": " Hopefully",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34899999,
        "text_offset": 56,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 60,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 65,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 67,
        "word_length": 7,
        "text": " decent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 74,
        "word_length": 6,
        "text": " grasp",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 80,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 84,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 87,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 91,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 95,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 98,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 100,
        "word_length": 3,
        "text": "ors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39600000,
        "text_offset": 103,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39700000,
        "text_offset": 105,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 113,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So we have now come to the end of this video. Hopefully you have a decent grasp now of the Banach Torsky paradox.",
    "final_audio": "twelve-ceiling-johnny-avocado.mp3"
  },
  {
    "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition.",
    "input_data": {
      "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sink-timing-beryllium-timing.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5999999,
        "text_offset": 3,
        "word_length": 8,
        "text": " shortly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10200000,
        "text_offset": 11,
        "word_length": 10,
        "text": " summarize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 21,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 26,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 29,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 34,
        "word_length": 5,
        "text": " seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21399999,
        "text_offset": 39,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 42,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 46,
        "word_length": 5,
        "text": " past",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 51,
        "word_length": 9,
        "text": " chapters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31999999,
        "text_offset": 60,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 61,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39099999,
        "text_offset": 64,
        "word_length": 4,
        "text": " saw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 68,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 70,
        "word_length": 13,
        "text": " construction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41899999,
        "text_offset": 83,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42699998,
        "text_offset": 86,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299998,
        "text_offset": 88,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 92,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 93,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 95,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52399997,
        "text_offset": 97,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 103,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 107,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66299998,
        "text_offset": 108,
        "word_length": 9,
        "text": " explored",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67999999,
        "text_offset": 117,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70599997,
        "text_offset": 121,
        "word_length": 8,
        "text": " concept",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73699998,
        "text_offset": 129,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74099998,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75599999,
        "text_offset": 134,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 142,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79399998,
        "text_offset": 146,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 160,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94499998,
        "text_offset": 161,
        "word_length": 5,
        "text": " dove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99199995,
        "text_offset": 166,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100700001,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103199996,
        "text_offset": 175,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104099998,
        "text_offset": 180,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106300001,
        "text_offset": 186,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109699997,
        "text_offset": 188,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110499997,
        "text_offset": 189,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 190,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 194,
        "word_length": 4,
        "text": " saw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 198,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 202,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 210,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 214,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 228,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " To shortly summarize what we have seen in the past chapters, we saw a construction of a non-measurable set, explored the concept of a paradoxical decomposition, dove into the free group F2, and saw its paradoxical decomposition.",
    "final_audio": "sink-timing-beryllium-timing.mp3"
  },
  {
    "input_text": "We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$.",
    "input_data": {
      "input_text": "We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nebraska-zulu-whiskey-earth.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3399999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 3,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 8,
        "word_length": 7,
        "text": " proved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 19,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 23,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 28,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29999998,
        "text_offset": 31,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30099998,
        "text_offset": 33,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599998,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699998,
        "text_offset": 42,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34699999,
        "text_offset": 45,
        "word_length": 7,
        "text": " passed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35099998,
        "text_offset": 52,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 55,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299998,
        "text_offset": 59,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38600000,
        "text_offset": 67,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 71,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 85,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 90,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 94,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 99,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 105,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 108,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 112,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 119,
        "word_length": 2,
        "text": " s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 121,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 122,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 123,
        "word_length": 7,
        "text": " except",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 130,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 132,
        "word_length": 12,
        "text": " comfortable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 144,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 148,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 151,
        "word_length": 6,
        "text": " fixed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 157,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 164,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 166,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We then proved the Banach Tarski paradox. We passed on the paradoxical decomposition from the free group to the sphere s2, except a comfortable set of fixed points d.",
    "final_audio": "nebraska-zulu-whiskey-earth.mp3"
  },
  {
    "input_text": "Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball.",
    "input_data": {
      "input_text": "Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "green-dakota-nitrogen-equal.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5000000,
        "text_offset": 0,
        "word_length": 5,
        "text": " Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7399999,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8700000,
        "text_offset": 8,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 14,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 16,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13799999,
        "text_offset": 20,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 23,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799998,
        "text_offset": 32,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 36,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 38,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 43,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31699999,
        "text_offset": 52,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 60,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 67,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46799998,
        "text_offset": 81,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 82,
        "word_length": 6,
        "text": " after",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 88,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 94,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 97,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 103,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 105,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 109,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 112,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 119,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 123,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 137,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 142,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 146,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 153,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 156,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 160,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 165,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Then we found a way to add that set d back into the paradox called decomposition, after which we found a way to expand the decomposition from the sphere to the ball.",
    "final_audio": "green-dakota-nitrogen-equal.mp3"
  },
  {
    "input_text": "We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
    "input_data": {
      "input_text": "We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hotel-speaker-west-sixteen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 3,
        "word_length": 8,
        "text": " finally",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15299999,
        "text_offset": 11,
        "word_length": 6,
        "text": " added",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 17,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 21,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22799998,
        "text_offset": 28,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 31,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 35,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 49,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 52,
        "word_length": 7,
        "text": " finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 59,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 63,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 71,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44199998,
        "text_offset": 75,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52200000,
        "text_offset": 89,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 92,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57399997,
        "text_offset": 96,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59899997,
        "text_offset": 101,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61299998,
        "text_offset": 106,
        "word_length": 2,
        "text": " B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199997,
        "text_offset": 108,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67099997,
        "text_offset": 109,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball B3.",
    "final_audio": "hotel-speaker-west-sixteen.mp3"
  },
  {
    "input_text": "It is also possible to generalize this result, which is shown in the thesis.",
    "input_data": {
      "input_text": "It is also possible to generalize this result, which is shown in the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fish-edward-lake-connecticut.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 3,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8599999,
        "text_offset": 6,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 11,
        "word_length": 9,
        "text": " possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 20,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 23,
        "word_length": 8,
        "text": " general",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16299999,
        "text_offset": 31,
        "word_length": 3,
        "text": "ize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 34,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "text_offset": 39,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25499999,
        "text_offset": 46,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 47,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 53,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 56,
        "word_length": 6,
        "text": " shown",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999998,
        "text_offset": 62,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 69,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " It is also possible to generalize this result, which is shown in the thesis.",
    "final_audio": "fish-edward-lake-connecticut.mp3"
  },
  {
    "input_text": "This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations.",
    "input_data": {
      "input_text": "This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "network-south-lion-lima.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3200000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 8,
        "text": " general",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 13,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 20,
        "word_length": 6,
        "text": " shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15499999,
        "text_offset": 26,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 31,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 35,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 39,
        "word_length": 10,
        "text": " transform",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25599999,
        "text_offset": 49,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 53,
        "word_length": 8,
        "text": " bounded",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 61,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34799998,
        "text_offset": 65,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 70,
        "word_length": 9,
        "text": " interior",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 79,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 86,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 91,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 95,
        "word_length": 6,
        "text": " other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 101,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 105,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 110,
        "word_length": 7,
        "text": " finite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 117,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 119,
        "word_length": 2,
        "text": "uc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 121,
        "word_length": 4,
        "text": "lide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 125,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 127,
        "word_length": 16,
        "text": " transformations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 143,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This general result shows that you can transform any bounded set with interior points into any other set with finite Euclidean transformations.",
    "final_audio": "network-south-lion-lima.mp3"
  },
  {
    "input_text": "If that sounds interesting, make sure to read the thesis.",
    "input_data": {
      "input_text": "If that sounds interesting, make sure to read the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mango-kansas-network-grey.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 3,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 8,
        "word_length": 7,
        "text": " sounds",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8999999,
        "text_offset": 15,
        "word_length": 12,
        "text": " interesting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11200000,
        "text_offset": 27,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13100000,
        "text_offset": 30,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 34,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 35,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18499999,
        "text_offset": 40,
        "word_length": 5,
        "text": " sure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799999,
        "text_offset": 45,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 48,
        "word_length": 5,
        "text": " read",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23099999,
        "text_offset": 53,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 57,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26799999,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If that sounds interesting to you, make sure to read the thesis.",
    "final_audio": "mango-kansas-network-grey.mp3"
  },
  {
    "input_text": "So, we have now come to the end of this video. Hopefully you now have a decent grasp of the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "So, we have now come to the end of this video. Hopefully you now have a decent grasp of the Banach-Tarski paradox.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "twelve-ceiling-johnny-avocado.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9399999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12899999,
        "text_offset": 6,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 15,
        "word_length": 5,
        "text": " come",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 20,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 23,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 27,
        "word_length": 4,
        "text": " end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 31,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399999,
        "text_offset": 34,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 39,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34899999,
        "text_offset": 46,
        "word_length": 10,
        "text": " Hopefully",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34899999,
        "text_offset": 56,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 60,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 65,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 67,
        "word_length": 7,
        "text": " decent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 74,
        "word_length": 6,
        "text": " grasp",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 80,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 84,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 87,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 91,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 95,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 98,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 100,
        "word_length": 3,
        "text": "ors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39600000,
        "text_offset": 103,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39700000,
        "text_offset": 105,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 113,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So we have now come to the end of this video. Hopefully you have a decent grasp now of the Banach Torsky paradox.",
    "final_audio": "twelve-ceiling-johnny-avocado.mp3"
  },
  {
    "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition.",
    "input_data": {
      "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sink-timing-beryllium-timing.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5999999,
        "text_offset": 3,
        "word_length": 8,
        "text": " shortly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10200000,
        "text_offset": 11,
        "word_length": 10,
        "text": " summarize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 21,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 26,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 29,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 34,
        "word_length": 5,
        "text": " seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21399999,
        "text_offset": 39,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 42,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 46,
        "word_length": 5,
        "text": " past",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 51,
        "word_length": 9,
        "text": " chapters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31999999,
        "text_offset": 60,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 61,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39099999,
        "text_offset": 64,
        "word_length": 4,
        "text": " saw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 68,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 70,
        "word_length": 13,
        "text": " construction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41899999,
        "text_offset": 83,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42699998,
        "text_offset": 86,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299998,
        "text_offset": 88,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 92,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 93,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 95,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52399997,
        "text_offset": 97,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 103,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 107,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66299998,
        "text_offset": 108,
        "word_length": 9,
        "text": " explored",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67999999,
        "text_offset": 117,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70599997,
        "text_offset": 121,
        "word_length": 8,
        "text": " concept",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73699998,
        "text_offset": 129,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74099998,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75599999,
        "text_offset": 134,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 142,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79399998,
        "text_offset": 146,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 160,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94499998,
        "text_offset": 161,
        "word_length": 5,
        "text": " dove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99199995,
        "text_offset": 166,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100700001,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103199996,
        "text_offset": 175,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104099998,
        "text_offset": 180,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106300001,
        "text_offset": 186,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109699997,
        "text_offset": 188,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110499997,
        "text_offset": 189,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 190,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 194,
        "word_length": 4,
        "text": " saw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 198,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 202,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 210,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 214,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 228,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " To shortly summarize what we have seen in the past chapters, we saw a construction of a non-measurable set, explored the concept of a paradoxical decomposition, dove into the free group F2, and saw its paradoxical decomposition.",
    "final_audio": "sink-timing-beryllium-timing.mp3"
  },
  {
    "input_text": "We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$.",
    "input_data": {
      "input_text": "We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nebraska-zulu-whiskey-earth.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3399999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 3,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 8,
        "word_length": 7,
        "text": " proved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 19,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 23,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 28,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29999998,
        "text_offset": 31,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30099998,
        "text_offset": 33,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599998,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699998,
        "text_offset": 42,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34699999,
        "text_offset": 45,
        "word_length": 7,
        "text": " passed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35099998,
        "text_offset": 52,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 55,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299998,
        "text_offset": 59,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38600000,
        "text_offset": 67,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 71,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 85,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 90,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 94,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 99,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 105,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 108,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 112,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 119,
        "word_length": 2,
        "text": " s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 121,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 122,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 123,
        "word_length": 7,
        "text": " except",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 130,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 132,
        "word_length": 12,
        "text": " comfortable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 144,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 148,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 151,
        "word_length": 6,
        "text": " fixed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 157,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 164,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 166,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We then proved the Banach Tarski paradox. We passed on the paradoxical decomposition from the free group to the sphere s2, except a comfortable set of fixed points d.",
    "final_audio": "nebraska-zulu-whiskey-earth.mp3"
  },
  {
    "input_text": "Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball.",
    "input_data": {
      "input_text": "Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "green-dakota-nitrogen-equal.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5000000,
        "text_offset": 0,
        "word_length": 5,
        "text": " Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7399999,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8700000,
        "text_offset": 8,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 14,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 16,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13799999,
        "text_offset": 20,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 23,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799998,
        "text_offset": 32,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 36,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 38,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 43,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31699999,
        "text_offset": 52,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 60,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 67,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46799998,
        "text_offset": 81,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 82,
        "word_length": 6,
        "text": " after",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 88,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 94,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 97,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 103,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 105,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 109,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 112,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 119,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 123,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 137,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 142,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 146,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 153,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 156,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 160,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 165,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Then we found a way to add that set d back into the paradox called decomposition, after which we found a way to expand the decomposition from the sphere to the ball.",
    "final_audio": "green-dakota-nitrogen-equal.mp3"
  },
  {
    "input_text": "We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
    "input_data": {
      "input_text": "We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hotel-speaker-west-sixteen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 3,
        "word_length": 8,
        "text": " finally",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15299999,
        "text_offset": 11,
        "word_length": 6,
        "text": " added",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 17,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 21,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22799998,
        "text_offset": 28,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 31,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 35,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 49,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 52,
        "word_length": 7,
        "text": " finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 59,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 63,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 71,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44199998,
        "text_offset": 75,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52200000,
        "text_offset": 89,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 92,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57399997,
        "text_offset": 96,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59899997,
        "text_offset": 101,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61299998,
        "text_offset": 106,
        "word_length": 2,
        "text": " B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199997,
        "text_offset": 108,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67099997,
        "text_offset": 109,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball B3.",
    "final_audio": "hotel-speaker-west-sixteen.mp3"
  },
  {
    "input_text": "It is also possible to generalize this result, which is shown in the thesis.",
    "input_data": {
      "input_text": "It is also possible to generalize this result, which is shown in the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fish-edward-lake-connecticut.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 3,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8599999,
        "text_offset": 6,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 11,
        "word_length": 9,
        "text": " possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 20,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 23,
        "word_length": 8,
        "text": " general",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16299999,
        "text_offset": 31,
        "word_length": 3,
        "text": "ize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 34,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "text_offset": 39,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25499999,
        "text_offset": 46,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 47,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 53,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 56,
        "word_length": 6,
        "text": " shown",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999998,
        "text_offset": 62,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 69,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " It is also possible to generalize this result, which is shown in the thesis.",
    "final_audio": "fish-edward-lake-connecticut.mp3"
  },
  {
    "input_text": "This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations.",
    "input_data": {
      "input_text": "This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "network-south-lion-lima.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3200000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 8,
        "text": " general",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 13,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 20,
        "word_length": 6,
        "text": " shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15499999,
        "text_offset": 26,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 31,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 35,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 39,
        "word_length": 10,
        "text": " transform",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25599999,
        "text_offset": 49,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 53,
        "word_length": 8,
        "text": " bounded",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 61,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34799998,
        "text_offset": 65,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 70,
        "word_length": 9,
        "text": " interior",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 79,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 86,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 91,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 95,
        "word_length": 6,
        "text": " other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 101,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 105,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 110,
        "word_length": 7,
        "text": " finite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 117,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 119,
        "word_length": 2,
        "text": "uc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 121,
        "word_length": 4,
        "text": "lide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 125,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 127,
        "word_length": 16,
        "text": " transformations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 143,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This general result shows that you can transform any bounded set with interior points into any other set with finite Euclidean transformations.",
    "final_audio": "network-south-lion-lima.mp3"
  },
  {
    "input_text": "If that sounds interesting, make sure to read the thesis.",
    "input_data": {
      "input_text": "If that sounds interesting, make sure to read the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mango-kansas-network-grey.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 3,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 8,
        "word_length": 7,
        "text": " sounds",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8999999,
        "text_offset": 15,
        "word_length": 12,
        "text": " interesting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11200000,
        "text_offset": 27,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13100000,
        "text_offset": 30,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 34,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 35,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18499999,
        "text_offset": 40,
        "word_length": 5,
        "text": " sure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799999,
        "text_offset": 45,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 48,
        "word_length": 5,
        "text": " read",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23099999,
        "text_offset": 53,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 57,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26799999,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If that sounds interesting to you, make sure to read the thesis.",
    "final_audio": "mango-kansas-network-grey.mp3"
  },
  {
    "input_text": "So, we have now come to the end of this video. Hopefully you now have a decent grasp of the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "So, we have now come to the end of this video. Hopefully you now have a decent grasp of the Banach-Tarski paradox.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "twelve-ceiling-johnny-avocado.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9399999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12899999,
        "text_offset": 6,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 15,
        "word_length": 5,
        "text": " come",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 20,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 23,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 27,
        "word_length": 4,
        "text": " end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 31,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399999,
        "text_offset": 34,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 39,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34899999,
        "text_offset": 46,
        "word_length": 10,
        "text": " Hopefully",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34899999,
        "text_offset": 56,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 60,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 65,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 67,
        "word_length": 7,
        "text": " decent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 74,
        "word_length": 6,
        "text": " grasp",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 80,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 84,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 87,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 91,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 95,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 98,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 100,
        "word_length": 3,
        "text": "ors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39600000,
        "text_offset": 103,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39700000,
        "text_offset": 105,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 113,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So we have now come to the end of this video. Hopefully you have a decent grasp now of the Banach Torsky paradox.",
    "final_audio": "twelve-ceiling-johnny-avocado.mp3"
  },
  {
    "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition.",
    "input_data": {
      "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sink-timing-beryllium-timing.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5999999,
        "text_offset": 3,
        "word_length": 8,
        "text": " shortly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10200000,
        "text_offset": 11,
        "word_length": 10,
        "text": " summarize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 21,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 26,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 29,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 34,
        "word_length": 5,
        "text": " seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21399999,
        "text_offset": 39,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 42,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 46,
        "word_length": 5,
        "text": " past",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 51,
        "word_length": 9,
        "text": " chapters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31999999,
        "text_offset": 60,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 61,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39099999,
        "text_offset": 64,
        "word_length": 4,
        "text": " saw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 68,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 70,
        "word_length": 13,
        "text": " construction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41899999,
        "text_offset": 83,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42699998,
        "text_offset": 86,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299998,
        "text_offset": 88,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 92,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 93,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 95,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52399997,
        "text_offset": 97,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 103,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 107,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66299998,
        "text_offset": 108,
        "word_length": 9,
        "text": " explored",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67999999,
        "text_offset": 117,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70599997,
        "text_offset": 121,
        "word_length": 8,
        "text": " concept",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73699998,
        "text_offset": 129,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74099998,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75599999,
        "text_offset": 134,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 142,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79399998,
        "text_offset": 146,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 160,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94499998,
        "text_offset": 161,
        "word_length": 5,
        "text": " dove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99199995,
        "text_offset": 166,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100700001,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103199996,
        "text_offset": 175,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104099998,
        "text_offset": 180,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106300001,
        "text_offset": 186,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109699997,
        "text_offset": 188,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110499997,
        "text_offset": 189,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 190,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 194,
        "word_length": 4,
        "text": " saw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 198,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 202,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 210,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 214,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 228,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " To shortly summarize what we have seen in the past chapters, we saw a construction of a non-measurable set, explored the concept of a paradoxical decomposition, dove into the free group F2, and saw its paradoxical decomposition.",
    "final_audio": "sink-timing-beryllium-timing.mp3"
  },
  {
    "input_text": "We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$.",
    "input_data": {
      "input_text": "We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nebraska-zulu-whiskey-earth.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3399999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 3,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 8,
        "word_length": 7,
        "text": " proved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 19,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 23,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 28,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29999998,
        "text_offset": 31,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30099998,
        "text_offset": 33,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599998,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699998,
        "text_offset": 42,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34699999,
        "text_offset": 45,
        "word_length": 7,
        "text": " passed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35099998,
        "text_offset": 52,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 55,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299998,
        "text_offset": 59,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38600000,
        "text_offset": 67,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 71,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 85,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 90,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 94,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 99,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 105,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 108,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 112,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 119,
        "word_length": 2,
        "text": " s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 121,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 122,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 123,
        "word_length": 7,
        "text": " except",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 130,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 132,
        "word_length": 12,
        "text": " comfortable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 144,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 148,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 151,
        "word_length": 6,
        "text": " fixed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 157,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 164,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 166,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We then proved the Banach Tarski paradox. We passed on the paradoxical decomposition from the free group to the sphere s2, except a comfortable set of fixed points d.",
    "final_audio": "nebraska-zulu-whiskey-earth.mp3"
  },
  {
    "input_text": "Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball.",
    "input_data": {
      "input_text": "Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "green-dakota-nitrogen-equal.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5000000,
        "text_offset": 0,
        "word_length": 5,
        "text": " Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7399999,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8700000,
        "text_offset": 8,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 14,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 16,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13799999,
        "text_offset": 20,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 23,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799998,
        "text_offset": 32,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 36,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 38,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 43,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31699999,
        "text_offset": 52,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 60,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 67,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46799998,
        "text_offset": 81,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 82,
        "word_length": 6,
        "text": " after",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 88,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 94,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 97,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 103,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 105,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 109,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 112,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 119,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 123,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 137,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 142,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 146,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 153,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 156,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 160,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 165,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Then we found a way to add that set d back into the paradox called decomposition, after which we found a way to expand the decomposition from the sphere to the ball.",
    "final_audio": "green-dakota-nitrogen-equal.mp3"
  },
  {
    "input_text": "We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
    "input_data": {
      "input_text": "We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hotel-speaker-west-sixteen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 3,
        "word_length": 8,
        "text": " finally",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15299999,
        "text_offset": 11,
        "word_length": 6,
        "text": " added",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 17,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 21,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22799998,
        "text_offset": 28,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 31,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 35,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 49,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 52,
        "word_length": 7,
        "text": " finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 59,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 63,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 71,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44199998,
        "text_offset": 75,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52200000,
        "text_offset": 89,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 92,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57399997,
        "text_offset": 96,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59899997,
        "text_offset": 101,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61299998,
        "text_offset": 106,
        "word_length": 2,
        "text": " B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199997,
        "text_offset": 108,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67099997,
        "text_offset": 109,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball B3.",
    "final_audio": "hotel-speaker-west-sixteen.mp3"
  },
  {
    "input_text": "It is also possible to generalize this result, which is shown in the thesis.",
    "input_data": {
      "input_text": "It is also possible to generalize this result, which is shown in the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fish-edward-lake-connecticut.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 3,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8599999,
        "text_offset": 6,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 11,
        "word_length": 9,
        "text": " possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 20,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 23,
        "word_length": 8,
        "text": " general",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16299999,
        "text_offset": 31,
        "word_length": 3,
        "text": "ize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 34,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "text_offset": 39,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25499999,
        "text_offset": 46,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 47,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 53,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 56,
        "word_length": 6,
        "text": " shown",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999998,
        "text_offset": 62,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 69,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " It is also possible to generalize this result, which is shown in the thesis.",
    "final_audio": "fish-edward-lake-connecticut.mp3"
  },
  {
    "input_text": "This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations.",
    "input_data": {
      "input_text": "This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "network-south-lion-lima.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3200000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 8,
        "text": " general",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 13,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 20,
        "word_length": 6,
        "text": " shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15499999,
        "text_offset": 26,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 31,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 35,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 39,
        "word_length": 10,
        "text": " transform",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25599999,
        "text_offset": 49,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 53,
        "word_length": 8,
        "text": " bounded",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 61,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34799998,
        "text_offset": 65,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 70,
        "word_length": 9,
        "text": " interior",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 79,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 86,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 91,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 95,
        "word_length": 6,
        "text": " other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 101,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 105,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 110,
        "word_length": 7,
        "text": " finite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 117,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 119,
        "word_length": 2,
        "text": "uc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 121,
        "word_length": 4,
        "text": "lide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 125,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 127,
        "word_length": 16,
        "text": " transformations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 143,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This general result shows that you can transform any bounded set with interior points into any other set with finite Euclidean transformations.",
    "final_audio": "network-south-lion-lima.mp3"
  },
  {
    "input_text": "If that sounds interesting, make sure to read the thesis.",
    "input_data": {
      "input_text": "If that sounds interesting, make sure to read the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mango-kansas-network-grey.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 3,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 8,
        "word_length": 7,
        "text": " sounds",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8999999,
        "text_offset": 15,
        "word_length": 12,
        "text": " interesting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11200000,
        "text_offset": 27,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13100000,
        "text_offset": 30,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 34,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 35,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18499999,
        "text_offset": 40,
        "word_length": 5,
        "text": " sure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799999,
        "text_offset": 45,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 48,
        "word_length": 5,
        "text": " read",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23099999,
        "text_offset": 53,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 57,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26799999,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If that sounds interesting to you, make sure to read the thesis.",
    "final_audio": "mango-kansas-network-grey.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fish-ten-table-freddie.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3899999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6199999,
        "text_offset": 3,
        "word_length": 4,
        "text": " why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8100000,
        "text_offset": 7,
        "word_length": 5,
        "text": " does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9600000,
        "text_offset": 12,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 17,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14299999,
        "text_offset": 25,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 29,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 43,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 46,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 52,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31999999,
        "text_offset": 60,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33999999,
        "text_offset": 64,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35699998,
        "text_offset": 68,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 71,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 75,
        "word_length": 6,
        "text": " units",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41399998,
        "text_offset": 81,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42799999,
        "text_offset": 85,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44599997,
        "text_offset": 87,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45999999,
        "text_offset": 88,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So why does this paradoxical decomposition we found network for all of the units for S2?",
    "final_audio": "fish-ten-table-freddie.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "eight-illinois-butter-fix.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2999999,
        "text_offset": 0,
        "word_length": 9,
        "text": " Although",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 9,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 14,
        "word_length": 9,
        "text": " equation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11099999,
        "text_offset": 23,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13499999,
        "text_offset": 26,
        "word_length": 5,
        "text": " true",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 31,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 32,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799999,
        "text_offset": 35,
        "word_length": 5,
        "text": " does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21599999,
        "text_offset": 40,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 44,
        "word_length": 8,
        "text": " qualify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 52,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30699999,
        "text_offset": 55,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32199999,
        "text_offset": 57,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 65,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 72,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42300000,
        "text_offset": 86,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Although this equation is true, it does not qualify as a paradox called decomposition.",
    "final_audio": "eight-illinois-butter-fix.mp3"
  },
  {
    "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
    "input_data": {
      "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "monkey-lemon-cold-hydrogen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6699999,
        "text_offset": 0,
        "word_length": 5,
        "text": " That",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 7,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 15,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 18,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 22,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 31,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 34,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22399998,
        "text_offset": 38,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25599999,
        "text_offset": 46,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 53,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 67,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34599999,
        "text_offset": 70,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 74,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37599998,
        "text_offset": 79,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 85,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41999998,
        "text_offset": 88,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 92,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46700000,
        "text_offset": 99,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 100,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56800000,
        "text_offset": 104,
        "word_length": 4,
        "text": " dis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56800000,
        "text_offset": 108,
        "word_length": 5,
        "text": "joint",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59500000,
        "text_offset": 113,
        "word_length": 4,
        "text": "ness",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59500000,
        "text_offset": 117,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59500000,
        "text_offset": 120,
        "word_length": 5,
        "text": " lost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 125,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 126,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199999,
        "text_offset": 132,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69599997,
        "text_offset": 135,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72799999,
        "text_offset": 145,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74399998,
        "text_offset": 148,
        "word_length": 6,
        "text": " speak",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76799998,
        "text_offset": 154,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77599997,
        "text_offset": 157,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78399999,
        "text_offset": 159,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82799997,
        "text_offset": 167,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89199995,
        "text_offset": 174,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92799997,
        "text_offset": 188,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99600000,
        "text_offset": 189,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100799999,
        "text_offset": 193,
        "word_length": 12,
        "text": " highlighted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104600000,
        "text_offset": 205,
        "word_length": 9,
        "text": " equation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109599995,
        "text_offset": 214,
        "word_length": 6,
        "text": " shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113399996,
        "text_offset": 220,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116199998,
        "text_offset": 224,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118799996,
        "text_offset": 234,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121599998,
        "text_offset": 237,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199998,
        "text_offset": 242,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128899998,
        "text_offset": 243,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130099997,
        "text_offset": 247,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131399998,
        "text_offset": 250,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132599997,
        "text_offset": 252,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133999996,
        "text_offset": 256,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135999994,
        "text_offset": 258,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141199998,
        "text_offset": 268,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143999996,
        "text_offset": 276,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 280,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 285,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 289,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 293,
        "word_length": 12,
        "text": " necessarily",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 305,
        "word_length": 4,
        "text": " dis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 309,
        "word_length": 5,
        "text": "joint",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 314,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " That's because in the transfer of the paradox called decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradox called decomposition. The highlighted equation shows the partition we want, but it's not a partition because the sets are not necessarily disjoint.",
    "final_audio": "monkey-lemon-cold-hydrogen.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "item-undress-sweet-tango.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 4,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16899999,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "text_offset": 17,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 23,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 25,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24899998,
        "text_offset": 26,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27499998,
        "text_offset": 28,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 29,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33899999,
        "text_offset": 31,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 34,
        "word_length": 4,
        "text": " una",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46599998,
        "text_offset": 38,
        "word_length": 5,
        "text": "ffect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47099997,
        "text_offset": 43,
        "word_length": 2,
        "text": "ed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47399997,
        "text_offset": 45,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48299999,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 52,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 61,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 67,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 68,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 74,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 80,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 85,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 88,
        "word_length": 7,
        "text": " cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 98,
        "word_length": 5,
        "text": " sure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 103,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 108,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 111,
        "word_length": 4,
        "text": " isn",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 115,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 117,
        "word_length": 10,
        "text": " contained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 127,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 130,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 135,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 137,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 141,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 143,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 149,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " For example, the point 1, 0, 0 is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W sigma.",
    "final_audio": "item-undress-sweet-tango.mp3"
  },
  {
    "input_text": "Let's see this visually.",
    "input_data": {
      "input_text": "Let's see this visually.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "blue-tennessee-whiskey-east.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5300000,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 10,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10300000,
        "text_offset": 15,
        "word_length": 9,
        "text": " visually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 24,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see this visually.",
    "final_audio": "blue-tennessee-whiskey-east.mp3"
  },
  {
    "input_text": "Applying sigma to the whole sphere looks like this. The red dot is the point (1, 0, 0), and as you can see, it is entirely unaffected by the rotation",
    "input_data": {
      "input_text": "Applying sigma to the whole sphere looks like this. The red dot is the point (1, 0, 0), and as you can see, it is entirely unaffected by the rotation",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "carbon-colorado-low-one.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " App",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9399999,
        "text_offset": 4,
        "word_length": 5,
        "text": "lying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 9,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 15,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 18,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18499999,
        "text_offset": 22,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 28,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 6,
        "text": " looks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 41,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 46,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33199998,
        "text_offset": 51,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299999,
        "text_offset": 52,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299999,
        "text_offset": 56,
        "word_length": 4,
        "text": " red",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 60,
        "word_length": 4,
        "text": " dot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 64,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999999,
        "text_offset": 67,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49600000,
        "text_offset": 71,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 73,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 74,
        "word_length": 3,
        "text": "100",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59099998,
        "text_offset": 77,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60699999,
        "text_offset": 81,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61799998,
        "text_offset": 84,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63399999,
        "text_offset": 88,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65399999,
        "text_offset": 92,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69599997,
        "text_offset": 96,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 97,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 100,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 103,
        "word_length": 9,
        "text": " entirely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 112,
        "word_length": 4,
        "text": " una",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 116,
        "word_length": 5,
        "text": "ffect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 121,
        "word_length": 2,
        "text": "ed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 123,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 126,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 130,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 139,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Applying sigma to the whole sphere looks like this. The red dot is the 0.100 and as you can see, it is entirely unaffected by the rotation.",
    "final_audio": "carbon-colorado-low-one.mp3"
  },
  {
    "input_text": "We are now ready to dive into the next step of the proof of the Banach-Tarski paradox, which will be to add the set D back to the decomposition.",
    "input_data": {
      "input_text": "We are now ready to dive into the next step of the proof of the Banach-Tarski paradox, which will be to add the set D back to the decomposition.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "north-bacon-fish-zebra.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 3,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 7,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13100000,
        "text_offset": 11,
        "word_length": 6,
        "text": " ready",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13100000,
        "text_offset": 17,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 20,
        "word_length": 5,
        "text": " dive",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 25,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 30,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19099999,
        "text_offset": 34,
        "word_length": 5,
        "text": " next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 39,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 44,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24900000,
        "text_offset": 47,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 51,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 57,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30399998,
        "text_offset": 60,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 64,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32299998,
        "text_offset": 68,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34499999,
        "text_offset": 71,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36899999,
        "text_offset": 73,
        "word_length": 3,
        "text": "ors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39599999,
        "text_offset": 76,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40499999,
        "text_offset": 78,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42099997,
        "text_offset": 86,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 87,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 93,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 98,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 101,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 104,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 108,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 110,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 114,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 116,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 121,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 124,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 128,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 142,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We are now ready to dive into the next step of the proof of the Banachhtorsky paradox, which will be to add a set d back to the decomposition.",
    "final_audio": "north-bacon-fish-zebra.mp3"
  },
  {
    "input_text": "Let's see the points of D. D has infinitely many points, so we show a finite subset of D to represent all of D.",
    "input_data": {
      "input_text": "Let's see the points of D. D has infinitely many points, so we show a finite subset of D to represent all of D.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "carbon-juliet-pasta-carolina.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3999999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5300000,
        "text_offset": 10,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6799999,
        "text_offset": 14,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 21,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 24,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12899999,
        "text_offset": 26,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 27,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 29,
        "word_length": 4,
        "text": " has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22399999,
        "text_offset": 33,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 44,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 49,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29099999,
        "text_offset": 56,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35299999,
        "text_offset": 57,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37599999,
        "text_offset": 60,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "text_offset": 63,
        "word_length": 6,
        "text": " shall",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40899999,
        "text_offset": 69,
        "word_length": 5,
        "text": " find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42200000,
        "text_offset": 74,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44300000,
        "text_offset": 79,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 86,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399999,
        "text_offset": 89,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50099999,
        "text_offset": 91,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51899998,
        "text_offset": 94,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "text_offset": 104,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57100000,
        "text_offset": 108,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58699998,
        "text_offset": 111,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59299998,
        "text_offset": 113,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see the points of D. D has infinitely many points, so we shall find that subset of D to represent all of D.",
    "final_audio": "carbon-juliet-pasta-carolina.mp3"
  },
  {
    "input_text": "Let's look at these points from above, so we can better see what we are doing.",
    "input_data": {
      "input_text": "Let's look at these points from above, so we can better see what we are doing.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "bravo-glucose-delta-dakota.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3099999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4299999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5999999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "text_offset": 14,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9099999,
        "text_offset": 20,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11100000,
        "text_offset": 27,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 32,
        "word_length": 6,
        "text": " above",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18099999,
        "text_offset": 38,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19499999,
        "text_offset": 41,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699998,
        "text_offset": 44,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 48,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23899999,
        "text_offset": 53,
        "word_length": 7,
        "text": " easily",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 60,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30499999,
        "text_offset": 64,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 69,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34499999,
        "text_offset": 72,
        "word_length": 3,
        "text": "'re",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35499999,
        "text_offset": 75,
        "word_length": 6,
        "text": " doing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at these points from above so we can more easily see what we're doing.",
    "final_audio": "bravo-glucose-delta-dakota.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "autumn-october-carbon-delaware.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 3,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 8,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 13,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15600000,
        "text_offset": 19,
        "word_length": 7,
        "text": " exists",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 26,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 28,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 37,
        "word_length": 4,
        "text": " phi",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30599999,
        "text_offset": 41,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32099999,
        "text_offset": 46,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33199999,
        "text_offset": 51,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34699999,
        "text_offset": 60,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399999,
        "text_offset": 63,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 66,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37299998,
        "text_offset": 68,
        "word_length": 11,
        "text": " repeatedly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43799998,
        "text_offset": 79,
        "word_length": 7,
        "text": " always",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 86,
        "word_length": 6,
        "text": " gives",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 92,
        "word_length": 7,
        "text": " unique",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55099997,
        "text_offset": 99,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60799996,
        "text_offset": 106,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64299998,
        "text_offset": 110,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65499999,
        "text_offset": 112,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67799999,
        "text_offset": 118,
        "word_length": 6,
        "text": " refer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72999997,
        "text_offset": 124,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74999997,
        "text_offset": 127,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76599998,
        "text_offset": 131,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80599999,
        "text_offset": 138,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We know that there exists a rotation phi such that applying it to d repeatedly always gives unique points for a proof refer to the thesis.",
    "final_audio": "autumn-october-carbon-delaware.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mountain-maine-arkansas-west.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6199999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 6,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8899999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 17,
        "word_length": 5,
        "text": " axes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 22,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 25,
        "word_length": 5,
        "text": " keep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 30,
        "word_length": 7,
        "text": " things",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 37,
        "word_length": 5,
        "text": " tidy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399999,
        "text_offset": 43,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899999,
        "text_offset": 46,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 51,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 55,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 57,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199998,
        "text_offset": 63,
        "word_length": 6,
        "text": " black",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42599999,
        "text_offset": 69,
        "word_length": 4,
        "text": " dot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "text_offset": 73,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 76,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "text_offset": 80,
        "word_length": 7,
        "text": " center",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 87,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " keep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 95,
        "word_length": 6,
        "text": " track",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 101,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 108,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 115,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "final_audio": "mountain-maine-arkansas-west.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nevada-asparagus-hamper-carpet.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6599999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 8,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13399999,
        "text_offset": 11,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 17,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 22,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 31,
        "word_length": 4,
        "text": " phi",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27500000,
        "text_offset": 35,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 38,
        "word_length": 4,
        "text": " fix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599998,
        "text_offset": 42,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34099999,
        "text_offset": 46,
        "word_length": 4,
        "text": " gap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36999999,
        "text_offset": 50,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 53,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41399997,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43399999,
        "text_offset": 56,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47300000,
        "text_offset": 60,
        "word_length": 3,
        "text": "'re",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 63,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50499999,
        "text_offset": 67,
        "word_length": 7,
        "text": " seeing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53899998,
        "text_offset": 74,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 80,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61099998,
        "text_offset": 90,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62499997,
        "text_offset": 93,
        "word_length": 4,
        "text": " phi",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64899997,
        "text_offset": 97,
        "word_length": 6,
        "text": " being",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 103,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69099998,
        "text_offset": 113,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "final_audio": "nevada-asparagus-hamper-carpet.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "johnny-high-maine-paris.mp3",
    "word_boundaries": [
      {
        "audio_offset": 11200000,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 8,
        "word_length": 7,
        "text": " define",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18299999,
        "text_offset": 19,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 23,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 25,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26899999,
        "text_offset": 32,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 38,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30999999,
        "text_offset": 41,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799999,
        "text_offset": 43,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799999,
        "text_offset": 48,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56799998,
        "text_offset": 52,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56799998,
        "text_offset": 58,
        "word_length": 9,
        "text": " repeated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799997,
        "text_offset": 67,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60799999,
        "text_offset": 77,
        "word_length": 4,
        "text": " phi",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61899998,
        "text_offset": 81,
        "word_length": 2,
        "text": " n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63399999,
        "text_offset": 83,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64899997,
        "text_offset": 86,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67499997,
        "text_offset": 88,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69899997,
        "text_offset": 89,
        "word_length": 6,
        "text": " Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72400000,
        "text_offset": 95,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74699997,
        "text_offset": 96,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999999,
        "text_offset": 99,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77099997,
        "text_offset": 103,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77999997,
        "text_offset": 105,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78899998,
        "text_offset": 110,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80199997,
        "text_offset": 114,
        "word_length": 9,
        "text": " infinite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84199995,
        "text_offset": 123,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86999998,
        "text_offset": 130,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88600001,
        "text_offset": 133,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92899999,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94599995,
        "text_offset": 146,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98299999,
        "text_offset": 148,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101399993,
        "text_offset": 149,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102199997,
        "text_offset": 152,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103399996,
        "text_offset": 155,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104599995,
        "text_offset": 160,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107199997,
        "text_offset": 165,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109599995,
        "text_offset": 170,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110699996,
        "text_offset": 172,
        "word_length": 4,
        "text": " lot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112199997,
        "text_offset": 176,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113399996,
        "text_offset": 179,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120199999,
        "text_offset": 184,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 189,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 197,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 200,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 203,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " mes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 213,
        "word_length": 3,
        "text": "mer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 216,
        "word_length": 5,
        "text": "izing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 221,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 224,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 229,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 232,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them also because it is quite mesmerizing to look at.",
    "final_audio": "johnny-high-maine-paris.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "pip-undress-johnny-purple.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4999999,
        "text_offset": 0,
        "word_length": 8,
        "text": " Alright",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7199999,
        "text_offset": 8,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 9,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 13,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 15,
        "word_length": 9,
        "text": " continue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 24,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 29,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 33,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 39,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Alright, let's continue with the proof.",
    "final_audio": "pip-undress-johnny-purple.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "charlie-pizza-cardinal-lithium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5099999,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10300000,
        "text_offset": 7,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 16,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 19,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17599999,
        "text_offset": 23,
        "word_length": 5,
        "text": " play",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 28,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20299999,
        "text_offset": 30,
        "word_length": 6,
        "text": " smart",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23099999,
        "text_offset": 36,
        "word_length": 6,
        "text": " trick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29099999,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30699998,
        "text_offset": 43,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32099999,
        "text_offset": 46,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 49,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 56,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39699999,
        "text_offset": 61,
        "word_length": 6,
        "text": " newly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 67,
        "word_length": 8,
        "text": " defined",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45699999,
        "text_offset": 75,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48899998,
        "text_offset": 79,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52200000,
        "text_offset": 81,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 87,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 92,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 94,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 97,
        "word_length": 5,
        "text": " fine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 102,
        "word_length": 6,
        "text": " verse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 108,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 109,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 112,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 116,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 120,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 123,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 125,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 131,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 132,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 135,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 139,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 149,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 154,
        "word_length": 9,
        "text": " visually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 163,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 166,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 174,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice now that we can play a smart trick. If we rotate this newly defined set E minus that D by fine verse, we get all of E again. We can represent this visually as follows.",
    "final_audio": "charlie-pizza-cardinal-lithium.mp3"
  },
  {
    "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "india-vegan-blossom-spring.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3499999,
        "text_offset": 0,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5399999,
        "text_offset": 3,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7199999,
        "text_offset": 8,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8499999,
        "text_offset": 12,
        "word_length": 4,
        "text": " low",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 16,
        "word_length": 5,
        "text": " copy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11799999,
        "text_offset": 21,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 24,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 28,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 34,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 44,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 47,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 49,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 50,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30299998,
        "text_offset": 55,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999998,
        "text_offset": 58,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 60,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 66,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41099997,
        "text_offset": 68,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43899998,
        "text_offset": 69,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 73,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399999,
        "text_offset": 80,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 83,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 86,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 5,
        "text": " high",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 93,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 104,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 108,
        "word_length": 6,
        "text": " where",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 114,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 118,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 124,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 131,
        "word_length": 4,
        "text": " end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 135,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 138,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " we take the low copy of all these rotations of D, that is E minus D, and rotate it by a high inverse to see where all these points end up.",
    "final_audio": "india-vegan-blossom-spring.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nitrogen-cola-table-mango.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2599999,
        "text_offset": 0,
        "word_length": 5,
        "text": " What",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4200000,
        "text_offset": 5,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 9,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 13,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9299999,
        "text_offset": 16,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 21,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 28,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 30,
        "word_length": 5,
        "text": " gets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 35,
        "word_length": 8,
        "text": " covered",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " What you see is that all of E gets covered.",
    "final_audio": "nitrogen-cola-table-mango.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "stream-march-solar-bulldog.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8999999,
        "text_offset": 5,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 6,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 10,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 7,
        "text": " except",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 24,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 28,
        "word_length": 5,
        "text": " last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22799998,
        "text_offset": 33,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27299998,
        "text_offset": 42,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29099999,
        "text_offset": 45,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32399998,
        "text_offset": 47,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36599999,
        "text_offset": 48,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 52,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 57,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 60,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 69,
        "word_length": 5,
        "text": " case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47399997,
        "text_offset": 74,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49900000,
        "text_offset": 82,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50699999,
        "text_offset": 85,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 89,
        "word_length": 8,
        "text": " showing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 97,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 102,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 105,
        "word_length": 4,
        "text": " may",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 109,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 114,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 117,
        "word_length": 5,
        "text": " find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 122,
        "word_length": 4,
        "text": " out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 126,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 131,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 141,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 144,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 146,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57200000,
        "text_offset": 147,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60900001,
        "text_offset": 150,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62300000,
        "text_offset": 155,
        "word_length": 5,
        "text": " find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63399999,
        "text_offset": 160,
        "word_length": 4,
        "text": " out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64900000,
        "text_offset": 164,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65999999,
        "text_offset": 169,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68099999,
        "text_offset": 179,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "text_offset": 182,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199999,
        "text_offset": 184,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Well, all of the except the last rotation of D, but this is only the case because we are showing that we may need to find out many rotations of D. We will find out many rotations of D.",
    "final_audio": "stream-march-solar-bulldog.mp3"
  },
  {
    "input_text": "In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up. This is shown schematically on the left of the screen.",
    "input_data": {
      "input_text": "In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up. This is shown schematically on the left of the screen.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "potato-freddie-alanine-lake.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 3,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 7,
        "word_length": 9,
        "text": " infinite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 16,
        "word_length": 5,
        "text": " case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10600000,
        "text_offset": 21,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10899999,
        "text_offset": 22,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 27,
        "word_length": 6,
        "text": " doesn",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15299999,
        "text_offset": 33,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 35,
        "word_length": 7,
        "text": " happen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 42,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 50,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 54,
        "word_length": 6,
        "text": " every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29099999,
        "text_offset": 60,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35099998,
        "text_offset": 69,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599998,
        "text_offset": 72,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 74,
        "word_length": 6,
        "text": " where",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44599997,
        "text_offset": 80,
        "word_length": 4,
        "text": " phi",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999999,
        "text_offset": 84,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49700000,
        "text_offset": 87,
        "word_length": 8,
        "text": " applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53899998,
        "text_offset": 95,
        "word_length": 2,
        "text": " n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 97,
        "word_length": 6,
        "text": " times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59199998,
        "text_offset": 103,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60699999,
        "text_offset": 107,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63099999,
        "text_offset": 109,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64800000,
        "text_offset": 110,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69199998,
        "text_offset": 114,
        "word_length": 5,
        "text": " copy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 122,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77499997,
        "text_offset": 124,
        "word_length": 8,
        "text": " rotated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78599998,
        "text_offset": 132,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80599997,
        "text_offset": 135,
        "word_length": 4,
        "text": " phi",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81999995,
        "text_offset": 139,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85199995,
        "text_offset": 140,
        "word_length": 2,
        "text": " n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87200002,
        "text_offset": 142,
        "word_length": 5,
        "text": " plus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89200000,
        "text_offset": 147,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91700000,
        "text_offset": 149,
        "word_length": 6,
        "text": " times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93999996,
        "text_offset": 155,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94299998,
        "text_offset": 156,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99800000,
        "text_offset": 161,
        "word_length": 6,
        "text": " cover",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100099997,
        "text_offset": 167,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101199998,
        "text_offset": 170,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103699998,
        "text_offset": 173,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 174,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 179,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 182,
        "word_length": 6,
        "text": " shown",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 188,
        "word_length": 6,
        "text": " schem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 194,
        "word_length": 8,
        "text": "atically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 202,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 205,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 209,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 214,
        "word_length": 5,
        "text": " side",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 219,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 226,
        "word_length": 7,
        "text": " screen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 233,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109499998,
        "text_offset": 234,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599998,
        "text_offset": 239,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112199997,
        "text_offset": 242,
        "word_length": 6,
        "text": " shown",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113999996,
        "text_offset": 248,
        "word_length": 6,
        "text": " schem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115099997,
        "text_offset": 254,
        "word_length": 8,
        "text": "atically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124699997,
        "text_offset": 262,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127599992,
        "text_offset": 265,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128799996,
        "text_offset": 269,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131699995,
        "text_offset": 274,
        "word_length": 5,
        "text": " side",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133399996,
        "text_offset": 279,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133899993,
        "text_offset": 282,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134099993,
        "text_offset": 286,
        "word_length": 7,
        "text": " screen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134399995,
        "text_offset": 293,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In the infinite case, this doesn't happen because for every rotation of D where phi is applied n times the D, the copy of D rotated by phi, n plus 1 times, will cover it up. This is shown schematically on the left side of the screen. This is shown schematically on the left side of the screen.",
    "final_audio": "potato-freddie-alanine-lake.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lithium-alpha-table-wolfram.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5699999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Note",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 5,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 9,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 19,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 23,
        "word_length": 7,
        "text": " things",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 30,
        "word_length": 6,
        "text": " about",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999998,
        "text_offset": 36,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 38,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28099999,
        "text_offset": 44,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999999,
        "text_offset": 45,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34399999,
        "text_offset": 49,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37599999,
        "text_offset": 55,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43399999,
        "text_offset": 63,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 72,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 77,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51899998,
        "text_offset": 82,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54899997,
        "text_offset": 84,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55799999,
        "text_offset": 87,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 89,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60899999,
        "text_offset": 96,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62399997,
        "text_offset": 99,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "text_offset": 101,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71599998,
        "text_offset": 105,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72799997,
        "text_offset": 109,
        "word_length": 7,
        "text": " second",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73999998,
        "text_offset": 116,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75599999,
        "text_offset": 119,
        "word_length": 8,
        "text": " derived",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79799997,
        "text_offset": 127,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83699998,
        "text_offset": 132,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84099998,
        "text_offset": 136,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89200000,
        "text_offset": 141,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91799998,
        "text_offset": 146,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93299994,
        "text_offset": 148,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95899996,
        "text_offset": 151,
        "word_length": 10,
        "text": " contained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96399993,
        "text_offset": 161,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96999998,
        "text_offset": 164,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98599996,
        "text_offset": 166,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102199997,
        "text_offset": 167,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 168,
        "word_length": 5,
        "text": " Feel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 173,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 178,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 181,
        "word_length": 6,
        "text": " pause",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 187,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 191,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 197,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 202,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 205,
        "word_length": 6,
        "text": " check",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 211,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 215,
        "word_length": 9,
        "text": " yourself",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 224,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Note the following two things about E first. The first follows from the fact that D is a subset of E and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
    "final_audio": "lithium-alpha-table-wolfram.mp3"
  },
  {
    "input_text": "Now, since we can partition S2 as follows",
    "input_data": {
      "input_text": "Now, since we can partition S2 as follows",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "music-mars-blossom-maine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6599999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7699999,
        "text_offset": 5,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8699999,
        "text_offset": 11,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9299999,
        "text_offset": 14,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 18,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 28,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 31,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 34,
        "word_length": 4,
        "text": " his",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23399999,
        "text_offset": 38,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25599999,
        "text_offset": 46,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, since we can partition as to his follows,",
    "final_audio": "music-mars-blossom-maine.mp3"
  },
  {
    "input_text": "we can combine all of these to get THIS equation.",
    "input_data": {
      "input_text": "we can combine all of these to get THIS equation.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "batman-juliet-steak-august.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3099999,
        "text_offset": 3,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5300000,
        "text_offset": 7,
        "word_length": 8,
        "text": " combine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9399999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 19,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 22,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 28,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 31,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 35,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22899998,
        "text_offset": 40,
        "word_length": 9,
        "text": " equation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899998,
        "text_offset": 49,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " we can combine all of these to get this equation.",
    "final_audio": "batman-juliet-steak-august.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "west-kitten-island-pennsylvania.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11699999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 5,
        "word_length": 9,
        "text": " remember",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 14,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18299999,
        "text_offset": 18,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 26,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 30,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 44,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34399999,
        "text_offset": 47,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "text_offset": 49,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 50,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37599998,
        "text_offset": 56,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38700000,
        "text_offset": 58,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, remember our paradoxical decomposition of S2 minus D.",
    "final_audio": "west-kitten-island-pennsylvania.mp3"
  },
  {
    "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
    "input_data": {
      "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "louisiana-xray-hamper-equal.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3599999,
        "text_offset": 3,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 7,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 12,
        "word_length": 8,
        "text": " finally",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10300000,
        "text_offset": 20,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 24,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 26,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 34,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 41,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26599999,
        "text_offset": 55,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28099999,
        "text_offset": 58,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499998,
        "text_offset": 60,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 61,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38700000,
        "text_offset": 64,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39999998,
        "text_offset": 70,
        "word_length": 8,
        "text": " substit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42200000,
        "text_offset": 78,
        "word_length": 5,
        "text": "uting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44700000,
        "text_offset": 83,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 87,
        "word_length": 11,
        "text": " expression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50099999,
        "text_offset": 98,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51499998,
        "text_offset": 103,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "text_offset": 109,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56599998,
        "text_offset": 113,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 115,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60499999,
        "text_offset": 116,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64199998,
        "text_offset": 122,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 124,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73699998,
        "text_offset": 128,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76899998,
        "text_offset": 133,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 137,
        "word_length": 11,
        "text": " expression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77699997,
        "text_offset": 148,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 153,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90199999,
        "text_offset": 157,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 158,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 161,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 164,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 170,
        "word_length": 8,
        "text": " tedious",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 178,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 181,
        "word_length": 5,
        "text": " work",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 186,
        "word_length": 4,
        "text": " out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 190,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 193,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 196,
        "word_length": 4,
        "text": " don",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 200,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 202,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 207,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 210,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 215,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98699998,
        "text_offset": 216,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101700000,
        "text_offset": 219,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102599997,
        "text_offset": 222,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105799999,
        "text_offset": 228,
        "word_length": 8,
        "text": " tedious",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108800001,
        "text_offset": 236,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108800001,
        "text_offset": 239,
        "word_length": 5,
        "text": " work",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110700001,
        "text_offset": 244,
        "word_length": 4,
        "text": " out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111800003,
        "text_offset": 248,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112600002,
        "text_offset": 251,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800002,
        "text_offset": 254,
        "word_length": 4,
        "text": " don",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113800001,
        "text_offset": 258,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115000000,
        "text_offset": 260,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115100002,
        "text_offset": 265,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117199993,
        "text_offset": 268,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117399997,
        "text_offset": 273,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We can then finally get a paradox called decomposition of S2 by first substituting the expression with sigma for S2 minus D and then the expression with tau. It is quite tedious to work out so we don't show it here. It is quite tedious to work out so we don't show it here.",
    "final_audio": "louisiana-xray-hamper-equal.mp3"
  },
  {
    "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "william-quiet-mexico-mirror.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 4,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 11,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 12,
        "word_length": 8,
        "text": " however",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 21,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13100000,
        "text_offset": 24,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15599999,
        "text_offset": 29,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 30,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999998,
        "text_offset": 32,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25099998,
        "text_offset": 40,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399998,
        "text_offset": 47,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35499998,
        "text_offset": 61,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36599999,
        "text_offset": 64,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 68,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 70,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799998,
        "text_offset": 71,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 72,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 75,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 78,
        "word_length": 7,
        "text": " wanted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52799999,
        "text_offset": 85,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58399999,
        "text_offset": 88,
        "word_length": 6,
        "text": " write",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58399999,
        "text_offset": 94,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63999998,
        "text_offset": 98,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67300000,
        "text_offset": 112,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68899998,
        "text_offset": 115,
        "word_length": 5,
        "text": " full",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70599999,
        "text_offset": 120,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74999997,
        "text_offset": 121,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76699998,
        "text_offset": 124,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79599997,
        "text_offset": 130,
        "word_length": 14,
        "text": " unfortunately",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81599998,
        "text_offset": 144,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85199999,
        "text_offset": 148,
        "word_length": 4,
        "text": " fit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88099999,
        "text_offset": 152,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89800000,
        "text_offset": 155,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91699995,
        "text_offset": 159,
        "word_length": 7,
        "text": " screen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94999995,
        "text_offset": 166,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96099996,
        "text_offset": 167,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97100000,
        "text_offset": 173,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98600001,
        "text_offset": 176,
        "word_length": 4,
        "text": " why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101399998,
        "text_offset": 180,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105399994,
        "text_offset": 186,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106799998,
        "text_offset": 190,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "text_offset": 195,
        "word_length": 4,
        "text": " new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111099996,
        "text_offset": 199,
        "word_length": 6,
        "text": " terms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114899997,
        "text_offset": 205,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117299995,
        "text_offset": 210,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118199996,
        "text_offset": 215,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 216,
        "word_length": 6,
        "text": " These",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 222,
        "word_length": 6,
        "text": " terms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 228,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 232,
        "word_length": 8,
        "text": " defined",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 240,
        "word_length": 10,
        "text": " precisely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 250,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 253,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 257,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 264,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The result, however, is this, a paradox called decomposition of the S2. If we wanted to write the decomposition in full, it would unfortunately not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "final_audio": "william-quiet-mexico-mirror.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "uranus-shade-alanine-moon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4600000,
        "text_offset": 0,
        "word_length": 8,
        "text": " Alright",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 8,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8999999,
        "text_offset": 9,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 13,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 18,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14299999,
        "text_offset": 21,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 26,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16799999,
        "text_offset": 28,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 36,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 40,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 54,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 57,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499999,
        "text_offset": 61,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 68,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 69,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 75,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999997,
        "text_offset": 78,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399996,
        "text_offset": 83,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48699998,
        "text_offset": 87,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "text_offset": 93,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 98,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 104,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52999999,
        "text_offset": 108,
        "word_length": 3,
        "text": " us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54099998,
        "text_offset": 111,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 114,
        "word_length": 7,
        "text": " finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 121,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 125,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 131,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61699998,
        "text_offset": 134,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63399999,
        "text_offset": 138,
        "word_length": 4,
        "text": " Ben",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 142,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68299999,
        "text_offset": 145,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69700000,
        "text_offset": 147,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70399999,
        "text_offset": 150,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71499998,
        "text_offset": 152,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72399997,
        "text_offset": 160,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 161,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 164,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 175,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 183,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 187,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 201,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 204,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 208,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 215,
        "word_length": 5,
        "text": " onto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 220,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 224,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 227,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 231,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 236,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 241,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Alright, now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Benachhtarsky paradox, to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "final_audio": "uranus-shade-alanine-moon.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "delta-edward-artist-minnesota.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3699999,
        "text_offset": 4,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5799999,
        "text_offset": 10,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 15,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9699999,
        "text_offset": 20,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 23,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 32,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 38,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 46,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 49,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 53,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 60,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 64,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34399999,
        "text_offset": 78,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36699999,
        "text_offset": 81,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 85,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 90,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48199999,
        "text_offset": 95,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 99,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53799998,
        "text_offset": 106,
        "word_length": 8,
        "text": " removed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55599999,
        "text_offset": 114,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 117,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800000,
        "text_offset": 124,
        "word_length": 12,
        "text": " identifying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67999999,
        "text_offset": 136,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71199998,
        "text_offset": 141,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199997,
        "text_offset": 147,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 149,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399997,
        "text_offset": 156,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84799995,
        "text_offset": 163,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86899995,
        "text_offset": 168,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 172,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199998,
        "text_offset": 179,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 187,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 189,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 197,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 204,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point P of the sphere with the points between P and the origin.",
    "final_audio": "delta-edward-artist-minnesota.mp3"
  },
  {
    "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere.",
    "input_data": {
      "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "winner-one-seven-burger.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 5,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 11,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 19,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21199999,
        "text_offset": 34,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 41,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 44,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 46,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30499999,
        "text_offset": 53,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32099999,
        "text_offset": 54,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33700000,
        "text_offset": 59,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 68,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 78,
        "word_length": 6,
        "text": " exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 84,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 89,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 93,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 96,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51999998,
        "text_offset": 101,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55899996,
        "text_offset": 106,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58399999,
        "text_offset": 109,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61199998,
        "text_offset": 112,
        "word_length": 5,
        "text": " does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63099999,
        "text_offset": 117,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66199998,
        "text_offset": 120,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68699998,
        "text_offset": 124,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69999997,
        "text_offset": 130,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 133,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73099997,
        "text_offset": 137,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75899999,
        "text_offset": 144,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This works because when we rotate points on a sphere, this rotation works the exact same way on that line as it does on the point of the sphere.",
    "final_audio": "winner-one-seven-burger.mp3"
  },
  {
    "input_text": "Let's see this in 3D",
    "input_data": {
      "input_text": "Let's see this in 3D",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "eleven-ack-quiet-vermont.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4900000,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10600000,
        "text_offset": 10,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11700000,
        "text_offset": 15,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 18,
        "word_length": 2,
        "text": " 3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 20,
        "word_length": 1,
        "text": "D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 21,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see this in 3D.",
    "final_audio": "eleven-ack-quiet-vermont.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "massachusetts-equal-princess-texas.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 3,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 11,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 15,
        "word_length": 9,
        "text": " argument",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 24,
        "word_length": 4,
        "text": " dep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 28,
        "word_length": 5,
        "text": "ended",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20899999,
        "text_offset": 33,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 38,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 41,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 50,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 60,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 63,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39599999,
        "text_offset": 70,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 71,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 74,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 78,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 85,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 89,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 97,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 104,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 118,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 121,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 129,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So because our argument depended only on applying rotations to points, we can expand the paradox called decomposition as follows.",
    "final_audio": "massachusetts-equal-princess-texas.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "uranus-shade-alanine-moon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4600000,
        "text_offset": 0,
        "word_length": 8,
        "text": " Alright",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 8,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8999999,
        "text_offset": 9,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 13,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 18,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14299999,
        "text_offset": 21,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 26,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16799999,
        "text_offset": 28,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 36,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 40,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 54,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 57,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499999,
        "text_offset": 61,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 68,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 69,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 75,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999997,
        "text_offset": 78,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399996,
        "text_offset": 83,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48699998,
        "text_offset": 87,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "text_offset": 93,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 98,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 104,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52999999,
        "text_offset": 108,
        "word_length": 3,
        "text": " us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54099998,
        "text_offset": 111,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 114,
        "word_length": 7,
        "text": " finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 121,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 125,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 131,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61699998,
        "text_offset": 134,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63399999,
        "text_offset": 138,
        "word_length": 4,
        "text": " Ben",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 142,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68299999,
        "text_offset": 145,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69700000,
        "text_offset": 147,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70399999,
        "text_offset": 150,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71499998,
        "text_offset": 152,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72399997,
        "text_offset": 160,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 161,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 164,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 175,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 183,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 187,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 201,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 204,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 208,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 215,
        "word_length": 5,
        "text": " onto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 220,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 224,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 227,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 231,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 236,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 241,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Alright, now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Benachhtarsky paradox, to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "final_audio": "uranus-shade-alanine-moon.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "delta-edward-artist-minnesota.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3699999,
        "text_offset": 4,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5799999,
        "text_offset": 10,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 15,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9699999,
        "text_offset": 20,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 23,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 32,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 38,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 46,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 49,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 53,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 60,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 64,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34399999,
        "text_offset": 78,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36699999,
        "text_offset": 81,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 85,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 90,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48199999,
        "text_offset": 95,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 99,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53799998,
        "text_offset": 106,
        "word_length": 8,
        "text": " removed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55599999,
        "text_offset": 114,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 117,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800000,
        "text_offset": 124,
        "word_length": 12,
        "text": " identifying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67999999,
        "text_offset": 136,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71199998,
        "text_offset": 141,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199997,
        "text_offset": 147,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 149,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399997,
        "text_offset": 156,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84799995,
        "text_offset": 163,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86899995,
        "text_offset": 168,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 172,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199998,
        "text_offset": 179,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 187,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 189,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 197,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 204,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point P of the sphere with the points between P and the origin.",
    "final_audio": "delta-edward-artist-minnesota.mp3"
  },
  {
    "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere.",
    "input_data": {
      "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "winner-one-seven-burger.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 5,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 11,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 19,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21199999,
        "text_offset": 34,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 41,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 44,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 46,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30499999,
        "text_offset": 53,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32099999,
        "text_offset": 54,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33700000,
        "text_offset": 59,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 68,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 78,
        "word_length": 6,
        "text": " exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 84,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 89,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 93,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 96,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51999998,
        "text_offset": 101,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55899996,
        "text_offset": 106,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58399999,
        "text_offset": 109,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61199998,
        "text_offset": 112,
        "word_length": 5,
        "text": " does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63099999,
        "text_offset": 117,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66199998,
        "text_offset": 120,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68699998,
        "text_offset": 124,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69999997,
        "text_offset": 130,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 133,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73099997,
        "text_offset": 137,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75899999,
        "text_offset": 144,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This works because when we rotate points on a sphere, this rotation works the exact same way on that line as it does on the point of the sphere.",
    "final_audio": "winner-one-seven-burger.mp3"
  },
  {
    "input_text": "Let's see this in 3D",
    "input_data": {
      "input_text": "Let's see this in 3D",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "eleven-ack-quiet-vermont.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4900000,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10600000,
        "text_offset": 10,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11700000,
        "text_offset": 15,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 18,
        "word_length": 2,
        "text": " 3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 20,
        "word_length": 1,
        "text": "D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 21,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see this in 3D.",
    "final_audio": "eleven-ack-quiet-vermont.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "massachusetts-equal-princess-texas.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 3,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 11,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 15,
        "word_length": 9,
        "text": " argument",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 24,
        "word_length": 4,
        "text": " dep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 28,
        "word_length": 5,
        "text": "ended",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20899999,
        "text_offset": 33,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 38,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 41,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 50,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 60,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 63,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39599999,
        "text_offset": 70,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 71,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 74,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 78,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 85,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 89,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 97,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 104,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 118,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 121,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 129,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So because our argument depended only on applying rotations to points, we can expand the paradox called decomposition as follows.",
    "final_audio": "massachusetts-equal-princess-texas.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fanta-timing-william-four.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5600000,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 4,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 9,
        "word_length": 3,
        "text": " TI",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 12,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 16,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22099999,
        "text_offset": 22,
        "word_length": 2,
        "text": " i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25699999,
        "text_offset": 25,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 31,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28700000,
        "text_offset": 35,
        "word_length": 8,
        "text": " defined",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 43,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31899999,
        "text_offset": 46,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 50,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 57,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 58,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40099998,
        "text_offset": 62,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40999999,
        "text_offset": 65,
        "word_length": 8,
        "text": " altered",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "text_offset": 73,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 76,
        "word_length": 12,
        "text": " identifying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50999999,
        "text_offset": 88,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52599997,
        "text_offset": 92,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 99,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 102,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 107,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63099999,
        "text_offset": 112,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65099999,
        "text_offset": 116,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66199998,
        "text_offset": 122,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67199997,
        "text_offset": 125,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199996,
        "text_offset": 129,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69099998,
        "text_offset": 135,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199999,
        "text_offset": 136,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79700000,
        "text_offset": 139,
        "word_length": 5,
        "text": " call",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 144,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83200001,
        "text_offset": 150,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84700002,
        "text_offset": 155,
        "word_length": 3,
        "text": " TI",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 158,
        "word_length": 6,
        "text": " prime",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91799998,
        "text_offset": 164,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95000000,
        "text_offset": 168,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97400002,
        "text_offset": 174,
        "word_length": 2,
        "text": " i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98699998,
        "text_offset": 176,
        "word_length": 6,
        "text": " prime",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99399995,
        "text_offset": 182,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The sets TI and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the point. We call these sets TI prime and Sigma i prime.",
    "final_audio": "fanta-timing-william-four.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nevada-vermont-angel-failed.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 10,
        "word_length": 6,
        "text": " gives",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 16,
        "word_length": 5,
        "text": " rise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 21,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 24,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 28,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 38,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 46,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 53,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 67,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 70,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39599999,
        "text_offset": 74,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "text_offset": 79,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 84,
        "word_length": 2,
        "text": " B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 86,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 87,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52400000,
        "text_offset": 95,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54399998,
        "text_offset": 99,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799999,
        "text_offset": 106,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This then gives rise to the following paradox called decomposition of the unit ball B3 without the origin.",
    "final_audio": "nevada-vermont-angel-failed.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lithium-wyoming-twenty-beryllium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 9,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 11,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 22,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 29,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 34,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Here are a few points on the unit sphere.",
    "final_audio": "lithium-wyoming-twenty-beryllium.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lactose-wisconsin-north-triple.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3900000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 6,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 17,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 34,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23799999,
        "text_offset": 42,
        "word_length": 5,
        "text": " next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26100000,
        "text_offset": 47,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " clearly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 65,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's remove the sphere so we can see the next part more clearly.",
    "final_audio": "lactose-wisconsin-north-triple.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-yellow-hawaii-princess.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11499999,
        "text_offset": 5,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 9,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 19,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 25,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999999,
        "text_offset": 30,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 34,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24899998,
        "text_offset": 41,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 48,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, let's see the lines from the origin to the points.",
    "final_audio": "vermont-yellow-hawaii-princess.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "uranus-shade-alanine-moon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4600000,
        "text_offset": 0,
        "word_length": 8,
        "text": " Alright",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 8,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8999999,
        "text_offset": 9,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 13,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 18,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14299999,
        "text_offset": 21,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 26,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16799999,
        "text_offset": 28,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 36,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 40,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 54,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 57,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499999,
        "text_offset": 61,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 68,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 69,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 75,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999997,
        "text_offset": 78,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399996,
        "text_offset": 83,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48699998,
        "text_offset": 87,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "text_offset": 93,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 98,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 104,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52999999,
        "text_offset": 108,
        "word_length": 3,
        "text": " us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54099998,
        "text_offset": 111,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 114,
        "word_length": 7,
        "text": " finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 121,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 125,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 131,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61699998,
        "text_offset": 134,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63399999,
        "text_offset": 138,
        "word_length": 4,
        "text": " Ben",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 142,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68299999,
        "text_offset": 145,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69700000,
        "text_offset": 147,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70399999,
        "text_offset": 150,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71499998,
        "text_offset": 152,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72399997,
        "text_offset": 160,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 161,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 164,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 175,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 183,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 187,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 201,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 204,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 208,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 215,
        "word_length": 5,
        "text": " onto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 220,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 224,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 227,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 231,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 236,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 241,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Alright, now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Benachhtarsky paradox, to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "final_audio": "uranus-shade-alanine-moon.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "delta-edward-artist-minnesota.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3699999,
        "text_offset": 4,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5799999,
        "text_offset": 10,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 15,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9699999,
        "text_offset": 20,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 23,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 32,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 38,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 46,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 49,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 53,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 60,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 64,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34399999,
        "text_offset": 78,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36699999,
        "text_offset": 81,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 85,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 90,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48199999,
        "text_offset": 95,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 99,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53799998,
        "text_offset": 106,
        "word_length": 8,
        "text": " removed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55599999,
        "text_offset": 114,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 117,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800000,
        "text_offset": 124,
        "word_length": 12,
        "text": " identifying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67999999,
        "text_offset": 136,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71199998,
        "text_offset": 141,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199997,
        "text_offset": 147,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 149,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399997,
        "text_offset": 156,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84799995,
        "text_offset": 163,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86899995,
        "text_offset": 168,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 172,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199998,
        "text_offset": 179,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 187,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 189,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 197,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 204,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point P of the sphere with the points between P and the origin.",
    "final_audio": "delta-edward-artist-minnesota.mp3"
  },
  {
    "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere.",
    "input_data": {
      "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "winner-one-seven-burger.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 5,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 11,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 19,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21199999,
        "text_offset": 34,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 41,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 44,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 46,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30499999,
        "text_offset": 53,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32099999,
        "text_offset": 54,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33700000,
        "text_offset": 59,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 68,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 78,
        "word_length": 6,
        "text": " exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 84,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 89,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 93,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 96,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51999998,
        "text_offset": 101,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55899996,
        "text_offset": 106,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58399999,
        "text_offset": 109,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61199998,
        "text_offset": 112,
        "word_length": 5,
        "text": " does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63099999,
        "text_offset": 117,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66199998,
        "text_offset": 120,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68699998,
        "text_offset": 124,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69999997,
        "text_offset": 130,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 133,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73099997,
        "text_offset": 137,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75899999,
        "text_offset": 144,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This works because when we rotate points on a sphere, this rotation works the exact same way on that line as it does on the point of the sphere.",
    "final_audio": "winner-one-seven-burger.mp3"
  },
  {
    "input_text": "Let's see this in 3D",
    "input_data": {
      "input_text": "Let's see this in 3D",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "eleven-ack-quiet-vermont.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4900000,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10600000,
        "text_offset": 10,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11700000,
        "text_offset": 15,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 18,
        "word_length": 2,
        "text": " 3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 20,
        "word_length": 1,
        "text": "D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 21,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see this in 3D.",
    "final_audio": "eleven-ack-quiet-vermont.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "massachusetts-equal-princess-texas.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 3,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 11,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 15,
        "word_length": 9,
        "text": " argument",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 24,
        "word_length": 4,
        "text": " dep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 28,
        "word_length": 5,
        "text": "ended",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20899999,
        "text_offset": 33,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 38,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 41,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 50,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 60,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 63,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39599999,
        "text_offset": 70,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 71,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 74,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 78,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 85,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 89,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 97,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 104,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 118,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 121,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 129,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So because our argument depended only on applying rotations to points, we can expand the paradox called decomposition as follows.",
    "final_audio": "massachusetts-equal-princess-texas.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fanta-timing-william-four.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5600000,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 4,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 9,
        "word_length": 3,
        "text": " TI",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 12,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 16,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22099999,
        "text_offset": 22,
        "word_length": 2,
        "text": " i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25699999,
        "text_offset": 25,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 31,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28700000,
        "text_offset": 35,
        "word_length": 8,
        "text": " defined",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 43,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31899999,
        "text_offset": 46,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 50,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 57,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 58,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40099998,
        "text_offset": 62,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40999999,
        "text_offset": 65,
        "word_length": 8,
        "text": " altered",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "text_offset": 73,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 76,
        "word_length": 12,
        "text": " identifying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50999999,
        "text_offset": 88,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52599997,
        "text_offset": 92,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 99,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 102,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 107,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63099999,
        "text_offset": 112,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65099999,
        "text_offset": 116,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66199998,
        "text_offset": 122,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67199997,
        "text_offset": 125,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199996,
        "text_offset": 129,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69099998,
        "text_offset": 135,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199999,
        "text_offset": 136,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79700000,
        "text_offset": 139,
        "word_length": 5,
        "text": " call",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 144,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83200001,
        "text_offset": 150,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84700002,
        "text_offset": 155,
        "word_length": 3,
        "text": " TI",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 158,
        "word_length": 6,
        "text": " prime",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91799998,
        "text_offset": 164,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95000000,
        "text_offset": 168,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97400002,
        "text_offset": 174,
        "word_length": 2,
        "text": " i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98699998,
        "text_offset": 176,
        "word_length": 6,
        "text": " prime",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99399995,
        "text_offset": 182,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The sets TI and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the point. We call these sets TI prime and Sigma i prime.",
    "final_audio": "fanta-timing-william-four.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nevada-vermont-angel-failed.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 10,
        "word_length": 6,
        "text": " gives",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 16,
        "word_length": 5,
        "text": " rise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 21,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 24,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 28,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 38,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 46,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 53,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 67,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 70,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39599999,
        "text_offset": 74,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "text_offset": 79,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 84,
        "word_length": 2,
        "text": " B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 86,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 87,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52400000,
        "text_offset": 95,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54399998,
        "text_offset": 99,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799999,
        "text_offset": 106,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This then gives rise to the following paradox called decomposition of the unit ball B3 without the origin.",
    "final_audio": "nevada-vermont-angel-failed.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lithium-wyoming-twenty-beryllium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 9,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 11,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 22,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 29,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 34,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Here are a few points on the unit sphere.",
    "final_audio": "lithium-wyoming-twenty-beryllium.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lactose-wisconsin-north-triple.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3900000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 6,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 17,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 34,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23799999,
        "text_offset": 42,
        "word_length": 5,
        "text": " next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26100000,
        "text_offset": 47,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " clearly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 65,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's remove the sphere so we can see the next part more clearly.",
    "final_audio": "lactose-wisconsin-north-triple.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-yellow-hawaii-princess.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11499999,
        "text_offset": 5,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 9,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 19,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 25,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999999,
        "text_offset": 30,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 34,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24899998,
        "text_offset": 41,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 48,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, let's see the lines from the origin to the points.",
    "final_audio": "vermont-yellow-hawaii-princess.mp3"
  },
  {
    "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
    "input_data": {
      "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lake-moon-fifteen-october.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " When",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 8,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 19,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 25,
        "word_length": 8,
        "text": " objects",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 33,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18299999,
        "text_offset": 34,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19499999,
        "text_offset": 38,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 49,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 54,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 63,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31899999,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 72,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38299999,
        "text_offset": 79,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 82,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 87,
        "word_length": 8,
        "text": " similar",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 95,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47599999,
        "text_offset": 98,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 107,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 111,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55699999,
        "text_offset": 117,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 120,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 126,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68099997,
        "text_offset": 132,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 135,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71599998,
        "text_offset": 138,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73799998,
        "text_offset": 142,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76099998,
        "text_offset": 149,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77399997,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80099997,
        "text_offset": 156,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82100000,
        "text_offset": 161,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89600000,
        "text_offset": 175,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 180,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 187,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95899996,
        "text_offset": 188,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99000000,
        "text_offset": 192,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101199998,
        "text_offset": 196,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 200,
        "word_length": 6,
        "text": " balls",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106999998,
        "text_offset": 206,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109499993,
        "text_offset": 211,
        "word_length": 7,
        "text": " radius",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112199997,
        "text_offset": 218,
        "word_length": 8,
        "text": " smaller",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114799995,
        "text_offset": 226,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116099996,
        "text_offset": 231,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117299995,
        "text_offset": 235,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 236,
        "word_length": 5,
        "text": " Well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 241,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 242,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 251,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 252,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 255,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 257,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 265,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 270,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 275,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same points, but for all balls with radius smaller than one. Well, actually, it's exactly like that.",
    "final_audio": "lake-moon-fifteen-october.mp3"
  },
  {
    "input_text": "Note that these lines don't include the origin, because otherwise it would be identified with all points on the sphere.",
    "input_data": {
      "input_text": "Note that these lines don't include the origin, because otherwise it would be identified with all points on the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mars-kansas-beer-foxtrot.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6200000,
        "text_offset": 0,
        "word_length": 5,
        "text": " Note",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 10,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 16,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "text_offset": 22,
        "word_length": 4,
        "text": " don",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 26,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999998,
        "text_offset": 28,
        "word_length": 8,
        "text": " include",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 36,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24699999,
        "text_offset": 40,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 47,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26199998,
        "text_offset": 48,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799999,
        "text_offset": 56,
        "word_length": 10,
        "text": " otherwise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31199998,
        "text_offset": 66,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 69,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34799998,
        "text_offset": 75,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 78,
        "word_length": 11,
        "text": " identified",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41699998,
        "text_offset": 89,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 94,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45999999,
        "text_offset": 98,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 105,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 108,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 113,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53499999,
        "text_offset": 120,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Note that these lines don't include the origin, because otherwise it would be identified with all points on this sphere.",
    "final_audio": "mars-kansas-beer-foxtrot.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "uranus-shade-alanine-moon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4600000,
        "text_offset": 0,
        "word_length": 8,
        "text": " Alright",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 8,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8999999,
        "text_offset": 9,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 13,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 18,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14299999,
        "text_offset": 21,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 26,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16799999,
        "text_offset": 28,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 36,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 40,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 54,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 57,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499999,
        "text_offset": 61,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 68,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 69,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 75,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999997,
        "text_offset": 78,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399996,
        "text_offset": 83,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48699998,
        "text_offset": 87,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "text_offset": 93,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 98,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 104,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52999999,
        "text_offset": 108,
        "word_length": 3,
        "text": " us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54099998,
        "text_offset": 111,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 114,
        "word_length": 7,
        "text": " finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 121,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 125,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 131,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61699998,
        "text_offset": 134,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63399999,
        "text_offset": 138,
        "word_length": 4,
        "text": " Ben",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 142,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68299999,
        "text_offset": 145,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69700000,
        "text_offset": 147,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70399999,
        "text_offset": 150,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71499998,
        "text_offset": 152,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72399997,
        "text_offset": 160,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 161,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 164,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 175,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 183,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 187,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 201,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 204,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 208,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 215,
        "word_length": 5,
        "text": " onto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 220,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 224,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 227,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 231,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 236,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 241,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Alright, now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Benachhtarsky paradox, to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "final_audio": "uranus-shade-alanine-moon.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "delta-edward-artist-minnesota.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3699999,
        "text_offset": 4,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5799999,
        "text_offset": 10,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 15,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9699999,
        "text_offset": 20,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 23,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 32,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 38,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 46,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 49,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 53,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 60,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 64,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34399999,
        "text_offset": 78,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36699999,
        "text_offset": 81,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 85,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 90,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48199999,
        "text_offset": 95,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 99,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53799998,
        "text_offset": 106,
        "word_length": 8,
        "text": " removed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55599999,
        "text_offset": 114,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 117,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800000,
        "text_offset": 124,
        "word_length": 12,
        "text": " identifying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67999999,
        "text_offset": 136,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71199998,
        "text_offset": 141,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199997,
        "text_offset": 147,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 149,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399997,
        "text_offset": 156,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84799995,
        "text_offset": 163,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86899995,
        "text_offset": 168,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 172,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199998,
        "text_offset": 179,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 187,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 189,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 197,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 204,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point P of the sphere with the points between P and the origin.",
    "final_audio": "delta-edward-artist-minnesota.mp3"
  },
  {
    "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere.",
    "input_data": {
      "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "winner-one-seven-burger.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 5,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 11,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 19,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21199999,
        "text_offset": 34,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 41,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 44,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 46,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30499999,
        "text_offset": 53,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32099999,
        "text_offset": 54,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33700000,
        "text_offset": 59,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 68,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 78,
        "word_length": 6,
        "text": " exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 84,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 89,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 93,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 96,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51999998,
        "text_offset": 101,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55899996,
        "text_offset": 106,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58399999,
        "text_offset": 109,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61199998,
        "text_offset": 112,
        "word_length": 5,
        "text": " does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63099999,
        "text_offset": 117,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66199998,
        "text_offset": 120,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68699998,
        "text_offset": 124,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69999997,
        "text_offset": 130,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 133,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73099997,
        "text_offset": 137,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75899999,
        "text_offset": 144,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This works because when we rotate points on a sphere, this rotation works the exact same way on that line as it does on the point of the sphere.",
    "final_audio": "winner-one-seven-burger.mp3"
  },
  {
    "input_text": "Let's see this in 3D",
    "input_data": {
      "input_text": "Let's see this in 3D",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "eleven-ack-quiet-vermont.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4900000,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10600000,
        "text_offset": 10,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11700000,
        "text_offset": 15,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 18,
        "word_length": 2,
        "text": " 3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 20,
        "word_length": 1,
        "text": "D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 21,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see this in 3D.",
    "final_audio": "eleven-ack-quiet-vermont.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "massachusetts-equal-princess-texas.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 3,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 11,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 15,
        "word_length": 9,
        "text": " argument",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 24,
        "word_length": 4,
        "text": " dep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 28,
        "word_length": 5,
        "text": "ended",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20899999,
        "text_offset": 33,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 38,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 41,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 50,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 60,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 63,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39599999,
        "text_offset": 70,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 71,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 74,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 78,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 85,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 89,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 97,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 104,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 118,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 121,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 129,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So because our argument depended only on applying rotations to points, we can expand the paradox called decomposition as follows.",
    "final_audio": "massachusetts-equal-princess-texas.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fanta-timing-william-four.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5600000,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 4,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 9,
        "word_length": 3,
        "text": " TI",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 12,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 16,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22099999,
        "text_offset": 22,
        "word_length": 2,
        "text": " i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25699999,
        "text_offset": 25,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 31,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28700000,
        "text_offset": 35,
        "word_length": 8,
        "text": " defined",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 43,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31899999,
        "text_offset": 46,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 50,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 57,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 58,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40099998,
        "text_offset": 62,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40999999,
        "text_offset": 65,
        "word_length": 8,
        "text": " altered",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "text_offset": 73,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 76,
        "word_length": 12,
        "text": " identifying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50999999,
        "text_offset": 88,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52599997,
        "text_offset": 92,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 99,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 102,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 107,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63099999,
        "text_offset": 112,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65099999,
        "text_offset": 116,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66199998,
        "text_offset": 122,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67199997,
        "text_offset": 125,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199996,
        "text_offset": 129,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69099998,
        "text_offset": 135,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199999,
        "text_offset": 136,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79700000,
        "text_offset": 139,
        "word_length": 5,
        "text": " call",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 144,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83200001,
        "text_offset": 150,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84700002,
        "text_offset": 155,
        "word_length": 3,
        "text": " TI",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 158,
        "word_length": 6,
        "text": " prime",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91799998,
        "text_offset": 164,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95000000,
        "text_offset": 168,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97400002,
        "text_offset": 174,
        "word_length": 2,
        "text": " i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98699998,
        "text_offset": 176,
        "word_length": 6,
        "text": " prime",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99399995,
        "text_offset": 182,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The sets TI and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the point. We call these sets TI prime and Sigma i prime.",
    "final_audio": "fanta-timing-william-four.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nevada-vermont-angel-failed.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 10,
        "word_length": 6,
        "text": " gives",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 16,
        "word_length": 5,
        "text": " rise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 21,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 24,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 28,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 38,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 46,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 53,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 67,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 70,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39599999,
        "text_offset": 74,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "text_offset": 79,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 84,
        "word_length": 2,
        "text": " B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 86,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 87,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52400000,
        "text_offset": 95,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54399998,
        "text_offset": 99,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799999,
        "text_offset": 106,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This then gives rise to the following paradox called decomposition of the unit ball B3 without the origin.",
    "final_audio": "nevada-vermont-angel-failed.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "uranus-shade-alanine-moon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4600000,
        "text_offset": 0,
        "word_length": 8,
        "text": " Alright",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 8,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8999999,
        "text_offset": 9,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 13,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 18,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14299999,
        "text_offset": 21,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 26,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16799999,
        "text_offset": 28,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 36,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 40,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 54,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 57,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499999,
        "text_offset": 61,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 68,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 69,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 75,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999997,
        "text_offset": 78,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399996,
        "text_offset": 83,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48699998,
        "text_offset": 87,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "text_offset": 93,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 98,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 104,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52999999,
        "text_offset": 108,
        "word_length": 3,
        "text": " us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54099998,
        "text_offset": 111,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 114,
        "word_length": 7,
        "text": " finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 121,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 125,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 131,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61699998,
        "text_offset": 134,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63399999,
        "text_offset": 138,
        "word_length": 4,
        "text": " Ben",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 142,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68299999,
        "text_offset": 145,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69700000,
        "text_offset": 147,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70399999,
        "text_offset": 150,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71499998,
        "text_offset": 152,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72399997,
        "text_offset": 160,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 161,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 164,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 175,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 183,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 187,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 201,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 204,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 208,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 215,
        "word_length": 5,
        "text": " onto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 220,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 224,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 227,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 231,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 236,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 241,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Alright, now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Benachhtarsky paradox, to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "final_audio": "uranus-shade-alanine-moon.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "delta-edward-artist-minnesota.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3699999,
        "text_offset": 4,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5799999,
        "text_offset": 10,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 15,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9699999,
        "text_offset": 20,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 23,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 32,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 38,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 46,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 49,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 53,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 60,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 64,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34399999,
        "text_offset": 78,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36699999,
        "text_offset": 81,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 85,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 90,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48199999,
        "text_offset": 95,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 99,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53799998,
        "text_offset": 106,
        "word_length": 8,
        "text": " removed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55599999,
        "text_offset": 114,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 117,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800000,
        "text_offset": 124,
        "word_length": 12,
        "text": " identifying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67999999,
        "text_offset": 136,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71199998,
        "text_offset": 141,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199997,
        "text_offset": 147,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 149,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399997,
        "text_offset": 156,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84799995,
        "text_offset": 163,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86899995,
        "text_offset": 168,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 172,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199998,
        "text_offset": 179,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 187,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 189,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 197,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 204,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point P of the sphere with the points between P and the origin.",
    "final_audio": "delta-edward-artist-minnesota.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lithium-wyoming-twenty-beryllium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 9,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 11,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 22,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 29,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 34,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Here are a few points on the unit sphere.",
    "final_audio": "lithium-wyoming-twenty-beryllium.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lactose-wisconsin-north-triple.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3900000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 6,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 17,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 34,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23799999,
        "text_offset": 42,
        "word_length": 5,
        "text": " next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26100000,
        "text_offset": 47,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " clearly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 65,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's remove the sphere so we can see the next part more clearly.",
    "final_audio": "lactose-wisconsin-north-triple.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-yellow-hawaii-princess.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11499999,
        "text_offset": 5,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 9,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 19,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 25,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999999,
        "text_offset": 30,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 34,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24899998,
        "text_offset": 41,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 48,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, let's see the lines from the origin to the points.",
    "final_audio": "vermont-yellow-hawaii-princess.mp3"
  },
  {
    "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
    "input_data": {
      "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lake-moon-fifteen-october.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " When",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 8,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 19,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 25,
        "word_length": 8,
        "text": " objects",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 33,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18299999,
        "text_offset": 34,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19499999,
        "text_offset": 38,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 49,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 54,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 63,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31899999,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 72,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38299999,
        "text_offset": 79,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 82,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 87,
        "word_length": 8,
        "text": " similar",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 95,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47599999,
        "text_offset": 98,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 107,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 111,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55699999,
        "text_offset": 117,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 120,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 126,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68099997,
        "text_offset": 132,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 135,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71599998,
        "text_offset": 138,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73799998,
        "text_offset": 142,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76099998,
        "text_offset": 149,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77399997,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80099997,
        "text_offset": 156,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82100000,
        "text_offset": 161,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89600000,
        "text_offset": 175,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 180,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 187,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95899996,
        "text_offset": 188,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99000000,
        "text_offset": 192,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101199998,
        "text_offset": 196,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 200,
        "word_length": 6,
        "text": " balls",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106999998,
        "text_offset": 206,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109499993,
        "text_offset": 211,
        "word_length": 7,
        "text": " radius",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112199997,
        "text_offset": 218,
        "word_length": 8,
        "text": " smaller",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114799995,
        "text_offset": 226,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116099996,
        "text_offset": 231,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117299995,
        "text_offset": 235,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 236,
        "word_length": 5,
        "text": " Well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 241,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 242,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 251,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 252,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 255,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 257,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 265,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 270,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 275,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same points, but for all balls with radius smaller than one. Well, actually, it's exactly like that.",
    "final_audio": "lake-moon-fifteen-october.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lithium-wyoming-twenty-beryllium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 9,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 11,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 22,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 29,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 34,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Here are a few points on the unit sphere.",
    "final_audio": "lithium-wyoming-twenty-beryllium.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lactose-wisconsin-north-triple.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3900000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 6,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 17,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 34,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23799999,
        "text_offset": 42,
        "word_length": 5,
        "text": " next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26100000,
        "text_offset": 47,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " clearly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 65,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's remove the sphere so we can see the next part more clearly.",
    "final_audio": "lactose-wisconsin-north-triple.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-yellow-hawaii-princess.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11499999,
        "text_offset": 5,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 9,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 19,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 25,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999999,
        "text_offset": 30,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 34,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24899998,
        "text_offset": 41,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 48,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, let's see the lines from the origin to the points.",
    "final_audio": "vermont-yellow-hawaii-princess.mp3"
  },
  {
    "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
    "input_data": {
      "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lake-moon-fifteen-october.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " When",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 8,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 19,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 25,
        "word_length": 8,
        "text": " objects",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 33,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18299999,
        "text_offset": 34,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19499999,
        "text_offset": 38,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 49,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 54,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 63,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31899999,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 72,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38299999,
        "text_offset": 79,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 82,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 87,
        "word_length": 8,
        "text": " similar",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 95,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47599999,
        "text_offset": 98,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 107,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 111,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55699999,
        "text_offset": 117,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 120,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 126,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68099997,
        "text_offset": 132,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 135,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71599998,
        "text_offset": 138,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73799998,
        "text_offset": 142,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76099998,
        "text_offset": 149,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77399997,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80099997,
        "text_offset": 156,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82100000,
        "text_offset": 161,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89600000,
        "text_offset": 175,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 180,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 187,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95899996,
        "text_offset": 188,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99000000,
        "text_offset": 192,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101199998,
        "text_offset": 196,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 200,
        "word_length": 6,
        "text": " balls",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106999998,
        "text_offset": 206,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109499993,
        "text_offset": 211,
        "word_length": 7,
        "text": " radius",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112199997,
        "text_offset": 218,
        "word_length": 8,
        "text": " smaller",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114799995,
        "text_offset": 226,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116099996,
        "text_offset": 231,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117299995,
        "text_offset": 235,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 236,
        "word_length": 5,
        "text": " Well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 241,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 242,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 251,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 252,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 255,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 257,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 265,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 270,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 275,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same points, but for all balls with radius smaller than one. Well, actually, it's exactly like that.",
    "final_audio": "lake-moon-fifteen-october.mp3"
  },
  {
    "input_text": "Note that these lines don't include the origin, because otherwise it would be identified with all points on the sphere.",
    "input_data": {
      "input_text": "Note that these lines don't include the origin, because otherwise it would be identified with all points on the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mars-kansas-beer-foxtrot.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6200000,
        "text_offset": 0,
        "word_length": 5,
        "text": " Note",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 10,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 16,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "text_offset": 22,
        "word_length": 4,
        "text": " don",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 26,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999998,
        "text_offset": 28,
        "word_length": 8,
        "text": " include",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 36,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24699999,
        "text_offset": 40,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 47,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26199998,
        "text_offset": 48,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799999,
        "text_offset": 56,
        "word_length": 10,
        "text": " otherwise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31199998,
        "text_offset": 66,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 69,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34799998,
        "text_offset": 75,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 78,
        "word_length": 11,
        "text": " identified",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41699998,
        "text_offset": 89,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 94,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45999999,
        "text_offset": 98,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 105,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 108,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 113,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53499999,
        "text_offset": 120,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Note that these lines don't include the origin, because otherwise it would be identified with all points on this sphere.",
    "final_audio": "mars-kansas-beer-foxtrot.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lithium-wyoming-twenty-beryllium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 9,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 11,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 22,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 29,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 34,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Here are a few points on the unit sphere.",
    "final_audio": "lithium-wyoming-twenty-beryllium.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lactose-wisconsin-north-triple.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3900000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 6,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 17,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 34,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23799999,
        "text_offset": 42,
        "word_length": 5,
        "text": " next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26100000,
        "text_offset": 47,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " clearly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 65,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's remove the sphere so we can see the next part more clearly.",
    "final_audio": "lactose-wisconsin-north-triple.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-yellow-hawaii-princess.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11499999,
        "text_offset": 5,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 9,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 19,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 25,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999999,
        "text_offset": 30,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 34,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24899998,
        "text_offset": 41,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 48,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, let's see the lines from the origin to the points.",
    "final_audio": "vermont-yellow-hawaii-princess.mp3"
  },
  {
    "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
    "input_data": {
      "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lake-moon-fifteen-october.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " When",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 8,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 19,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 25,
        "word_length": 8,
        "text": " objects",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 33,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18299999,
        "text_offset": 34,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19499999,
        "text_offset": 38,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 49,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 54,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 63,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31899999,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 72,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38299999,
        "text_offset": 79,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 82,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 87,
        "word_length": 8,
        "text": " similar",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 95,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47599999,
        "text_offset": 98,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 107,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 111,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55699999,
        "text_offset": 117,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 120,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 126,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68099997,
        "text_offset": 132,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 135,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71599998,
        "text_offset": 138,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73799998,
        "text_offset": 142,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76099998,
        "text_offset": 149,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77399997,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80099997,
        "text_offset": 156,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82100000,
        "text_offset": 161,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89600000,
        "text_offset": 175,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 180,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 187,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95899996,
        "text_offset": 188,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99000000,
        "text_offset": 192,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101199998,
        "text_offset": 196,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 200,
        "word_length": 6,
        "text": " balls",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106999998,
        "text_offset": 206,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109499993,
        "text_offset": 211,
        "word_length": 7,
        "text": " radius",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112199997,
        "text_offset": 218,
        "word_length": 8,
        "text": " smaller",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114799995,
        "text_offset": 226,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116099996,
        "text_offset": 231,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117299995,
        "text_offset": 235,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 236,
        "word_length": 5,
        "text": " Well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 241,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 242,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 251,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 252,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 255,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 257,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 265,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 270,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 275,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same points, but for all balls with radius smaller than one. Well, actually, it's exactly like that.",
    "final_audio": "lake-moon-fifteen-october.mp3"
  },
  {
    "input_text": "Note that these lines don't include the origin, because otherwise it would be identified with all points on the sphere.",
    "input_data": {
      "input_text": "Note that these lines don't include the origin, because otherwise it would be identified with all points on the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mars-kansas-beer-foxtrot.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6200000,
        "text_offset": 0,
        "word_length": 5,
        "text": " Note",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 10,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 16,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "text_offset": 22,
        "word_length": 4,
        "text": " don",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 26,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999998,
        "text_offset": 28,
        "word_length": 8,
        "text": " include",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 36,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24699999,
        "text_offset": 40,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 47,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26199998,
        "text_offset": 48,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799999,
        "text_offset": 56,
        "word_length": 10,
        "text": " otherwise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31199998,
        "text_offset": 66,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 69,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34799998,
        "text_offset": 75,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 78,
        "word_length": 11,
        "text": " identified",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41699998,
        "text_offset": 89,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 94,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45999999,
        "text_offset": 98,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 105,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 108,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 113,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53499999,
        "text_offset": 120,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Note that these lines don't include the origin, because otherwise it would be identified with all points on this sphere.",
    "final_audio": "mars-kansas-beer-foxtrot.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lithium-wyoming-twenty-beryllium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 9,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 11,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 22,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 29,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 34,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Here are a few points on the unit sphere.",
    "final_audio": "lithium-wyoming-twenty-beryllium.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lactose-wisconsin-north-triple.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3900000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 6,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 17,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 34,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23799999,
        "text_offset": 42,
        "word_length": 5,
        "text": " next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26100000,
        "text_offset": 47,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " clearly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 65,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's remove the sphere so we can see the next part more clearly.",
    "final_audio": "lactose-wisconsin-north-triple.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-yellow-hawaii-princess.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11499999,
        "text_offset": 5,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 9,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 19,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 25,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999999,
        "text_offset": 30,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 34,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24899998,
        "text_offset": 41,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 48,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, let's see the lines from the origin to the points.",
    "final_audio": "vermont-yellow-hawaii-princess.mp3"
  },
  {
    "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
    "input_data": {
      "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lake-moon-fifteen-october.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " When",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 8,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 19,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 25,
        "word_length": 8,
        "text": " objects",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 33,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18299999,
        "text_offset": 34,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19499999,
        "text_offset": 38,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 49,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 54,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 63,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31899999,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 72,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38299999,
        "text_offset": 79,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 82,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 87,
        "word_length": 8,
        "text": " similar",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 95,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47599999,
        "text_offset": 98,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 107,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 111,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55699999,
        "text_offset": 117,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 120,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 126,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68099997,
        "text_offset": 132,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 135,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71599998,
        "text_offset": 138,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73799998,
        "text_offset": 142,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76099998,
        "text_offset": 149,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77399997,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80099997,
        "text_offset": 156,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82100000,
        "text_offset": 161,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89600000,
        "text_offset": 175,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 180,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 187,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95899996,
        "text_offset": 188,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99000000,
        "text_offset": 192,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101199998,
        "text_offset": 196,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 200,
        "word_length": 6,
        "text": " balls",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106999998,
        "text_offset": 206,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109499993,
        "text_offset": 211,
        "word_length": 7,
        "text": " radius",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112199997,
        "text_offset": 218,
        "word_length": 8,
        "text": " smaller",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114799995,
        "text_offset": 226,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116099996,
        "text_offset": 231,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117299995,
        "text_offset": 235,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 236,
        "word_length": 5,
        "text": " Well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 241,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 242,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 251,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 252,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 255,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 257,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 265,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 270,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 275,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same points, but for all balls with radius smaller than one. Well, actually, it's exactly like that.",
    "final_audio": "lake-moon-fifteen-october.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lithium-wyoming-twenty-beryllium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 9,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 11,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 22,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 29,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 34,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Here are a few points on the unit sphere.",
    "final_audio": "lithium-wyoming-twenty-beryllium.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lactose-wisconsin-north-triple.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3900000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 6,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 17,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 34,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23799999,
        "text_offset": 42,
        "word_length": 5,
        "text": " next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26100000,
        "text_offset": 47,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " clearly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 65,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's remove the sphere so we can see the next part more clearly.",
    "final_audio": "lactose-wisconsin-north-triple.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-yellow-hawaii-princess.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11499999,
        "text_offset": 5,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 9,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 19,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 25,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999999,
        "text_offset": 30,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 34,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24899998,
        "text_offset": 41,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 48,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, let's see the lines from the origin to the points.",
    "final_audio": "vermont-yellow-hawaii-princess.mp3"
  },
  {
    "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
    "input_data": {
      "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lake-moon-fifteen-october.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " When",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 8,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 19,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 25,
        "word_length": 8,
        "text": " objects",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 33,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18299999,
        "text_offset": 34,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19499999,
        "text_offset": 38,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 49,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 54,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 63,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31899999,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 72,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38299999,
        "text_offset": 79,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 82,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 87,
        "word_length": 8,
        "text": " similar",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 95,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47599999,
        "text_offset": 98,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 107,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 111,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55699999,
        "text_offset": 117,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 120,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 126,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68099997,
        "text_offset": 132,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 135,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71599998,
        "text_offset": 138,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73799998,
        "text_offset": 142,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76099998,
        "text_offset": 149,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77399997,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80099997,
        "text_offset": 156,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82100000,
        "text_offset": 161,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89600000,
        "text_offset": 175,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 180,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 187,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95899996,
        "text_offset": 188,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99000000,
        "text_offset": 192,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101199998,
        "text_offset": 196,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 200,
        "word_length": 6,
        "text": " balls",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106999998,
        "text_offset": 206,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109499993,
        "text_offset": 211,
        "word_length": 7,
        "text": " radius",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112199997,
        "text_offset": 218,
        "word_length": 8,
        "text": " smaller",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114799995,
        "text_offset": 226,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116099996,
        "text_offset": 231,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117299995,
        "text_offset": 235,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 236,
        "word_length": 5,
        "text": " Well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 241,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 242,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 251,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 252,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 255,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 257,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 265,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 270,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 275,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same points, but for all balls with radius smaller than one. Well, actually, it's exactly like that.",
    "final_audio": "lake-moon-fifteen-october.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "georgia-carolina-utah-stairway.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4199999,
        "text_offset": 4,
        "word_length": 6,
        "text": " final",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 10,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9299999,
        "text_offset": 15,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 19,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "text_offset": 22,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13700000,
        "text_offset": 25,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 29,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 33,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21399999,
        "text_offset": 40,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 43,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 47,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 55,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31099998,
        "text_offset": 62,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199996,
        "text_offset": 77,
        "word_length": 8,
        "text": " Luckily",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44800000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 86,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48899998,
        "text_offset": 91,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50499999,
        "text_offset": 94,
        "word_length": 5,
        "text": " easy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52300000,
        "text_offset": 99,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54499998,
        "text_offset": 102,
        "word_length": 4,
        "text": " fix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799999,
        "text_offset": 106,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 112,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62199997,
        "text_offset": 116,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 121,
        "word_length": 6,
        "text": " trick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68599998,
        "text_offset": 127,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70299999,
        "text_offset": 132,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399998,
        "text_offset": 135,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73799998,
        "text_offset": 140,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75399999,
        "text_offset": 144,
        "word_length": 7,
        "text": " adding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77699997,
        "text_offset": 151,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 155,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80999999,
        "text_offset": 159,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84099998,
        "text_offset": 161,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85799994,
        "text_offset": 164,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86999998,
        "text_offset": 168,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92199997,
        "text_offset": 176,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94399995,
        "text_offset": 183,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100199999,
        "text_offset": 197,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101499996,
        "text_offset": 200,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103299999,
        "text_offset": 202,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105899996,
        "text_offset": 203,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108899993,
        "text_offset": 209,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113599996,
        "text_offset": 211,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 212,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 216,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 218,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 223,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 226,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 230,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 235,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 240,
        "word_length": 6,
        "text": " above",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 246,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 252,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The final step now is to add the origin to the paradox called decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradox called decomposition of S2 minus D. Let's look at the ball from above again.",
    "final_audio": "georgia-carolina-utah-stairway.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "river-monkey-india-batman.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4799999,
        "text_offset": 4,
        "word_length": 6,
        "text": " white",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 10,
        "word_length": 5,
        "text": " dots",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9599999,
        "text_offset": 15,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 18,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12299999,
        "text_offset": 22,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 29,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The white dots is the origin.",
    "final_audio": "river-monkey-india-batman.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "stream-georgia-michigan-pizza.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4399999,
        "text_offset": 5,
        "word_length": 5,
        "text": " time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8099999,
        "text_offset": 10,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9599999,
        "text_offset": 13,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 21,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 29,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 32,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899999,
        "text_offset": 34,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 43,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 50,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 52,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 57,
        "word_length": 8,
        "text": " through",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299999,
        "text_offset": 69,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 75,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 79,
        "word_length": 6,
        "text": " third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 85,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48799998,
        "text_offset": 90,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52499997,
        "text_offset": 95,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56900000,
        "text_offset": 96,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200001,
        "text_offset": 100,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65600001,
        "text_offset": 107,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67500002,
        "text_offset": 110,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68300001,
        "text_offset": 115,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 121,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72500000,
        "text_offset": 124,
        "word_length": 10,
        "text": " arbitrary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76000001,
        "text_offset": 134,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78400001,
        "text_offset": 135,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80100002,
        "text_offset": 139,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 144,
        "word_length": 10,
        "text": " important",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85299997,
        "text_offset": 154,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 160,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 163,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 168,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "text_offset": 173,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96100001,
        "text_offset": 176,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800001,
        "text_offset": 183,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101599998,
        "text_offset": 188,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 195,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105999994,
        "text_offset": 200,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110399994,
        "text_offset": 205,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115099992,
        "text_offset": 208,
        "word_length": 6,
        "text": " stays",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117899999,
        "text_offset": 214,
        "word_length": 7,
        "text": " inside",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120299997,
        "text_offset": 221,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121999998,
        "text_offset": 225,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123299999,
        "text_offset": 230,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This time we will be looking at a rotation around a line through the point one third zero zero. The choice of this point is arbitrary, the only important thing is that when we rotate zero around this line it stays inside the ball.",
    "final_audio": "stream-georgia-michigan-pizza.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hawaii-potato-freddie-yellow.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4699999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7299999,
        "text_offset": 4,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 11,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 14,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14499999,
        "text_offset": 19,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16299999,
        "text_offset": 22,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19100000,
        "text_offset": 26,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21599999,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now again, we look at the rotations.",
    "final_audio": "hawaii-potato-freddie-yellow.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "twenty-ohio-connecticut-item.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3699999,
        "text_offset": 0,
        "word_length": 6,
        "text": " Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 6,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8599999,
        "text_offset": 7,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10799999,
        "text_offset": 10,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " define",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 22,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 24,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 28,
        "word_length": 2,
        "text": " K",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 30,
        "word_length": 4,
        "text": " Sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 34,
        "word_length": 1,
        "text": "m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 35,
        "word_length": 3,
        "text": "ary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 38,
        "word_length": 1,
        "text": "L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25099999,
        "text_offset": 39,
        "word_length": 2,
        "text": "ar",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26499999,
        "text_offset": 41,
        "word_length": 2,
        "text": "ly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 44,
        "word_length": 2,
        "text": " K",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 46,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 49,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 53,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 59,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 62,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 67,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 72,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 76,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 80,
        "word_length": 9,
        "text": " repeated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 89,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 99,
        "word_length": 6,
        "text": " theta",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 105,
        "word_length": 2,
        "text": " n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 107,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 110,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 115,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Again, we will define a set K SummaryLarly. K is the union of zero with all the repeated rotations theta n of zero.",
    "final_audio": "twenty-ohio-connecticut-item.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. The symbolic representation of this is at the bottom of the screen.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. The symbolic representation of this is at the bottom of the screen.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vegan-red-moon-bravo.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2800000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 4,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3999999,
        "text_offset": 7,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6799999,
        "text_offset": 10,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 14,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10299999,
        "text_offset": 19,
        "word_length": 6,
        "text": " trick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12299999,
        "text_offset": 25,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 31,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18600000,
        "text_offset": 32,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19099999,
        "text_offset": 35,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20099999,
        "text_offset": 38,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 45,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 49,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 53,
        "word_length": 2,
        "text": " k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30699998,
        "text_offset": 55,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34599999,
        "text_offset": 61,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38599998,
        "text_offset": 63,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39799998,
        "text_offset": 64,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 68,
        "word_length": 6,
        "text": " theta",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45299999,
        "text_offset": 74,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399997,
        "text_offset": 82,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 83,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55099999,
        "text_offset": 86,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 90,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57999999,
        "text_offset": 94,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 97,
        "word_length": 2,
        "text": " k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62299997,
        "text_offset": 99,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64999997,
        "text_offset": 105,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199997,
        "text_offset": 106,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73399996,
        "text_offset": 110,
        "word_length": 9,
        "text": " symbolic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999996,
        "text_offset": 119,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79799997,
        "text_offset": 134,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80999999,
        "text_offset": 137,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 142,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 145,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 148,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 152,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 159,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 162,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 166,
        "word_length": 7,
        "text": " screen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 173,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now we do the same trick again. If we rotate the set k minus 0, but theta inverse, we get all of k again. The symbolic representation of this is at the bottom of the screen.",
    "final_audio": "vegan-red-moon-bravo.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole ball.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-two-nine-two.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7699999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11699999,
        "text_offset": 6,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 10,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 14,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 21,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 25,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 29,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25499999,
        "text_offset": 34,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 37,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 44,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31399999,
        "text_offset": 46,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35299998,
        "text_offset": 54,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 61,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45399999,
        "text_offset": 75,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 78,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 82,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52199997,
        "text_offset": 88,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53299999,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's now see how we can use this to create a paradox called decomposition of the whole ball.",
    "final_audio": "vermont-two-nine-two.mp3"
  },
  {
    "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
    "input_data": {
      "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "white-batman-network-august.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "text_offset": 4,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 8,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 12,
        "word_length": 6,
        "text": " exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999999,
        "text_offset": 18,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26899999,
        "text_offset": 23,
        "word_length": 8,
        "text": " reasons",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 31,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29599999,
        "text_offset": 34,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32899999,
        "text_offset": 41,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999999,
        "text_offset": 42,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34800000,
        "text_offset": 45,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35000000,
        "text_offset": 49,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 59,
        "word_length": 2,
        "text": " B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 61,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 62,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799999,
        "text_offset": 65,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 73,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now for the exact same reasons as before, we can partition B3 as follows.",
    "final_audio": "white-batman-network-august.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lithium-wyoming-twenty-beryllium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 9,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 11,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 22,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 29,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 34,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Here are a few points on the unit sphere.",
    "final_audio": "lithium-wyoming-twenty-beryllium.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "georgia-carolina-utah-stairway.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4199999,
        "text_offset": 4,
        "word_length": 6,
        "text": " final",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 10,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9299999,
        "text_offset": 15,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 19,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "text_offset": 22,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13700000,
        "text_offset": 25,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 29,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 33,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21399999,
        "text_offset": 40,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 43,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 47,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 55,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31099998,
        "text_offset": 62,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199996,
        "text_offset": 77,
        "word_length": 8,
        "text": " Luckily",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44800000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 86,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48899998,
        "text_offset": 91,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50499999,
        "text_offset": 94,
        "word_length": 5,
        "text": " easy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52300000,
        "text_offset": 99,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54499998,
        "text_offset": 102,
        "word_length": 4,
        "text": " fix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799999,
        "text_offset": 106,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 112,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62199997,
        "text_offset": 116,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 121,
        "word_length": 6,
        "text": " trick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68599998,
        "text_offset": 127,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70299999,
        "text_offset": 132,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399998,
        "text_offset": 135,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73799998,
        "text_offset": 140,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75399999,
        "text_offset": 144,
        "word_length": 7,
        "text": " adding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77699997,
        "text_offset": 151,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 155,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80999999,
        "text_offset": 159,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84099998,
        "text_offset": 161,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85799994,
        "text_offset": 164,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86999998,
        "text_offset": 168,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92199997,
        "text_offset": 176,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94399995,
        "text_offset": 183,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100199999,
        "text_offset": 197,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101499996,
        "text_offset": 200,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103299999,
        "text_offset": 202,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105899996,
        "text_offset": 203,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108899993,
        "text_offset": 209,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113599996,
        "text_offset": 211,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 212,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 216,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 218,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 223,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 226,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 230,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 235,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 240,
        "word_length": 6,
        "text": " above",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 246,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 252,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The final step now is to add the origin to the paradox called decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradox called decomposition of S2 minus D. Let's look at the ball from above again.",
    "final_audio": "georgia-carolina-utah-stairway.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "river-monkey-india-batman.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4799999,
        "text_offset": 4,
        "word_length": 6,
        "text": " white",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 10,
        "word_length": 5,
        "text": " dots",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9599999,
        "text_offset": 15,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 18,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12299999,
        "text_offset": 22,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 29,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The white dots is the origin.",
    "final_audio": "river-monkey-india-batman.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "stream-georgia-michigan-pizza.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4399999,
        "text_offset": 5,
        "word_length": 5,
        "text": " time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8099999,
        "text_offset": 10,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9599999,
        "text_offset": 13,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 21,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 29,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 32,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899999,
        "text_offset": 34,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 43,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 50,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 52,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 57,
        "word_length": 8,
        "text": " through",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299999,
        "text_offset": 69,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 75,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 79,
        "word_length": 6,
        "text": " third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 85,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48799998,
        "text_offset": 90,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52499997,
        "text_offset": 95,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56900000,
        "text_offset": 96,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200001,
        "text_offset": 100,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65600001,
        "text_offset": 107,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67500002,
        "text_offset": 110,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68300001,
        "text_offset": 115,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 121,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72500000,
        "text_offset": 124,
        "word_length": 10,
        "text": " arbitrary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76000001,
        "text_offset": 134,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78400001,
        "text_offset": 135,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80100002,
        "text_offset": 139,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 144,
        "word_length": 10,
        "text": " important",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85299997,
        "text_offset": 154,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 160,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 163,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 168,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "text_offset": 173,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96100001,
        "text_offset": 176,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800001,
        "text_offset": 183,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101599998,
        "text_offset": 188,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 195,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105999994,
        "text_offset": 200,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110399994,
        "text_offset": 205,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115099992,
        "text_offset": 208,
        "word_length": 6,
        "text": " stays",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117899999,
        "text_offset": 214,
        "word_length": 7,
        "text": " inside",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120299997,
        "text_offset": 221,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121999998,
        "text_offset": 225,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123299999,
        "text_offset": 230,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This time we will be looking at a rotation around a line through the point one third zero zero. The choice of this point is arbitrary, the only important thing is that when we rotate zero around this line it stays inside the ball.",
    "final_audio": "stream-georgia-michigan-pizza.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hawaii-potato-freddie-yellow.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4699999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7299999,
        "text_offset": 4,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 11,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 14,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14499999,
        "text_offset": 19,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16299999,
        "text_offset": 22,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19100000,
        "text_offset": 26,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21599999,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now again, we look at the rotations.",
    "final_audio": "hawaii-potato-freddie-yellow.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lactose-wisconsin-north-triple.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3900000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 6,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 17,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 34,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23799999,
        "text_offset": 42,
        "word_length": 5,
        "text": " next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26100000,
        "text_offset": 47,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " clearly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 65,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's remove the sphere so we can see the next part more clearly.",
    "final_audio": "lactose-wisconsin-north-triple.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "twenty-ohio-connecticut-item.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3699999,
        "text_offset": 0,
        "word_length": 6,
        "text": " Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 6,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8599999,
        "text_offset": 7,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10799999,
        "text_offset": 10,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " define",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 22,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 24,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 28,
        "word_length": 2,
        "text": " K",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 30,
        "word_length": 4,
        "text": " Sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 34,
        "word_length": 1,
        "text": "m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 35,
        "word_length": 3,
        "text": "ary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 38,
        "word_length": 1,
        "text": "L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25099999,
        "text_offset": 39,
        "word_length": 2,
        "text": "ar",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26499999,
        "text_offset": 41,
        "word_length": 2,
        "text": "ly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 44,
        "word_length": 2,
        "text": " K",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 46,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 49,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 53,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 59,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 62,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 67,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 72,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 76,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 80,
        "word_length": 9,
        "text": " repeated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 89,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 99,
        "word_length": 6,
        "text": " theta",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 105,
        "word_length": 2,
        "text": " n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 107,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 110,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 115,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Again, we will define a set K SummaryLarly. K is the union of zero with all the repeated rotations theta n of zero.",
    "final_audio": "twenty-ohio-connecticut-item.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. The symbolic representation of this is at the bottom of the screen.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. The symbolic representation of this is at the bottom of the screen.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vegan-red-moon-bravo.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2800000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 4,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3999999,
        "text_offset": 7,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6799999,
        "text_offset": 10,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 14,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10299999,
        "text_offset": 19,
        "word_length": 6,
        "text": " trick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12299999,
        "text_offset": 25,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 31,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18600000,
        "text_offset": 32,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19099999,
        "text_offset": 35,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20099999,
        "text_offset": 38,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 45,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 49,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 53,
        "word_length": 2,
        "text": " k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30699998,
        "text_offset": 55,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34599999,
        "text_offset": 61,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38599998,
        "text_offset": 63,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39799998,
        "text_offset": 64,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 68,
        "word_length": 6,
        "text": " theta",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45299999,
        "text_offset": 74,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399997,
        "text_offset": 82,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 83,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55099999,
        "text_offset": 86,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 90,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57999999,
        "text_offset": 94,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 97,
        "word_length": 2,
        "text": " k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62299997,
        "text_offset": 99,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64999997,
        "text_offset": 105,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199997,
        "text_offset": 106,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73399996,
        "text_offset": 110,
        "word_length": 9,
        "text": " symbolic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999996,
        "text_offset": 119,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79799997,
        "text_offset": 134,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80999999,
        "text_offset": 137,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 142,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 145,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 148,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 152,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 159,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 162,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 166,
        "word_length": 7,
        "text": " screen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 173,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now we do the same trick again. If we rotate the set k minus 0, but theta inverse, we get all of k again. The symbolic representation of this is at the bottom of the screen.",
    "final_audio": "vegan-red-moon-bravo.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole ball.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-two-nine-two.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7699999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11699999,
        "text_offset": 6,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 10,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 14,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 21,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 25,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 29,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25499999,
        "text_offset": 34,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 37,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 44,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31399999,
        "text_offset": 46,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35299998,
        "text_offset": 54,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 61,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45399999,
        "text_offset": 75,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 78,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 82,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52199997,
        "text_offset": 88,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53299999,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's now see how we can use this to create a paradox called decomposition of the whole ball.",
    "final_audio": "vermont-two-nine-two.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-yellow-hawaii-princess.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11499999,
        "text_offset": 5,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 9,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 19,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 25,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999999,
        "text_offset": 30,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 34,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24899998,
        "text_offset": 41,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 48,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, let's see the lines from the origin to the points.",
    "final_audio": "vermont-yellow-hawaii-princess.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "georgia-carolina-utah-stairway.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4199999,
        "text_offset": 4,
        "word_length": 6,
        "text": " final",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 10,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9299999,
        "text_offset": 15,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 19,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "text_offset": 22,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13700000,
        "text_offset": 25,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 29,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 33,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21399999,
        "text_offset": 40,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 43,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 47,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 55,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31099998,
        "text_offset": 62,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199996,
        "text_offset": 77,
        "word_length": 8,
        "text": " Luckily",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44800000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 86,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48899998,
        "text_offset": 91,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50499999,
        "text_offset": 94,
        "word_length": 5,
        "text": " easy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52300000,
        "text_offset": 99,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54499998,
        "text_offset": 102,
        "word_length": 4,
        "text": " fix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799999,
        "text_offset": 106,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 112,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62199997,
        "text_offset": 116,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 121,
        "word_length": 6,
        "text": " trick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68599998,
        "text_offset": 127,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70299999,
        "text_offset": 132,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399998,
        "text_offset": 135,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73799998,
        "text_offset": 140,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75399999,
        "text_offset": 144,
        "word_length": 7,
        "text": " adding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77699997,
        "text_offset": 151,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 155,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80999999,
        "text_offset": 159,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84099998,
        "text_offset": 161,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85799994,
        "text_offset": 164,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86999998,
        "text_offset": 168,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92199997,
        "text_offset": 176,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94399995,
        "text_offset": 183,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100199999,
        "text_offset": 197,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101499996,
        "text_offset": 200,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103299999,
        "text_offset": 202,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105899996,
        "text_offset": 203,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108899993,
        "text_offset": 209,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113599996,
        "text_offset": 211,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 212,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 216,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 218,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 223,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 226,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 230,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 235,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 240,
        "word_length": 6,
        "text": " above",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 246,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 252,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The final step now is to add the origin to the paradox called decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradox called decomposition of S2 minus D. Let's look at the ball from above again.",
    "final_audio": "georgia-carolina-utah-stairway.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "river-monkey-india-batman.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4799999,
        "text_offset": 4,
        "word_length": 6,
        "text": " white",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 10,
        "word_length": 5,
        "text": " dots",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9599999,
        "text_offset": 15,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 18,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12299999,
        "text_offset": 22,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 29,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The white dots is the origin.",
    "final_audio": "river-monkey-india-batman.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "stream-georgia-michigan-pizza.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4399999,
        "text_offset": 5,
        "word_length": 5,
        "text": " time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8099999,
        "text_offset": 10,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9599999,
        "text_offset": 13,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 21,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 29,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 32,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899999,
        "text_offset": 34,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 43,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 50,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 52,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 57,
        "word_length": 8,
        "text": " through",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299999,
        "text_offset": 69,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 75,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 79,
        "word_length": 6,
        "text": " third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 85,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48799998,
        "text_offset": 90,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52499997,
        "text_offset": 95,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56900000,
        "text_offset": 96,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200001,
        "text_offset": 100,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65600001,
        "text_offset": 107,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67500002,
        "text_offset": 110,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68300001,
        "text_offset": 115,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 121,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72500000,
        "text_offset": 124,
        "word_length": 10,
        "text": " arbitrary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76000001,
        "text_offset": 134,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78400001,
        "text_offset": 135,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80100002,
        "text_offset": 139,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 144,
        "word_length": 10,
        "text": " important",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85299997,
        "text_offset": 154,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 160,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 163,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 168,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "text_offset": 173,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96100001,
        "text_offset": 176,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800001,
        "text_offset": 183,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101599998,
        "text_offset": 188,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 195,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105999994,
        "text_offset": 200,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110399994,
        "text_offset": 205,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115099992,
        "text_offset": 208,
        "word_length": 6,
        "text": " stays",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117899999,
        "text_offset": 214,
        "word_length": 7,
        "text": " inside",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120299997,
        "text_offset": 221,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121999998,
        "text_offset": 225,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123299999,
        "text_offset": 230,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This time we will be looking at a rotation around a line through the point one third zero zero. The choice of this point is arbitrary, the only important thing is that when we rotate zero around this line it stays inside the ball.",
    "final_audio": "stream-georgia-michigan-pizza.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hawaii-potato-freddie-yellow.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4699999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7299999,
        "text_offset": 4,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 11,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 14,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14499999,
        "text_offset": 19,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16299999,
        "text_offset": 22,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19100000,
        "text_offset": 26,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21599999,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now again, we look at the rotations.",
    "final_audio": "hawaii-potato-freddie-yellow.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "twenty-ohio-connecticut-item.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3699999,
        "text_offset": 0,
        "word_length": 6,
        "text": " Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 6,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8599999,
        "text_offset": 7,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10799999,
        "text_offset": 10,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " define",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 22,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 24,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 28,
        "word_length": 2,
        "text": " K",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 30,
        "word_length": 4,
        "text": " Sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 34,
        "word_length": 1,
        "text": "m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 35,
        "word_length": 3,
        "text": "ary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 38,
        "word_length": 1,
        "text": "L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25099999,
        "text_offset": 39,
        "word_length": 2,
        "text": "ar",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26499999,
        "text_offset": 41,
        "word_length": 2,
        "text": "ly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 44,
        "word_length": 2,
        "text": " K",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 46,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 49,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 53,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 59,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 62,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 67,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 72,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 76,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 80,
        "word_length": 9,
        "text": " repeated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 89,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 99,
        "word_length": 6,
        "text": " theta",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 105,
        "word_length": 2,
        "text": " n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 107,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 110,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 115,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Again, we will define a set K SummaryLarly. K is the union of zero with all the repeated rotations theta n of zero.",
    "final_audio": "twenty-ohio-connecticut-item.mp3"
  },
  {
    "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
    "input_data": {
      "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lake-moon-fifteen-october.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " When",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 8,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 19,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 25,
        "word_length": 8,
        "text": " objects",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 33,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18299999,
        "text_offset": 34,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19499999,
        "text_offset": 38,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 49,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 54,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 63,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31899999,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 72,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38299999,
        "text_offset": 79,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 82,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 87,
        "word_length": 8,
        "text": " similar",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 95,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47599999,
        "text_offset": 98,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 107,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 111,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55699999,
        "text_offset": 117,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 120,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 126,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68099997,
        "text_offset": 132,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 135,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71599998,
        "text_offset": 138,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73799998,
        "text_offset": 142,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76099998,
        "text_offset": 149,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77399997,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80099997,
        "text_offset": 156,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82100000,
        "text_offset": 161,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89600000,
        "text_offset": 175,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 180,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 187,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95899996,
        "text_offset": 188,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99000000,
        "text_offset": 192,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101199998,
        "text_offset": 196,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 200,
        "word_length": 6,
        "text": " balls",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106999998,
        "text_offset": 206,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109499993,
        "text_offset": 211,
        "word_length": 7,
        "text": " radius",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112199997,
        "text_offset": 218,
        "word_length": 8,
        "text": " smaller",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114799995,
        "text_offset": 226,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116099996,
        "text_offset": 231,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117299995,
        "text_offset": 235,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 236,
        "word_length": 5,
        "text": " Well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 241,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 242,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 251,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 252,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 255,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 257,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 265,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 270,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 275,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same points, but for all balls with radius smaller than one. Well, actually, it's exactly like that.",
    "final_audio": "lake-moon-fifteen-october.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. The symbolic representation of this is at the bottom of the screen.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. The symbolic representation of this is at the bottom of the screen.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vegan-red-moon-bravo.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2800000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 4,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3999999,
        "text_offset": 7,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6799999,
        "text_offset": 10,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 14,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10299999,
        "text_offset": 19,
        "word_length": 6,
        "text": " trick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12299999,
        "text_offset": 25,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 31,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18600000,
        "text_offset": 32,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19099999,
        "text_offset": 35,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20099999,
        "text_offset": 38,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 45,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 49,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 53,
        "word_length": 2,
        "text": " k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30699998,
        "text_offset": 55,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34599999,
        "text_offset": 61,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38599998,
        "text_offset": 63,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39799998,
        "text_offset": 64,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 68,
        "word_length": 6,
        "text": " theta",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45299999,
        "text_offset": 74,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399997,
        "text_offset": 82,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 83,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55099999,
        "text_offset": 86,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 90,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57999999,
        "text_offset": 94,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 97,
        "word_length": 2,
        "text": " k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62299997,
        "text_offset": 99,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64999997,
        "text_offset": 105,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199997,
        "text_offset": 106,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73399996,
        "text_offset": 110,
        "word_length": 9,
        "text": " symbolic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999996,
        "text_offset": 119,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79799997,
        "text_offset": 134,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80999999,
        "text_offset": 137,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 142,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 145,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 148,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 152,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 159,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 162,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 166,
        "word_length": 7,
        "text": " screen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 173,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now we do the same trick again. If we rotate the set k minus 0, but theta inverse, we get all of k again. The symbolic representation of this is at the bottom of the screen.",
    "final_audio": "vegan-red-moon-bravo.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole ball.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-two-nine-two.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7699999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11699999,
        "text_offset": 6,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 10,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 14,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 21,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 25,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 29,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25499999,
        "text_offset": 34,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 37,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 44,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31399999,
        "text_offset": 46,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35299998,
        "text_offset": 54,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 61,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45399999,
        "text_offset": 75,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 78,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 82,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52199997,
        "text_offset": 88,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53299999,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's now see how we can use this to create a paradox called decomposition of the whole ball.",
    "final_audio": "vermont-two-nine-two.mp3"
  },
  {
    "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
    "input_data": {
      "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "white-batman-network-august.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "text_offset": 4,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 8,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 12,
        "word_length": 6,
        "text": " exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999999,
        "text_offset": 18,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26899999,
        "text_offset": 23,
        "word_length": 8,
        "text": " reasons",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 31,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29599999,
        "text_offset": 34,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32899999,
        "text_offset": 41,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999999,
        "text_offset": 42,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34800000,
        "text_offset": 45,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35000000,
        "text_offset": 49,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 59,
        "word_length": 2,
        "text": " B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 61,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 62,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799999,
        "text_offset": 65,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 73,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now for the exact same reasons as before, we can partition B3 as follows.",
    "final_audio": "white-batman-network-august.mp3"
  },
  {
    "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
    "input_data": {
      "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "ceiling-four-social-california.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3499999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Comb",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5999999,
        "text_offset": 5,
        "word_length": 5,
        "text": "ining",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7099999,
        "text_offset": 10,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7999999,
        "text_offset": 15,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8699999,
        "text_offset": 18,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 22,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 27,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12899999,
        "text_offset": 31,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 34,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20299999,
        "text_offset": 41,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22699998,
        "text_offset": 46,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 48,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28499999,
        "text_offset": 56,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30299998,
        "text_offset": 63,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36100000,
        "text_offset": 77,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37499998,
        "text_offset": 80,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38499999,
        "text_offset": 84,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 89,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44900000,
        "text_offset": 97,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46499998,
        "text_offset": 101,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Combining this in the same way as before with a paradox called decomposition of the ball without the origin",
    "final_audio": "ceiling-four-social-california.mp3"
  },
  {
    "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox! Finally we have arrived at the result that we were working towards for the entirety of this video.",
    "input_data": {
      "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox! Finally we have arrived at the result that we were working towards for the entirety of this video.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "massachusetts-hamper-oklahoma-bluebird.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5799999,
        "text_offset": 0,
        "word_length": 6,
        "text": " gives",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 6,
        "word_length": 3,
        "text": " us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 9,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 13,
        "word_length": 6,
        "text": " final",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799998,
        "text_offset": 19,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "text_offset": 27,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 34,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 48,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37799998,
        "text_offset": 51,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 55,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42200000,
        "text_offset": 60,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 61,
        "word_length": 11,
        "text": " completing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 72,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53399999,
        "text_offset": 76,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55599997,
        "text_offset": 80,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57899997,
        "text_offset": 83,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58899998,
        "text_offset": 85,
        "word_length": 3,
        "text": "ors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60699999,
        "text_offset": 88,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62899999,
        "text_offset": 90,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67199997,
        "text_offset": 98,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78800001,
        "text_offset": 99,
        "word_length": 8,
        "text": " Finally",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80999999,
        "text_offset": 107,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81599998,
        "text_offset": 108,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 111,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85199999,
        "text_offset": 116,
        "word_length": 8,
        "text": " arrived",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 124,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87200002,
        "text_offset": 127,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 131,
        "word_length": 8,
        "text": " results",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90099997,
        "text_offset": 139,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91799998,
        "text_offset": 144,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93200001,
        "text_offset": 147,
        "word_length": 5,
        "text": " were",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "text_offset": 152,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000003,
        "text_offset": 160,
        "word_length": 8,
        "text": " towards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000001,
        "text_offset": 168,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100599999,
        "text_offset": 172,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102500000,
        "text_offset": 176,
        "word_length": 9,
        "text": " entirety",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106799998,
        "text_offset": 185,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108000001,
        "text_offset": 188,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110800004,
        "text_offset": 193,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112699999,
        "text_offset": 199,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " gives us the final paradox called decomposition of the ball, completing the Banach Torsky paradox. Finally, we have arrived at the results that we were working towards for the entirety of this video.",
    "final_audio": "massachusetts-hamper-oklahoma-bluebird.mp3"
  },
  {
    "input_text": "Note that these lines don't include the origin, because otherwise it would be identified with all points on the sphere.",
    "input_data": {
      "input_text": "Note that these lines don't include the origin, because otherwise it would be identified with all points on the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mars-kansas-beer-foxtrot.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6200000,
        "text_offset": 0,
        "word_length": 5,
        "text": " Note",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 10,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 16,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "text_offset": 22,
        "word_length": 4,
        "text": " don",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 26,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999998,
        "text_offset": 28,
        "word_length": 8,
        "text": " include",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 36,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24699999,
        "text_offset": 40,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 47,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26199998,
        "text_offset": 48,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799999,
        "text_offset": 56,
        "word_length": 10,
        "text": " otherwise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31199998,
        "text_offset": 66,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 69,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34799998,
        "text_offset": 75,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 78,
        "word_length": 11,
        "text": " identified",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41699998,
        "text_offset": 89,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 94,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45999999,
        "text_offset": 98,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 105,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 108,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 113,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53499999,
        "text_offset": 120,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Note that these lines don't include the origin, because otherwise it would be identified with all points on this sphere.",
    "final_audio": "mars-kansas-beer-foxtrot.mp3"
  },
  {
    "input_text": "Again, a lot of new terms are used to make sure everything fits on screen, and we skipped over quite a few details to speed things up. For an exact treatment and definition of things, refer to the thesis.",
    "input_data": {
      "input_text": "Again, a lot of new terms are used to make sure everything fits on screen, and we skipped over quite a few details to speed things up. For an exact treatment and definition of things, refer to the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hawaii-jupiter-video-carbon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12099999,
        "text_offset": 0,
        "word_length": 6,
        "text": " Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 6,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 7,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 9,
        "word_length": 4,
        "text": " lot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16899999,
        "text_offset": 13,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 16,
        "word_length": 4,
        "text": " new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 20,
        "word_length": 6,
        "text": " terms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 26,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 30,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 35,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 38,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 43,
        "word_length": 5,
        "text": " sure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30999999,
        "text_offset": 48,
        "word_length": 11,
        "text": " everything",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 59,
        "word_length": 5,
        "text": " fits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38099998,
        "text_offset": 64,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 67,
        "word_length": 7,
        "text": " screen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44699997,
        "text_offset": 74,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "text_offset": 75,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400001,
        "text_offset": 79,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50099999,
        "text_offset": 82,
        "word_length": 8,
        "text": " skipped",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53899998,
        "text_offset": 90,
        "word_length": 5,
        "text": " over",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 95,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56499998,
        "text_offset": 101,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57599997,
        "text_offset": 103,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 107,
        "word_length": 8,
        "text": " details",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60599999,
        "text_offset": 115,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61799998,
        "text_offset": 118,
        "word_length": 6,
        "text": " speed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65299997,
        "text_offset": 124,
        "word_length": 7,
        "text": " things",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68599998,
        "text_offset": 131,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74599997,
        "text_offset": 134,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 135,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 138,
        "word_length": 3,
        "text": "'re",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 141,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 144,
        "word_length": 6,
        "text": " exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 150,
        "word_length": 10,
        "text": " treatment",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 160,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 164,
        "word_length": 11,
        "text": " definition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 175,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 178,
        "word_length": 7,
        "text": " things",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 185,
        "word_length": 9,
        "text": " referred",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 194,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 197,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 201,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 208,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Again, a lot of new terms are used to make sure everything fits on screen, and we skipped over quite a few details to speed things up. We're in exact treatment and definition of things referred to the thesis.",
    "final_audio": "hawaii-jupiter-video-carbon.mp3"
  },
  {
    "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University.",
    "input_data": {
      "input_text": "Welcome to this video about the Banach-Tarski paradox. My name is Teun van Wezel, and this video was made as part of my bachelor's thesis in mathematics at Utrecht University.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "oranges-princess-oscar-island.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3899999,
        "text_offset": 0,
        "word_length": 8,
        "text": " Welcome",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5799999,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7399999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 16,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 22,
        "word_length": 6,
        "text": " about",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 32,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19099999,
        "text_offset": 36,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "text_offset": 39,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 41,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24600000,
        "text_offset": 44,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26899999,
        "text_offset": 46,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 54,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33299999,
        "text_offset": 55,
        "word_length": 3,
        "text": " My",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 58,
        "word_length": 5,
        "text": " name",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 63,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36199998,
        "text_offset": 66,
        "word_length": 4,
        "text": " Don",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36999999,
        "text_offset": 70,
        "word_length": 4,
        "text": "ovan",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 74,
        "word_length": 4,
        "text": " Las",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42800000,
        "text_offset": 78,
        "word_length": 2,
        "text": "al",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46700000,
        "text_offset": 80,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46700000,
        "text_offset": 84,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46799998,
        "text_offset": 89,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 95,
        "word_length": 4,
        "text": " was",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 99,
        "word_length": 5,
        "text": " made",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 104,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 107,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51799998,
        "text_offset": 112,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51899998,
        "text_offset": 115,
        "word_length": 3,
        "text": " my",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 118,
        "word_length": 9,
        "text": " Bachelor",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58499999,
        "text_offset": 127,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59600000,
        "text_offset": 130,
        "word_length": 3,
        "text": " Se",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60700001,
        "text_offset": 133,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63999998,
        "text_offset": 135,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "text_offset": 137,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66199998,
        "text_offset": 140,
        "word_length": 5,
        "text": " Math",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74199998,
        "text_offset": 145,
        "word_length": 7,
        "text": "ematics",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 152,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 155,
        "word_length": 2,
        "text": " U",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84199998,
        "text_offset": 157,
        "word_length": 3,
        "text": "tre",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87399997,
        "text_offset": 160,
        "word_length": 3,
        "text": "cht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89599995,
        "text_offset": 163,
        "word_length": 11,
        "text": " University",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 174,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Welcome to this video about the Banachhtarsky paradox. My name is Donovan Lasal and this video was made as part of my Bachelor of Seasis in Mathematics at Utrecht University.",
    "final_audio": "oranges-princess-oscar-island.mp3"
  },
  {
    "input_text": "The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two.",
    "input_data": {
      "input_text": "The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "west-virginia-chicken-robert.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4399999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6499999,
        "text_offset": 4,
        "word_length": 5,
        "text": " goal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7800000,
        "text_offset": 9,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8899999,
        "text_offset": 12,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 17,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 23,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 26,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 29,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 37,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 39,
        "word_length": 7,
        "text": " visual",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 46,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 57,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42200000,
        "text_offset": 69,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 74,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 80,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 83,
        "word_length": 3,
        "text": " my",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49299998,
        "text_offset": 86,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50999999,
        "text_offset": 93,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53599998,
        "text_offset": 94,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54900000,
        "text_offset": 97,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56099998,
        "text_offset": 102,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57599999,
        "text_offset": 105,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 110,
        "word_length": 7,
        "text": " people",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62399997,
        "text_offset": 117,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199997,
        "text_offset": 120,
        "word_length": 9,
        "text": " possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 129,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 133,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 137,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 139,
        "word_length": 6,
        "text": " grasp",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 145,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 148,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 152,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 160,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 164,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 169,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 173,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 176,
        "word_length": 7,
        "text": " turned",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 183,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 188,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70800000,
        "text_offset": 192,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The goal of this video is to provide a visual proof that follows the same lines as my thesis, so that as many people as possible can get a grasp of how exactly one ball can be turned into two.",
    "final_audio": "west-virginia-chicken-robert.mp3"
  },
  {
    "input_text": "Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball.",
    "input_data": {
      "input_text": "Because that is what the Banach-Tarski paradox says: you can take parts of the unit ball, rotate and translate those parts, without stretching or scaling anything and get two copies of the unit ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "river-emma-butter-california.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 8,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 13,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9999999,
        "text_offset": 16,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 21,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12899999,
        "text_offset": 25,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 29,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 32,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 34,
        "word_length": 3,
        "text": "ors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 37,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22699999,
        "text_offset": 39,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 47,
        "word_length": 5,
        "text": " says",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 52,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199999,
        "text_offset": 53,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 57,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 61,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 66,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599998,
        "text_offset": 72,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41699998,
        "text_offset": 75,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43599998,
        "text_offset": 79,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 84,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47499997,
        "text_offset": 89,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 90,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54199998,
        "text_offset": 97,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56699998,
        "text_offset": 101,
        "word_length": 10,
        "text": " translate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61299998,
        "text_offset": 111,
        "word_length": 6,
        "text": " those",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63299999,
        "text_offset": 117,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71999998,
        "text_offset": 123,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74499998,
        "text_offset": 131,
        "word_length": 11,
        "text": " stretching",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79199998,
        "text_offset": 142,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83299994,
        "text_offset": 145,
        "word_length": 8,
        "text": " scaling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 153,
        "word_length": 9,
        "text": " anything",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101499996,
        "text_offset": 162,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104099993,
        "text_offset": 166,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104599995,
        "text_offset": 170,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106399998,
        "text_offset": 174,
        "word_length": 7,
        "text": " copies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107899994,
        "text_offset": 181,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110299992,
        "text_offset": 184,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599993,
        "text_offset": 188,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112699995,
        "text_offset": 193,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113199996,
        "text_offset": 198,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " because that is what the Banach Torski paradox says. You can take parts of the unit ball, rotate and translate those parts without stretching or scaling anything and get two copies of the unit ball.",
    "final_audio": "river-emma-butter-california.mp3"
  },
  {
    "input_text": "A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will make a short stop in the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all.",
    "input_data": {
      "input_text": "A fascinating result indeed, which we will get to proving very shortly. Before we do that, we will make a short stop in the world of non-measurable sets. This is because without non-measurable sets the Banach-Tarski paradox would not be possible at all.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "double-autumn-johnny-freddie.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6999999,
        "text_offset": 0,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 2,
        "word_length": 12,
        "text": " fascinating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 14,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15299999,
        "text_offset": 21,
        "word_length": 7,
        "text": " indeed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799998,
        "text_offset": 28,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 29,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 35,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "text_offset": 38,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 43,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31299999,
        "text_offset": 47,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 50,
        "word_length": 8,
        "text": " proving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 58,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 63,
        "word_length": 8,
        "text": " shortly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599997,
        "text_offset": 71,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 72,
        "word_length": 7,
        "text": " Before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 79,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 82,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53599998,
        "text_offset": 85,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 90,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 91,
        "word_length": 8,
        "text": " however",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61199998,
        "text_offset": 99,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62899999,
        "text_offset": 100,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199997,
        "text_offset": 103,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 108,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199999,
        "text_offset": 113,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69699997,
        "text_offset": 115,
        "word_length": 6,
        "text": " short",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399998,
        "text_offset": 121,
        "word_length": 5,
        "text": " stop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75799999,
        "text_offset": 126,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 129,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78599998,
        "text_offset": 133,
        "word_length": 6,
        "text": " world",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399997,
        "text_offset": 139,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 142,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84399995,
        "text_offset": 146,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85699996,
        "text_offset": 147,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000001,
        "text_offset": 149,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000001,
        "text_offset": 151,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89699997,
        "text_offset": 157,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93999996,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 163,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 168,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 171,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 179,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 180,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 188,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 192,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 193,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 195,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 197,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 203,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 208,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 209,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 213,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 217,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 220,
        "word_length": 4,
        "text": "ters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 224,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 226,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 234,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 240,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 244,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 247,
        "word_length": 9,
        "text": " possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 256,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 259,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 263,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " a fascinating result indeed, which we will get to proving very shortly. Before we do that, however, we will make a short stop in the world of non-measurable sets. This is because, without non-measurable sets, the Banachterski paradox would not be possible at all.",
    "final_audio": "double-autumn-johnny-freddie.mp3"
  },
  {
    "input_text": "Okay, let's get into it.",
    "input_data": {
      "input_text": "Okay, let's get into it.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fruit-mango-nebraska-hydrogen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13899999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Okay",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "text_offset": 5,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 6,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 10,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 12,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 16,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 21,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 24,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Okay, let's get into it.",
    "final_audio": "fruit-mango-nebraska-hydrogen.mp3"
  },
  {
    "input_text": "When we talk about size, we have an intuitive idea of what it means:",
    "input_data": {
      "input_text": "When we talk about size, we have an intuitive idea of what it means:",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "cat-north-butter-zulu.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3299999,
        "text_offset": 0,
        "word_length": 5,
        "text": " When",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4800000,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6199999,
        "text_offset": 8,
        "word_length": 5,
        "text": " talk",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 13,
        "word_length": 6,
        "text": " about",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 19,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14299999,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 25,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 28,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 33,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799998,
        "text_offset": 36,
        "word_length": 10,
        "text": " intuitive",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 46,
        "word_length": 5,
        "text": " idea",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399998,
        "text_offset": 51,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 54,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30299998,
        "text_offset": 59,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499999,
        "text_offset": 62,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34599999,
        "text_offset": 68,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " When we talk about size, we have an intuitive idea of what it means.",
    "final_audio": "cat-north-butter-zulu.mp3"
  },
  {
    "input_text": "the interval from -1 to 1 has has \u201clength\u201d two, and we know it for every interval.",
    "input_data": {
      "input_text": "the interval from -1 to 1 has has \u201clength\u201d two, and we know it for every interval.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nebraska-fix-may-uncle.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 4,
        "word_length": 9,
        "text": " interval",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11099999,
        "text_offset": 13,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 18,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 24,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 26,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 29,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23700000,
        "text_offset": 31,
        "word_length": 4,
        "text": " has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 35,
        "word_length": 7,
        "text": " length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999999,
        "text_offset": 42,
        "word_length": 2,
        "text": " 2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 44,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 48,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 51,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "text_offset": 56,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46599998,
        "text_offset": 59,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48499999,
        "text_offset": 63,
        "word_length": 6,
        "text": " every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50999999,
        "text_offset": 69,
        "word_length": 9,
        "text": " interval",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The interval from minus 1 to 1 has length 2 and we know it for every interval.",
    "final_audio": "nebraska-fix-may-uncle.mp3"
  },
  {
    "input_text": "Similarly, we can expand that notion to two dimensions: rectangle sizes are the length of the width multiplied by the height",
    "input_data": {
      "input_text": "Similarly, we can expand that notion to two dimensions: rectangle sizes are the length of the width multiplied by the height",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sweet-friend-twelve-bacon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6700000,
        "text_offset": 0,
        "word_length": 10,
        "text": " Similarly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 11,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13700000,
        "text_offset": 14,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15899999,
        "text_offset": 18,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 25,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 30,
        "word_length": 7,
        "text": " notion",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21899999,
        "text_offset": 37,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 40,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 44,
        "word_length": 11,
        "text": " dimensions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31399999,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34399999,
        "text_offset": 56,
        "word_length": 2,
        "text": " R",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42799999,
        "text_offset": 58,
        "word_length": 3,
        "text": "ack",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 61,
        "word_length": 1,
        "text": "t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199998,
        "text_offset": 62,
        "word_length": 5,
        "text": "angle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199998,
        "text_offset": 67,
        "word_length": 6,
        "text": " sizes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999999,
        "text_offset": 73,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48799998,
        "text_offset": 77,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49999997,
        "text_offset": 81,
        "word_length": 7,
        "text": " length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 88,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 91,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52599997,
        "text_offset": 95,
        "word_length": 10,
        "text": " rectangle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56899999,
        "text_offset": 105,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 110,
        "word_length": 8,
        "text": " planned",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57199997,
        "text_offset": 118,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57199997,
        "text_offset": 121,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57199997,
        "text_offset": 125,
        "word_length": 6,
        "text": " width",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57199997,
        "text_offset": 131,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Similarly, we can expand that notion to two dimensions. Racktangle sizes are the length of the rectangle also planned by the width.",
    "final_audio": "sweet-friend-twelve-bacon.mp3"
  },
  {
    "input_text": "Of course, this notion can be generalized to any higher dimension if you'd like.",
    "input_data": {
      "input_text": "Of course, this notion can be generalized to any higher dimension if you'd like.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "east-pennsylvania-twenty-winter.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8599999,
        "text_offset": 0,
        "word_length": 3,
        "text": " Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 3,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14899999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16199999,
        "text_offset": 16,
        "word_length": 7,
        "text": " notion",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 23,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 27,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21899999,
        "text_offset": 30,
        "word_length": 12,
        "text": " generalized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 42,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 45,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34799998,
        "text_offset": 49,
        "word_length": 7,
        "text": " higher",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 56,
        "word_length": 10,
        "text": " dimension",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 66,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42799999,
        "text_offset": 69,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 73,
        "word_length": 2,
        "text": "'d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 75,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46799998,
        "text_offset": 80,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Of course, this notion can be generalized to any higher dimension if you'd like.",
    "final_audio": "east-pennsylvania-twenty-winter.mp3"
  },
  {
    "input_text": "When trying to generalize a notion of size to arbitrary sets however, we run into trouble. For some sets, it ends up being impossible to say what its 'size' is. We call these sets 'non-measurable' In this section, we will give an example of such a non-measurable set.",
    "input_data": {
      "input_text": "When trying to generalize a notion of size to arbitrary sets however, we run into trouble. For some sets, it ends up being impossible to say what its 'size' is. We call these sets 'non-measurable' In this section, we will give an example of such a non-measurable set.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lactose-papa-sixteen-six.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6200000,
        "text_offset": 0,
        "word_length": 5,
        "text": " When",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 5,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11200000,
        "text_offset": 12,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "text_offset": 15,
        "word_length": 8,
        "text": " general",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "text_offset": 23,
        "word_length": 3,
        "text": "ize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "text_offset": 26,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25699999,
        "text_offset": 28,
        "word_length": 7,
        "text": " notion",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26599999,
        "text_offset": 35,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 38,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29099999,
        "text_offset": 43,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29800000,
        "text_offset": 46,
        "word_length": 10,
        "text": " arbitrary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32300000,
        "text_offset": 56,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 61,
        "word_length": 8,
        "text": " however",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36499999,
        "text_offset": 69,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36599999,
        "text_offset": 70,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37899999,
        "text_offset": 73,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 77,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40899999,
        "text_offset": 82,
        "word_length": 8,
        "text": " trouble",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55799999,
        "text_offset": 91,
        "word_length": 4,
        "text": " For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 95,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 100,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57399997,
        "text_offset": 105,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57899997,
        "text_offset": 108,
        "word_length": 5,
        "text": " ends",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59799997,
        "text_offset": 113,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62200000,
        "text_offset": 116,
        "word_length": 6,
        "text": " being",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 122,
        "word_length": 11,
        "text": " impossible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199997,
        "text_offset": 133,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72299997,
        "text_offset": 136,
        "word_length": 4,
        "text": " say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999999,
        "text_offset": 140,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77599997,
        "text_offset": 145,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 149,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 154,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85899996,
        "text_offset": 157,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89099998,
        "text_offset": 158,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89600000,
        "text_offset": 161,
        "word_length": 5,
        "text": " call",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 166,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 172,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 177,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90899996,
        "text_offset": 181,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199994,
        "text_offset": 182,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92600002,
        "text_offset": 184,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99199995,
        "text_offset": 186,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107599997,
        "text_offset": 192,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 193,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 196,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 201,
        "word_length": 8,
        "text": " section",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 209,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 212,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 217,
        "word_length": 5,
        "text": " give",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 222,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 225,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 236,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 241,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 243,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 247,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 248,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 250,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 252,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 258,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111200000,
        "text_offset": 262,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " When trying to generalize a notion of size to arbitrary sets however, we run into trouble. For some sets it ends up being impossible to say what its size is. We call these sets non-measurable. In this section we will give an example of such a non-measurable set.",
    "final_audio": "lactose-papa-sixteen-six.mp3"
  },
  {
    "input_text": "We will create a non-measurable subset on S1.",
    "input_data": {
      "input_text": "We will create a non-measurable subset on S1.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "montana-north-carbon-tennis.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7499999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 8,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 15,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 17,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 21,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299999,
        "text_offset": 22,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 24,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 26,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 32,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 39,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199999,
        "text_offset": 42,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36999999,
        "text_offset": 44,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will create a non-measurable subset on S1.",
    "final_audio": "montana-north-carbon-tennis.mp3"
  },
  {
    "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "input_data": {
      "input_text": "We will do this by creating equivalence classes on the points of the unit circle by taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "violet-yankee-item-mobile.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 16,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 19,
        "word_length": 9,
        "text": " creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 28,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18100000,
        "text_offset": 36,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 40,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25899999,
        "text_offset": 48,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 51,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899999,
        "text_offset": 55,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 61,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 64,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 68,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 73,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41099998,
        "text_offset": 80,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48299996,
        "text_offset": 81,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49099998,
        "text_offset": 84,
        "word_length": 7,
        "text": " taking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50199999,
        "text_offset": 91,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53499999,
        "text_offset": 95,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 99,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58899998,
        "text_offset": 106,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60599999,
        "text_offset": 109,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62699999,
        "text_offset": 112,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68399999,
        "text_offset": 123,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199999,
        "text_offset": 128,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71699998,
        "text_offset": 134,
        "word_length": 7,
        "text": " exists",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76799998,
        "text_offset": 141,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79699995,
        "text_offset": 146,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83399996,
        "text_offset": 155,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 164,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 167,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 172,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 176,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 182,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 188,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 191,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 195,
        "word_length": 7,
        "text": " second",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91200000,
        "text_offset": 202,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will do this by creating equivalence classes on the point of the unit circle. By taking any two points to be equivalent when there exists some rational rotation to take the first point to the second.",
    "final_audio": "violet-yankee-item-mobile.mp3"
  },
  {
    "input_text": "Let's look at how such an equivalence class is created by looking at the point 1, 0.",
    "input_data": {
      "input_text": "Let's look at how such an equivalence class is created by looking at the point 1, 0.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "item-hydrogen-colorado-mango.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14699999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 14,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 18,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 23,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099998,
        "text_offset": 26,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 37,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31100000,
        "text_offset": 43,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699999,
        "text_offset": 46,
        "word_length": 8,
        "text": " created",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35299998,
        "text_offset": 54,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40999997,
        "text_offset": 65,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42500000,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43799998,
        "text_offset": 72,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 75,
        "word_length": 2,
        "text": "10",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49700000,
        "text_offset": 77,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at how such an equivalent class is created by looking at the 0.10.",
    "final_audio": "item-hydrogen-colorado-mango.mp3"
  },
  {
    "input_text": "we will use the notation p in brackets to mean the equivalence class of p. Of course we didn't see all the points in the equivalence class, since there are infinitely many.",
    "input_data": {
      "input_text": "we will use the notation p in brackets to mean the equivalence class of p. Of course we didn't see all the points in the equivalence class, since there are infinitely many.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "two-wolfram-steak-snake.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12799999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 8,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 12,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21099998,
        "text_offset": 16,
        "word_length": 9,
        "text": " notation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25099998,
        "text_offset": 25,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27299998,
        "text_offset": 27,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 30,
        "word_length": 9,
        "text": " brackets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799998,
        "text_offset": 39,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 42,
        "word_length": 5,
        "text": " mean",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 47,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40099998,
        "text_offset": 51,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199999,
        "text_offset": 59,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45399999,
        "text_offset": 63,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49900000,
        "text_offset": 69,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51299998,
        "text_offset": 72,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56799998,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 75,
        "word_length": 3,
        "text": " Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 78,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 86,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 89,
        "word_length": 5,
        "text": " didn",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 94,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 96,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 100,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 108,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 115,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 122,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 130,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 134,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 140,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 146,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 152,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 156,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 167,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58400000,
        "text_offset": 172,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will use the notation P in brackets to mean the equivalence class of P. Of course, we didn't see all the points in the equivalence class since there are infinitely many.",
    "final_audio": "two-wolfram-steak-snake.mp3"
  },
  {
    "input_text": "Let's see that process for a few more points.",
    "input_data": {
      "input_text": "Let's see that process for a few more points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sodium-wolfram-indigo-ceiling.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3399999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6599999,
        "text_offset": 10,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 15,
        "word_length": 8,
        "text": " process",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 23,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 27,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 29,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 33,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 38,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20599998,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see that process for a few more points.",
    "final_audio": "sodium-wolfram-indigo-ceiling.mp3"
  },
  {
    "input_text": "Now, we can do this for all points of the unit circle, so that we have a collection of all equivalence classes.",
    "input_data": {
      "input_text": "Now, we can do this for all points of the unit circle, so that we have a collection of all equivalence classes.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sweet-saturn-jig-timing.mp3",
    "word_boundaries": [
      {
        "audio_offset": 11799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 4,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 7,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 11,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 14,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 19,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 23,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 27,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 34,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 37,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30399998,
        "text_offset": 41,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699998,
        "text_offset": 46,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 53,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37899998,
        "text_offset": 56,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 61,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 64,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 69,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 71,
        "word_length": 11,
        "text": " collection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 82,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 85,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 89,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 97,
        "word_length": 4,
        "text": "ents",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 101,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51200000,
        "text_offset": 109,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now we can do this for all points of the unit circle so that we have a collection of all equivalents classes.",
    "final_audio": "sweet-saturn-jig-timing.mp3"
  },
  {
    "input_text": "Using the Axiom of Choice, we can pick exactly one point from each of these equivalence classes. This will be our non-measurable set M.",
    "input_data": {
      "input_text": "Using the Axiom of Choice, we can pick exactly one point from each of these equivalence classes. This will be our non-measurable set M.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "quiet-football-iowa-kentucky.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7399999,
        "text_offset": 0,
        "word_length": 6,
        "text": " Using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 6,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 10,
        "word_length": 3,
        "text": " ax",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 13,
        "word_length": 1,
        "text": "i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 14,
        "word_length": 2,
        "text": "om",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 16,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 19,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23199999,
        "text_offset": 26,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24900000,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26499999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 34,
        "word_length": 5,
        "text": " pick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31199998,
        "text_offset": 39,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 47,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38499999,
        "text_offset": 51,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42199997,
        "text_offset": 57,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44199998,
        "text_offset": 62,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47099997,
        "text_offset": 67,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48199999,
        "text_offset": 70,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 76,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 84,
        "word_length": 4,
        "text": "ents",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56299998,
        "text_offset": 88,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 96,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 97,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 102,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 107,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 110,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 114,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 118,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 119,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 121,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 123,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 129,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 133,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 135,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Using the axiom of choice, we can pick exactly one point from each of these equivalents classes. This will be our non-measurable set M.",
    "final_audio": "quiet-football-iowa-kentucky.mp3"
  },
  {
    "input_text": "Notice now that we can form the whole circle again by looking at all rational rotations of M",
    "input_data": {
      "input_text": "Notice now that we can form the whole circle again by looking at all rational rotations of M",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "eleven-artist-connecticut-nine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12400000,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 7,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 16,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 19,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 23,
        "word_length": 5,
        "text": " form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20599998,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 32,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 38,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 45,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 51,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 54,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35699999,
        "text_offset": 62,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37399998,
        "text_offset": 65,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 69,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 78,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 88,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 91,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice now that we can form the whole circle again by looking at all rational rotations of M.",
    "final_audio": "eleven-artist-connecticut-nine.mp3"
  },
  {
    "input_text": "By sigma additivity and rotation invariance, we then get the following",
    "input_data": {
      "input_text": "By sigma additivity and rotation invariance, we then get the following",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "south-oscar-vermont-butter.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 3,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16899999,
        "text_offset": 9,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 13,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 15,
        "word_length": 5,
        "text": "ivity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 20,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799999,
        "text_offset": 24,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 33,
        "word_length": 7,
        "text": " invari",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299999,
        "text_offset": 40,
        "word_length": 4,
        "text": "ance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 44,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599998,
        "text_offset": 47,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 52,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 56,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 60,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49700000,
        "text_offset": 70,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " By sigma additivity and rotation invariance we then get the following.",
    "final_audio": "south-oscar-vermont-butter.mp3"
  },
  {
    "input_text": "So then, what is mu of M?",
    "input_data": {
      "input_text": "So then, what is mu of M?",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "two-spaghetti-red-cat.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7299999,
        "text_offset": 8,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9399999,
        "text_offset": 13,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 16,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 19,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 22,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 24,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So then what is mu of m?",
    "final_audio": "two-spaghetti-red-cat.mp3"
  },
  {
    "input_text": "If we take mu of M is zero, then the measure of the unit circle must also be zero.",
    "input_data": {
      "input_text": "If we take mu of M is zero, then the measure of the unit circle must also be zero.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "carbon-connecticut-stairway-missouri.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 6,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 11,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 14,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 17,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 19,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 22,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 27,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29599999,
        "text_offset": 28,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 37,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39299999,
        "text_offset": 45,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 52,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "text_offset": 57,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49499998,
        "text_offset": 64,
        "word_length": 5,
        "text": " must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52099997,
        "text_offset": 69,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55299999,
        "text_offset": 74,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 77,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59699997,
        "text_offset": 82,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If we take mu of m as zero, then the measure of the unit circle must also be zero.",
    "final_audio": "carbon-connecticut-stairway-missouri.mp3"
  },
  {
    "input_text": "But if we take mu of M to be nonzero, then the measure of the unit circle must be infinite!",
    "input_data": {
      "input_text": "But if we take mu of M to be nonzero, then the measure of the unit circle must be infinite!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "bluebird-vegan-hot-west.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 4,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16199999,
        "text_offset": 7,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 10,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 15,
        "word_length": 3,
        "text": " mu",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 21,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "text_offset": 23,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 26,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28099999,
        "text_offset": 29,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28599998,
        "text_offset": 33,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799998,
        "text_offset": 34,
        "word_length": 4,
        "text": "zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 38,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 39,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 48,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799998,
        "text_offset": 56,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 59,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199999,
        "text_offset": 63,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 68,
        "word_length": 7,
        "text": " circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49599997,
        "text_offset": 75,
        "word_length": 5,
        "text": " must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 80,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199997,
        "text_offset": 83,
        "word_length": 9,
        "text": " infinite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58299999,
        "text_offset": 92,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " But if we take mu of m to be non-zero, then the measure of the unit circle must be infinite.",
    "final_audio": "bluebird-vegan-hot-west.mp3"
  },
  {
    "input_text": "It should be clear that neither of these options is a good choice. As a result, we say that M is non-measurable. You might be wondering why this is relevant to the Banach-Tarski paradox? It is relevant because the parts that we will divide the ball into, are going to be non-measurable. In fact, there is no other way for the paradox to make sense; if we could assign a size to each of these parts, then the Banach-Tarski paradox would imply that the volume of one unit ball is the same as the volume of two unit balls - and that obviously cannot be the case.",
    "input_data": {
      "input_text": "It should be clear that neither of these options is a good choice. As a result, we say that M is non-measurable. You might be wondering why this is relevant to the Banach-Tarski paradox? It is relevant because the parts that we will divide the ball into, are going to be non-measurable. In fact, there is no other way for the paradox to make sense; if we could assign a size to each of these parts, then the Banach-Tarski paradox would imply that the volume of one unit ball is the same as the volume of two unit balls - and that obviously cannot be the case.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "pluto-autumn-oklahoma-hydrogen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6799999,
        "text_offset": 0,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 3,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14899999,
        "text_offset": 10,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 13,
        "word_length": 6,
        "text": " clear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 19,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 24,
        "word_length": 8,
        "text": " neither",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 35,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 41,
        "word_length": 8,
        "text": " options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31699999,
        "text_offset": 49,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 52,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 54,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 59,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43399997,
        "text_offset": 66,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56399998,
        "text_offset": 67,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56399998,
        "text_offset": 70,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799999,
        "text_offset": 72,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59399998,
        "text_offset": 79,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60599999,
        "text_offset": 80,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 83,
        "word_length": 4,
        "text": " say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62299997,
        "text_offset": 87,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63799998,
        "text_offset": 92,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67999999,
        "text_offset": 94,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69999997,
        "text_offset": 97,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71499998,
        "text_offset": 101,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72799997,
        "text_offset": 102,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73099997,
        "text_offset": 104,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76999998,
        "text_offset": 106,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85599999,
        "text_offset": 112,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89399999,
        "text_offset": 113,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90799999,
        "text_offset": 117,
        "word_length": 6,
        "text": " might",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110399994,
        "text_offset": 123,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110799994,
        "text_offset": 126,
        "word_length": 10,
        "text": " wondering",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112399997,
        "text_offset": 136,
        "word_length": 4,
        "text": " why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113199996,
        "text_offset": 140,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113399996,
        "text_offset": 145,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113699994,
        "text_offset": 148,
        "word_length": 9,
        "text": " relevant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 157,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 160,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 164,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 168,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 171,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121599993,
        "text_offset": 173,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121599993,
        "text_offset": 176,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121599993,
        "text_offset": 178,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127499995,
        "text_offset": 186,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130799999,
        "text_offset": 187,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132199997,
        "text_offset": 190,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133699998,
        "text_offset": 193,
        "word_length": 9,
        "text": " relevant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135799994,
        "text_offset": 202,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140799999,
        "text_offset": 210,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143399996,
        "text_offset": 214,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145399994,
        "text_offset": 220,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146999993,
        "text_offset": 225,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148399996,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149599995,
        "text_offset": 233,
        "word_length": 7,
        "text": " divide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154799995,
        "text_offset": 240,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156599993,
        "text_offset": 244,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158599996,
        "text_offset": 249,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164399995,
        "text_offset": 254,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166599998,
        "text_offset": 258,
        "word_length": 6,
        "text": " going",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168299999,
        "text_offset": 264,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169499988,
        "text_offset": 267,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170599994,
        "text_offset": 270,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173099994,
        "text_offset": 274,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174700002,
        "text_offset": 275,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180899991,
        "text_offset": 277,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182699995,
        "text_offset": 279,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183099994,
        "text_offset": 285,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188799991,
        "text_offset": 286,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 189799995,
        "text_offset": 289,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190799999,
        "text_offset": 294,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191899995,
        "text_offset": 295,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192799997,
        "text_offset": 301,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 193899993,
        "text_offset": 304,
        "word_length": 3,
        "text": " no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195500001,
        "text_offset": 307,
        "word_length": 6,
        "text": " other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197799997,
        "text_offset": 313,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 200999994,
        "text_offset": 317,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202399988,
        "text_offset": 321,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204599990,
        "text_offset": 325,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207799997,
        "text_offset": 333,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208999996,
        "text_offset": 336,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211199989,
        "text_offset": 341,
        "word_length": 6,
        "text": " sense",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218199996,
        "text_offset": 347,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 219999995,
        "text_offset": 348,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220199995,
        "text_offset": 351,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220799999,
        "text_offset": 354,
        "word_length": 6,
        "text": " could",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221199989,
        "text_offset": 360,
        "word_length": 7,
        "text": " assign",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229399995,
        "text_offset": 367,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234200000,
        "text_offset": 369,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236899986,
        "text_offset": 374,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238599996,
        "text_offset": 377,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241099996,
        "text_offset": 382,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243399991,
        "text_offset": 385,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246999988,
        "text_offset": 391,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 251499996,
        "text_offset": 397,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 253399991,
        "text_offset": 398,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255899991,
        "text_offset": 403,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257199993,
        "text_offset": 407,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258799991,
        "text_offset": 411,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258799991,
        "text_offset": 414,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258999996,
        "text_offset": 416,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 260599994,
        "text_offset": 419,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262500000,
        "text_offset": 421,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 266199989,
        "text_offset": 429,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272600002,
        "text_offset": 435,
        "word_length": 6,
        "text": " imply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 278400001,
        "text_offset": 441,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281000003,
        "text_offset": 446,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281900005,
        "text_offset": 450,
        "word_length": 7,
        "text": " volume",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 282800006,
        "text_offset": 457,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284100008,
        "text_offset": 460,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285300006,
        "text_offset": 464,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287200002,
        "text_offset": 469,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289499998,
        "text_offset": 474,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291900005,
        "text_offset": 477,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294399995,
        "text_offset": 481,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296600008,
        "text_offset": 486,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299200010,
        "text_offset": 489,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301599998,
        "text_offset": 491,
        "word_length": 7,
        "text": " volume",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 303800001,
        "text_offset": 498,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305799999,
        "text_offset": 501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307600002,
        "text_offset": 505,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 310799999,
        "text_offset": 510,
        "word_length": 6,
        "text": " balls",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316800003,
        "text_offset": 516,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 517,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 521,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 526,
        "word_length": 10,
        "text": " obviously",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 536,
        "word_length": 7,
        "text": " cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 543,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 546,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 550,
        "word_length": 5,
        "text": " case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318800000,
        "text_offset": 555,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " It should be clear that neither of these options is a good choice. As a result, we say that m is non-measurable. You might be wondering why this is relevant to the Banachhtarsky paradox. It is relevant because the parts that we will divide the ball into are going to be non-measurable. In fact, there is no other way for the paradox to make sense. If we could assign a size to each of these parts, then the Banachhtarsky paradox would imply that the volume of one unit ball is the same as a volume of two unit balls. And that obviously cannot be the case.",
    "final_audio": "pluto-autumn-oklahoma-hydrogen.mp3"
  },
  {
    "input_text": "One of the essential constructions in the proof of the Banach-Tarski paradox is the use of the free group to \u201cduplicate\u201d the ball. We will see that the free group generated by two elements can be easily divided into parts, such that they can be shifted to create two copies of itself. This is in essence what we wil eventually be doing with the unit ball as well. So what is the free group?",
    "input_data": {
      "input_text": "One of the essential constructions in the proof of the Banach-Tarski paradox is the use of the free group to \u201cduplicate\u201d the ball. We will see that the free group generated by two elements can be easily divided into parts, such that they can be shifted to create two copies of itself. This is in essence what we wil eventually be doing with the unit ball as well. So what is the free group?",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "freddie-pluto-spring-friend.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 4,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7699999,
        "text_offset": 7,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 11,
        "word_length": 10,
        "text": " essential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8899999,
        "text_offset": 21,
        "word_length": 10,
        "text": " construct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9699999,
        "text_offset": 31,
        "word_length": 4,
        "text": "ions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 35,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11699999,
        "text_offset": 42,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 48,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 51,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 55,
        "word_length": 4,
        "text": " Man",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 59,
        "word_length": 4,
        "text": "acht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 63,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 66,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30399998,
        "text_offset": 68,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 76,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 79,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 83,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 87,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 90,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 94,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 99,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 105,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 108,
        "word_length": 10,
        "text": " duplicate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55399999,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57400000,
        "text_offset": 122,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60499999,
        "text_offset": 127,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 128,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 131,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67199997,
        "text_offset": 136,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68299999,
        "text_offset": 140,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69399998,
        "text_offset": 145,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70799999,
        "text_offset": 149,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72399997,
        "text_offset": 154,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74399998,
        "text_offset": 160,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77999997,
        "text_offset": 170,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79399998,
        "text_offset": 173,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81599998,
        "text_offset": 177,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88799996,
        "text_offset": 186,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91399998,
        "text_offset": 190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93999996,
        "text_offset": 193,
        "word_length": 7,
        "text": " easily",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96700000,
        "text_offset": 200,
        "word_length": 8,
        "text": " divided",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99599995,
        "text_offset": 208,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 213,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107599997,
        "text_offset": 219,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599998,
        "text_offset": 224,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113799996,
        "text_offset": 229,
        "word_length": 5,
        "text": " they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115799994,
        "text_offset": 234,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117199997,
        "text_offset": 238,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119599995,
        "text_offset": 241,
        "word_length": 8,
        "text": " shifted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122399997,
        "text_offset": 249,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124799995,
        "text_offset": 252,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799998,
        "text_offset": 259,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129199995,
        "text_offset": 263,
        "word_length": 7,
        "text": " copies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133199996,
        "text_offset": 270,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135799994,
        "text_offset": 273,
        "word_length": 7,
        "text": " itself",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139599995,
        "text_offset": 280,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144099998,
        "text_offset": 281,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145699996,
        "text_offset": 286,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147699995,
        "text_offset": 289,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150399999,
        "text_offset": 292,
        "word_length": 8,
        "text": " essence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 151999998,
        "text_offset": 300,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153999996,
        "text_offset": 305,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155799994,
        "text_offset": 308,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158399996,
        "text_offset": 313,
        "word_length": 11,
        "text": " eventually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 162799997,
        "text_offset": 324,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165199995,
        "text_offset": 327,
        "word_length": 6,
        "text": " doing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168399991,
        "text_offset": 333,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170399990,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600002,
        "text_offset": 342,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174599990,
        "text_offset": 347,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176800003,
        "text_offset": 352,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179200000,
        "text_offset": 355,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181999998,
        "text_offset": 360,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 361,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 364,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 369,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 372,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 376,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 381,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184800000,
        "text_offset": 387,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " One of the essential constructions in the proof of the Manachtarski paradox is the use of the free group to duplicate the ball. We will see that the free group generated by two elements can be easily divided into parts such that they can be shifted to create two copies of itself. This is in essence what we will eventually be doing with the unit ball as well. So what is the free group?",
    "final_audio": "freddie-pluto-spring-friend.mp3"
  },
  {
    "input_text": "Let's look at a definition. The free group f two generated by two elements sigma and tau is the group consisting of all finite products of sigma, tau and their inverses. The identity in this group is the empty product.",
    "input_data": {
      "input_text": "Let's look at a definition. The free group f two generated by two elements sigma and tau is the group consisting of all finite products of sigma, tau and their inverses. The identity in this group is the empty product.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vegan-ack-red-burger.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6499999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9599999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 14,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 16,
        "word_length": 11,
        "text": " definition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 27,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21800000,
        "text_offset": 28,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 32,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999998,
        "text_offset": 37,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 43,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 45,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34599999,
        "text_offset": 46,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39799998,
        "text_offset": 56,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799998,
        "text_offset": 59,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44499998,
        "text_offset": 63,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 72,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 78,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52099997,
        "text_offset": 82,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60199999,
        "text_offset": 86,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 89,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62199997,
        "text_offset": 93,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63799998,
        "text_offset": 99,
        "word_length": 11,
        "text": " consisting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 110,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69099998,
        "text_offset": 113,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71499998,
        "text_offset": 117,
        "word_length": 7,
        "text": " finite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74199998,
        "text_offset": 124,
        "word_length": 9,
        "text": " products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78799998,
        "text_offset": 133,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80599999,
        "text_offset": 136,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84599995,
        "text_offset": 142,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86599998,
        "text_offset": 143,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89299998,
        "text_offset": 147,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90299997,
        "text_offset": 148,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91300001,
        "text_offset": 152,
        "word_length": 6,
        "text": " their",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92799997,
        "text_offset": 158,
        "word_length": 7,
        "text": " invers",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97899999,
        "text_offset": 165,
        "word_length": 2,
        "text": "es",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 167,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 168,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 172,
        "word_length": 9,
        "text": " identity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 181,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 184,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 189,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 195,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 198,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 202,
        "word_length": 6,
        "text": " empty",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 208,
        "word_length": 8,
        "text": " product",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100800000,
        "text_offset": 216,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at a definition. The free group F2 generated by two elements sigma and tau is the group consisting of all finite products of sigma, tau, and their inverses. The identity in this group is the empty product.",
    "final_audio": "vegan-ack-red-burger.mp3"
  },
  {
    "input_text": "These are some examples of elements.",
    "input_data": {
      "input_text": "These are some examples of elements.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "bakerloo-twelve-sixteen-salami.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2500000,
        "text_offset": 0,
        "word_length": 6,
        "text": " These",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4499999,
        "text_offset": 6,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 10,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 15,
        "word_length": 9,
        "text": " examples",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 24,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15199999,
        "text_offset": 27,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " These are some examples of elements.",
    "final_audio": "bakerloo-twelve-sixteen-salami.mp3"
  },
  {
    "input_text": "One way to look at this group is to consider it as a directed tree. At the root of the tree, we have the identity element e. We can then go further down the tree by multiplying on the right with sigma, tau, sigma inverse or tau inverse.",
    "input_data": {
      "input_text": "One way to look at this group is to consider it as a directed tree. At the root of the tree, we have the identity element e. We can then go further down the tree by multiplying on the right with sigma, tau, sigma inverse or tau inverse.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "orange-nebraska-leopard-video.mp3",
    "word_boundaries": [
      {
        "audio_offset": 13399999,
        "text_offset": 0,
        "word_length": 4,
        "text": " One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 4,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19399999,
        "text_offset": 16,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20299999,
        "text_offset": 19,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 24,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 30,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 33,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28499999,
        "text_offset": 36,
        "word_length": 9,
        "text": " consider",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999998,
        "text_offset": 45,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33599998,
        "text_offset": 48,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36599999,
        "text_offset": 51,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 53,
        "word_length": 9,
        "text": " directed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 62,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 67,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 68,
        "word_length": 3,
        "text": " At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 71,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 75,
        "word_length": 5,
        "text": " root",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56399998,
        "text_offset": 80,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57699997,
        "text_offset": 83,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59599997,
        "text_offset": 87,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62499997,
        "text_offset": 92,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63499999,
        "text_offset": 93,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 96,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65799999,
        "text_offset": 101,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67099997,
        "text_offset": 105,
        "word_length": 9,
        "text": " identity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72099997,
        "text_offset": 114,
        "word_length": 8,
        "text": " element",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999999,
        "text_offset": 122,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80199997,
        "text_offset": 124,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 125,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 128,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 132,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 137,
        "word_length": 3,
        "text": " go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 140,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 148,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 153,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 157,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82999998,
        "text_offset": 162,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 165,
        "word_length": 12,
        "text": " multiplying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 177,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 180,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 184,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 190,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 195,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 201,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 202,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 206,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 207,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 213,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 221,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 224,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 228,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 236,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " One way to look at this group is to consider it as a directed tree. At the root of the tree, we have the identity element E. We can then go further down the tree by multiplying on the right with sigma, tau, sigma inverse or tau inverse.",
    "final_audio": "orange-nebraska-leopard-video.mp3"
  },
  {
    "input_text": "Each step down the tree is a multiplication on the right by some element of F2. Note that we can't show the whole tree, since it is infinitely big. We only show the progression of the tree for elements starting with sigma, then starting with sigma tau. You should imagine the tree continuing infinitely for all the other branches as well.",
    "input_data": {
      "input_text": "Each step down the tree is a multiplication on the right by some element of F2. Note that we can't show the whole tree, since it is infinitely big. We only show the progression of the tree for elements starting with sigma, then starting with sigma tau. You should imagine the tree continuing infinitely for all the other branches as well.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "angel-south-pip-delaware.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6199999,
        "text_offset": 5,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8400000,
        "text_offset": 10,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10899999,
        "text_offset": 19,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13799999,
        "text_offset": 24,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 27,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 29,
        "word_length": 15,
        "text": " multiplication",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 44,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 47,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 51,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 57,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399998,
        "text_offset": 60,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 65,
        "word_length": 8,
        "text": " element",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32199999,
        "text_offset": 73,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33299999,
        "text_offset": 76,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 78,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 80,
        "word_length": 5,
        "text": " Note",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 85,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49900000,
        "text_offset": 90,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 93,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 97,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53299999,
        "text_offset": 99,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54699997,
        "text_offset": 104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55899999,
        "text_offset": 108,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57399997,
        "text_offset": 114,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60199997,
        "text_offset": 119,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62199997,
        "text_offset": 125,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63799998,
        "text_offset": 128,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 130,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70799999,
        "text_offset": 141,
        "word_length": 4,
        "text": " big",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74799997,
        "text_offset": 145,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 146,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 149,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 154,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87600002,
        "text_offset": 159,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88400001,
        "text_offset": 163,
        "word_length": 12,
        "text": " progression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92999997,
        "text_offset": 175,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94299998,
        "text_offset": 178,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95199999,
        "text_offset": 182,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97399997,
        "text_offset": 187,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 191,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103399996,
        "text_offset": 200,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106599998,
        "text_offset": 209,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110000000,
        "text_offset": 214,
        "word_length": 4,
        "text": " sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599998,
        "text_offset": 218,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112699999,
        "text_offset": 219,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112899994,
        "text_offset": 220,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114499998,
        "text_offset": 225,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116199994,
        "text_offset": 234,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116799998,
        "text_offset": 239,
        "word_length": 4,
        "text": " sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116799998,
        "text_offset": 243,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121499996,
        "text_offset": 244,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799993,
        "text_offset": 248,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 249,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 253,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 260,
        "word_length": 8,
        "text": " imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 272,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 277,
        "word_length": 11,
        "text": " continuing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 288,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 299,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 303,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 307,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 311,
        "word_length": 6,
        "text": " other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 317,
        "word_length": 9,
        "text": " branches",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 326,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 329,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "text_offset": 334,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Each step down the tree is a multiplication on the right by some element of F2. Note that we can't show the whole tree since it's infinitely big. We only show the progression of the tree for elements starting with suma, then starting with suma tau. You should imagine the tree continuing infinitely for all the other branches as well.",
    "final_audio": "angel-south-pip-delaware.mp3"
  },
  {
    "input_text": "We can represent the same thing symbolically as follows. F2 can be written as",
    "input_data": {
      "input_text": "We can represent the same thing symbolically as follows. F2 can be written as",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "triple-kentucky-mobile-maine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6499999,
        "text_offset": 3,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 7,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9099999,
        "text_offset": 17,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 21,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12399999,
        "text_offset": 26,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14699999,
        "text_offset": 32,
        "word_length": 7,
        "text": " symbol",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 39,
        "word_length": 6,
        "text": "ically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 48,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 57,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 59,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 60,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 64,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 67,
        "word_length": 8,
        "text": " written",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 75,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 78,
        "word_length": 3,
        "text": "...",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We can represent the same thing symbolically as follows. F2 can be written as...",
    "final_audio": "triple-kentucky-mobile-maine.mp3"
  },
  {
    "input_text": "the disjoint union of the empty word, all the elements starting with sigma, the elements starting with sigma inverse, the elements starting with tau, and the elements starting with tau inverse. The notation W of sigma means: the elements starting with sigma.",
    "input_data": {
      "input_text": "the disjoint union of the empty word, all the elements starting with sigma, the elements starting with sigma inverse, the elements starting with tau, and the elements starting with tau inverse. The notation W of sigma means: the elements starting with sigma.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "uranus-early-zulu-december.mp3",
    "word_boundaries": [
      {
        "audio_offset": 10799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 4,
        "word_length": 4,
        "text": " dis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 8,
        "word_length": 5,
        "text": "joint",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 13,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18499999,
        "text_offset": 19,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 22,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21399999,
        "text_offset": 26,
        "word_length": 6,
        "text": " empty",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 32,
        "word_length": 5,
        "text": " word",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899998,
        "text_offset": 37,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 38,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 42,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32899998,
        "text_offset": 46,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35699999,
        "text_offset": 55,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38499999,
        "text_offset": 64,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39499999,
        "text_offset": 69,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44499998,
        "text_offset": 75,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 76,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49299998,
        "text_offset": 80,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 89,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55099999,
        "text_offset": 98,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57500000,
        "text_offset": 103,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 109,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62999997,
        "text_offset": 117,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64999997,
        "text_offset": 118,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66999998,
        "text_offset": 122,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69599997,
        "text_offset": 131,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 140,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72999997,
        "text_offset": 145,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77099997,
        "text_offset": 149,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80199995,
        "text_offset": 150,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80299997,
        "text_offset": 154,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84000000,
        "text_offset": 158,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 167,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90199999,
        "text_offset": 176,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90799999,
        "text_offset": 181,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94399995,
        "text_offset": 185,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97799997,
        "text_offset": 193,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 194,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 198,
        "word_length": 9,
        "text": " notation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 207,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 209,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 212,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 218,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 224,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 228,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 237,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 246,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 251,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 257,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The disjoint union of the empty word, all the elements starting with sigma, the elements starting with sigma inverse, the elements starting with tau, and the elements starting with tau inverse. The notation W of sigma means the elements starting with sigma.",
    "final_audio": "uranus-early-zulu-december.mp3"
  },
  {
    "input_text": "Now let's take a closer look at the branch that has elements starting with sigma.",
    "input_data": {
      "input_text": "Now let's take a closer look at the branch that has elements starting with sigma.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "south-network-nitrogen-bakerloo.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 4,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 8,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 10,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 15,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 17,
        "word_length": 7,
        "text": " closer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 24,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 29,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 32,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 36,
        "word_length": 7,
        "text": " branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 43,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 48,
        "word_length": 4,
        "text": " has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27299998,
        "text_offset": 52,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32399998,
        "text_offset": 61,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 70,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36799999,
        "text_offset": 75,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38299999,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now let's take a closer look at the branch that has elements starting with Sigma.",
    "final_audio": "south-network-nitrogen-bakerloo.mp3"
  },
  {
    "input_text": "Notice that when, for all these elements, we multiply on the left by sigma inverse, we get the whole tree again!",
    "input_data": {
      "input_text": "Notice that when, for all these elements, we multiply on the left by sigma inverse, we get the whole tree again!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "november-zebra-solar-kilo.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8299999,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 7,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 12,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23199999,
        "text_offset": 17,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 21,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26799999,
        "text_offset": 25,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 31,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 40,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 43,
        "word_length": 9,
        "text": " multiply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 52,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41999998,
        "text_offset": 55,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43699998,
        "text_offset": 59,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 64,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48799998,
        "text_offset": 67,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50899999,
        "text_offset": 73,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "text_offset": 81,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56299998,
        "text_offset": 82,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57099997,
        "text_offset": 85,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799997,
        "text_offset": 89,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 93,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59300000,
        "text_offset": 99,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59600000,
        "text_offset": 104,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 110,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice that when for all these elements we multiply on the left by sigma inverse, we get the whole tree again.",
    "final_audio": "november-zebra-solar-kilo.mp3"
  },
  {
    "input_text": "Or rather, we get almost the whole tree. The part of the tree that shows elements starting with sigma inverse is not there!",
    "input_data": {
      "input_text": "Or rather, we get almost the whole tree. The part of the tree that shows elements starting with sigma inverse is not there!",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "happy-alpha-uniform-stream.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4799999,
        "text_offset": 3,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 11,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 14,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 18,
        "word_length": 7,
        "text": " almost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 29,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 35,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999998,
        "text_offset": 40,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899998,
        "text_offset": 41,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799998,
        "text_offset": 45,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 50,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33099999,
        "text_offset": 53,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 57,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34499999,
        "text_offset": 62,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599998,
        "text_offset": 67,
        "word_length": 6,
        "text": " shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39099999,
        "text_offset": 73,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 82,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 91,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 96,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 102,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 110,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 117,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 123,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " or rather, we get almost the whole tree. The part of the tree that shows elements starting with sigma inverse is not there.",
    "final_audio": "happy-alpha-uniform-stream.mp3"
  },
  {
    "input_text": "So what we can conclude from all the trees is the following.",
    "input_data": {
      "input_text": "So what we can conclude from all the trees is the following.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "colorado-orange-michigan-stairway.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4799999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6599999,
        "text_offset": 3,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 11,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 15,
        "word_length": 9,
        "text": " conclude",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15499999,
        "text_offset": 24,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 29,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20999999,
        "text_offset": 37,
        "word_length": 6,
        "text": " trees",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999999,
        "text_offset": 43,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 46,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29999998,
        "text_offset": 50,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 60,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So what we can conclude from all the trees is the following.",
    "final_audio": "colorado-orange-michigan-stairway.mp3"
  },
  {
    "input_text": "If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
    "input_data": {
      "input_text": "If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nevada-florida-mississippi-nebraska.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 6,
        "word_length": 9,
        "text": " multiply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 19,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 28,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30099998,
        "text_offset": 31,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 33,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 34,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 43,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 48,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 54,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 57,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 63,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 71,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53899998,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 78,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59399998,
        "text_offset": 83,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62399997,
        "text_offset": 84,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64299998,
        "text_offset": 87,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 91,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 95,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 98,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 102,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 107,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 113,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 114,
        "word_length": 7,
        "text": " except",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 121,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 125,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 134,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 143,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 148,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 154,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If we multiply all elements in F2 starting with sigma by sigma inverse on the left, we get all of the free group, except the elements starting with sigma inverse.",
    "final_audio": "nevada-florida-mississippi-nebraska.mp3"
  },
  {
    "input_text": "This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse",
    "input_data": {
      "input_text": "This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "burger-winter-princess-mobile.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 11,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20499999,
        "text_offset": 18,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22399999,
        "text_offset": 29,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23099999,
        "text_offset": 32,
        "word_length": 7,
        "text": " saying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 39,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299999,
        "text_offset": 44,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399998,
        "text_offset": 46,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29899998,
        "text_offset": 47,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 50,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32399998,
        "text_offset": 54,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 60,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 63,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 69,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 77,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 79,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 85,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57599999,
        "text_offset": 89,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61199998,
        "text_offset": 91,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65099999,
        "text_offset": 97,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68699998,
        "text_offset": 105,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is of course equivalent to saying that F2 is the union of sigma inverse W sigma and W sigma inverse.",
    "final_audio": "burger-winter-princess-mobile.mp3"
  },
  {
    "input_text": "But the choice for sigma was arbitrary, we could just as well have chosen to looked at the subtree of elements starting with tau.",
    "input_data": {
      "input_text": "But the choice for sigma was arbitrary, we could just as well have chosen to looked at the subtree of elements starting with tau.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mango-stream-network-twenty.mp3",
    "word_boundaries": [
      {
        "audio_offset": 11899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12299999,
        "text_offset": 4,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "text_offset": 8,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 15,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17400000,
        "text_offset": 19,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 25,
        "word_length": 4,
        "text": " was",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25900000,
        "text_offset": 29,
        "word_length": 10,
        "text": " arbitrary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30599999,
        "text_offset": 39,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30999999,
        "text_offset": 40,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 43,
        "word_length": 6,
        "text": " could",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34199999,
        "text_offset": 49,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36699999,
        "text_offset": 54,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38600000,
        "text_offset": 57,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 62,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 67,
        "word_length": 7,
        "text": " chosen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 74,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46299998,
        "text_offset": 77,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999999,
        "text_offset": 82,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 85,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 89,
        "word_length": 4,
        "text": " sub",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 93,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 94,
        "word_length": 1,
        "text": "t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 95,
        "word_length": 3,
        "text": "rie",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 98,
        "word_length": 2,
        "text": "ve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 100,
        "word_length": 9,
        "text": " elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 109,
        "word_length": 9,
        "text": " starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 118,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 123,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 125,
        "word_length": 2,
        "text": "OW",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 127,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " But the choice for Sigma was arbitrary. We could just as well have chosen to look at the sub-trieve elements starting with TOW.",
    "final_audio": "mango-stream-network-twenty.mp3"
  },
  {
    "input_text": "So we also have that F2 is the union of tau inverse W tau and W tau inverse",
    "input_data": {
      "input_text": "So we also have that F2 is the union of tau inverse W tau and W tau inverse",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "pizza-single-carbon-ten.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9099999,
        "text_offset": 6,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14899999,
        "text_offset": 16,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 21,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 23,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 24,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 27,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 31,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 37,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30099998,
        "text_offset": 40,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33599998,
        "text_offset": 44,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 52,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 54,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 58,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 62,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 64,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 68,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46800000,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So we also have that F2 is the union of tau inverse W tau and W tau inverse.",
    "final_audio": "pizza-single-carbon-ten.mp3"
  },
  {
    "input_text": "Let's look at the original partition of F2 that we made.",
    "input_data": {
      "input_text": "Let's look at the original partition of F2 that we made.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mobile-diet-ack-fanta.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2899999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3900000,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5399999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "text_offset": 14,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8400000,
        "text_offset": 18,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 27,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 37,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16200000,
        "text_offset": 40,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17899999,
        "text_offset": 42,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799999,
        "text_offset": 43,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 48,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22099999,
        "text_offset": 51,
        "word_length": 5,
        "text": " made",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at the original partition of F2 that we made.",
    "final_audio": "mobile-diet-ack-fanta.mp3"
  },
  {
    "input_text": "Notice that the parts in the original partition are now disjointly used in the two new partitions that we have found.",
    "input_data": {
      "input_text": "Notice that the parts in the original partition are now disjointly used in the two new partitions that we have found.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "oven-uniform-north-comet.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8399999,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 7,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 12,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 16,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 22,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15299999,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 29,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 38,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "text_offset": 48,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24600000,
        "text_offset": 52,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 56,
        "word_length": 4,
        "text": " dis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399999,
        "text_offset": 60,
        "word_length": 5,
        "text": "joint",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 65,
        "word_length": 2,
        "text": "ly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 67,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799998,
        "text_offset": 72,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42199997,
        "text_offset": 75,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 79,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45299999,
        "text_offset": 83,
        "word_length": 4,
        "text": " new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 87,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399999,
        "text_offset": 92,
        "word_length": 6,
        "text": "itions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 98,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 103,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 106,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 111,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52800000,
        "text_offset": 117,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice that the parts in the original partition are now disjointly used in the two new partitions that we have found.",
    "final_audio": "oven-uniform-north-comet.mp3"
  },
  {
    "input_text": "So what we have now is called a paradoxical decomposition. We have split the free group F2 into five parts, took four of them and sort of shifted two of those parts to create two copies of F2. This is called a paradoxical decomposition",
    "input_data": {
      "input_text": "So what we have now is called a paradoxical decomposition. We have split the free group F2 into five parts, took four of them and sort of shifted two of those parts to create two copies of F2. This is called a paradoxical decomposition",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "ceiling-georgia-mars-bluebird.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2899999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4199999,
        "text_offset": 3,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9299999,
        "text_offset": 16,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 20,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13799999,
        "text_offset": 23,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 30,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19399999,
        "text_offset": 32,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 40,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 44,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37300000,
        "text_offset": 58,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 59,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 62,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199999,
        "text_offset": 67,
        "word_length": 6,
        "text": " split",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60399999,
        "text_offset": 77,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61399998,
        "text_offset": 82,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62799999,
        "text_offset": 88,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63699998,
        "text_offset": 90,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65499999,
        "text_offset": 91,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66999998,
        "text_offset": 96,
        "word_length": 5,
        "text": " five",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70999999,
        "text_offset": 101,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72299997,
        "text_offset": 107,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199997,
        "text_offset": 108,
        "word_length": 5,
        "text": " took",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76399998,
        "text_offset": 113,
        "word_length": 5,
        "text": " four",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77599997,
        "text_offset": 118,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79599997,
        "text_offset": 121,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799995,
        "text_offset": 126,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84199995,
        "text_offset": 130,
        "word_length": 5,
        "text": " sort",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "text_offset": 135,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89499998,
        "text_offset": 138,
        "word_length": 8,
        "text": " shifted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94599995,
        "text_offset": 146,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96999998,
        "text_offset": 150,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98199996,
        "text_offset": 153,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99499998,
        "text_offset": 159,
        "word_length": 6,
        "text": " parts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199998,
        "text_offset": 165,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108599996,
        "text_offset": 168,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110999999,
        "text_offset": 175,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112999997,
        "text_offset": 179,
        "word_length": 7,
        "text": " copies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114899997,
        "text_offset": 186,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117099995,
        "text_offset": 189,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118999996,
        "text_offset": 191,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122899994,
        "text_offset": 192,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 193,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 201,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 208,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 210,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 218,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 222,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125600000,
        "text_offset": 236,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So what we have now is called a paradoxical decomposition. We have split the free group F2 into five parts, took four of them and sort of shifted two of these parts to create two copies of F2. This is called a paradoxical decomposition.",
    "final_audio": "ceiling-georgia-mars-bluebird.mp3"
  },
  {
    "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "You might wonder how this paradoxical decomposition of the Free Group will help us in proving the Banach-Tarski paradox.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "missouri-music-sweet-lemon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 4,
        "word_length": 6,
        "text": " might",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 10,
        "word_length": 7,
        "text": " wonder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 17,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 21,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 26,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21099999,
        "text_offset": 34,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 38,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29999998,
        "text_offset": 55,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 59,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33999998,
        "text_offset": 64,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 70,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799998,
        "text_offset": 75,
        "word_length": 5,
        "text": " help",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 80,
        "word_length": 3,
        "text": " us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 83,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 86,
        "word_length": 10,
        "text": " improving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 96,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 100,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 104,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 107,
        "word_length": 3,
        "text": "ats",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 110,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 112,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 120,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " You might wonder how this paradoxical decomposition of the free group will help us in improving the Banachatsky paradox.",
    "final_audio": "missouri-music-sweet-lemon.mp3"
  },
  {
    "input_text": "We can transfer the paradoxical decomposition of the Free Group to the points of the unit sphere almost directly using independent rotations that behave identically to the Free Group. Sigma, tau, and their products will then represent certain rotations. We will see these soon",
    "input_data": {
      "input_text": "We can transfer the paradoxical decomposition of the Free Group to the points of the unit sphere almost directly using independent rotations that behave identically to the Free Group. Sigma, tau, and their products will then represent certain rotations. We will see these soon",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "carpet-stairway-music-bacon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 14199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14499999,
        "text_offset": 3,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 7,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 16,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 20,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25900000,
        "text_offset": 28,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 32,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 46,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 49,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 53,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 58,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "text_offset": 64,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44599997,
        "text_offset": 67,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 71,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 77,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 80,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 84,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54399998,
        "text_offset": 89,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64900000,
        "text_offset": 96,
        "word_length": 7,
        "text": " almost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 103,
        "word_length": 9,
        "text": " directly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199999,
        "text_offset": 112,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399996,
        "text_offset": 118,
        "word_length": 12,
        "text": " independent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74899997,
        "text_offset": 130,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84000000,
        "text_offset": 140,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 145,
        "word_length": 7,
        "text": " behave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199998,
        "text_offset": 152,
        "word_length": 6,
        "text": " ident",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94099993,
        "text_offset": 158,
        "word_length": 6,
        "text": "ically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97300000,
        "text_offset": 164,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99600000,
        "text_offset": 167,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100899996,
        "text_offset": 171,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103799996,
        "text_offset": 176,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107399997,
        "text_offset": 182,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111699995,
        "text_offset": 183,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113599996,
        "text_offset": 189,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116599998,
        "text_offset": 190,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120999999,
        "text_offset": 194,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123399996,
        "text_offset": 198,
        "word_length": 6,
        "text": " their",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799993,
        "text_offset": 204,
        "word_length": 9,
        "text": " products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129799995,
        "text_offset": 213,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132599997,
        "text_offset": 218,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136399998,
        "text_offset": 223,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140399999,
        "text_offset": 233,
        "word_length": 8,
        "text": " certain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144599995,
        "text_offset": 241,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147399997,
        "text_offset": 251,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150900001,
        "text_offset": 252,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154300003,
        "text_offset": 255,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157599997,
        "text_offset": 260,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158499999,
        "text_offset": 264,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159399995,
        "text_offset": 269,
        "word_length": 5,
        "text": " soon",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159699997,
        "text_offset": 274,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We can transfer the paradoxical decomposition of the free group to the point of the unit sphere almost directly using independent rotations that behave identically to the free group. Sigma, tau and their products will then represent certain rotations. We will see this soon.",
    "final_audio": "carpet-stairway-music-bacon.mp3"
  },
  {
    "input_text": "You might notice that the paradoxical decomposition is not of the whole sphere; this is because we need to remove a set of problematic points D from the sphere to make the transfer work. We will see later exactly which points these are.",
    "input_data": {
      "input_text": "You might notice that the paradoxical decomposition is not of the whole sphere; this is because we need to remove a set of problematic points D from the sphere to make the transfer work. We will see later exactly which points these are.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hawaii-green-indigo-yankee.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 4,
        "word_length": 6,
        "text": " might",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 10,
        "word_length": 7,
        "text": " notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9899999,
        "text_offset": 17,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 22,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 26,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 34,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 38,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23700000,
        "text_offset": 52,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24699999,
        "text_offset": 55,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26499999,
        "text_offset": 59,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27499998,
        "text_offset": 62,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 66,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 72,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33700000,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 80,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 85,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 88,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50199999,
        "text_offset": 96,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 99,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 104,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51999998,
        "text_offset": 107,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54399998,
        "text_offset": 114,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55899999,
        "text_offset": 116,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 120,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58899998,
        "text_offset": 123,
        "word_length": 12,
        "text": " problematic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64699997,
        "text_offset": 135,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68599998,
        "text_offset": 142,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72899997,
        "text_offset": 144,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76499998,
        "text_offset": 149,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77799997,
        "text_offset": 153,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83499999,
        "text_offset": 160,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85199995,
        "text_offset": 163,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86799998,
        "text_offset": 168,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 172,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91700000,
        "text_offset": 181,
        "word_length": 5,
        "text": " work",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93799996,
        "text_offset": 186,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 187,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 190,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 195,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 199,
        "word_length": 6,
        "text": " later",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 205,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 213,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 219,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 225,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 232,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 236,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " You might notice that the paradoxical decomposition is not of the whole sphere. This is because we need to remove a set of problematic points d from the sphere to make the transfer work. We will see later exactly which these points are.",
    "final_audio": "hawaii-green-indigo-yankee.mp3"
  },
  {
    "input_text": "You will also see that there is a subset M of the unit sphere that we will apply those rotations to. This is not just any set; we will need to pick it carefully so that this transfer works.",
    "input_data": {
      "input_text": "You will also see that there is a subset M of the unit sphere that we will apply those rotations to. This is not just any set; we will need to pick it carefully so that this transfer works.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "pizza-arkansas-october-winter.mp3",
    "word_boundaries": [
      {
        "audio_offset": 999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 4,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 9,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13700000,
        "text_offset": 14,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 18,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18099999,
        "text_offset": 23,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 29,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20900000,
        "text_offset": 32,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 34,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27200000,
        "text_offset": 41,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 43,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 46,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36499999,
        "text_offset": 50,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 55,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 62,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43899998,
        "text_offset": 67,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44900000,
        "text_offset": 70,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46699998,
        "text_offset": 75,
        "word_length": 6,
        "text": " apply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50499999,
        "text_offset": 81,
        "word_length": 6,
        "text": " those",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56699998,
        "text_offset": 87,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59699997,
        "text_offset": 97,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 100,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 101,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 106,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 109,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 113,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 118,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 122,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 126,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 127,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 130,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 135,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 140,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 143,
        "word_length": 5,
        "text": " pick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 148,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 151,
        "word_length": 10,
        "text": " carefully",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 161,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 164,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 169,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 173,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 182,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 188,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " You will also see that there is a subset M of the unit sphere that we will apply those rotations to. This is not just any set, we will need to pick it carefully so that the transfer works.",
    "final_audio": "pizza-arkansas-october-winter.mp3"
  },
  {
    "input_text": "As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidian group E_3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
    "input_data": {
      "input_text": "As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidian group E_3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fanta-moon-aspen-red.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 3,
        "word_length": 10,
        "text": " mentioned",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 13,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 21,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 24,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20899999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22299998,
        "text_offset": 37,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 51,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31299999,
        "text_offset": 56,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33199998,
        "text_offset": 60,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 65,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37799998,
        "text_offset": 71,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999997,
        "text_offset": 72,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48900001,
        "text_offset": 75,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 80,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 84,
        "word_length": 12,
        "text": " independent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51499998,
        "text_offset": 96,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59399998,
        "text_offset": 106,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 109,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62599997,
        "text_offset": 113,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62999997,
        "text_offset": 115,
        "word_length": 2,
        "text": "uc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 117,
        "word_length": 4,
        "text": "lide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 121,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399998,
        "text_offset": 123,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74999997,
        "text_offset": 129,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77999999,
        "text_offset": 131,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81999998,
        "text_offset": 132,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83799996,
        "text_offset": 135,
        "word_length": 5,
        "text": " form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86399998,
        "text_offset": 140,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88599996,
        "text_offset": 142,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91599998,
        "text_offset": 148,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96599998,
        "text_offset": 158,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98199996,
        "text_offset": 161,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100799999,
        "text_offset": 167,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103799996,
        "text_offset": 171,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107499995,
        "text_offset": 181,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115399994,
        "text_offset": 182,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117399997,
        "text_offset": 185,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119199995,
        "text_offset": 189,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121799998,
        "text_offset": 194,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124399995,
        "text_offset": 203,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126799998,
        "text_offset": 207,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132199997,
        "text_offset": 221,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133399996,
        "text_offset": 225,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134799995,
        "text_offset": 229,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137399997,
        "text_offset": 234,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139899997,
        "text_offset": 240,
        "word_length": 5,
        "text": " onto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143899993,
        "text_offset": 245,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145199995,
        "text_offset": 249,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148599996,
        "text_offset": 256,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 151299996,
        "text_offset": 258,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 259,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 262,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 271,
        "word_length": 6,
        "text": " those",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 277,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 287,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 290,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 294,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 301,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " As mentioned before, to transfer the decomposition from the free group, we need two independent rotations in the Euclidean group E3 to form a group generated by these two rotations. We can then transfer the decomposition for the free group onto the sphere S2 by applying those rotations to the sphere.",
    "final_audio": "fanta-moon-aspen-red.mp3"
  },
  {
    "input_text": "Let's look at an example of two such rotations. These are the rotations around the x and y axes by an angle of the arc cosine of one third. We will call the rotation around the x-axis sigma, and the rotation along the y-axis tau.",
    "input_data": {
      "input_text": "Let's look at an example of two such rotations. These are the rotations around the x and y axes by an angle of the arc cosine of one third. We will call the rotation around the x-axis sigma, and the rotation along the y-axis tau.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "utah-lactose-solar-gee.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3599999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 14,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899998,
        "text_offset": 17,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899998,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 28,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 32,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399998,
        "text_offset": 37,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 47,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 48,
        "word_length": 6,
        "text": " These",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 54,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799998,
        "text_offset": 58,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 62,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999998,
        "text_offset": 72,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 79,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 83,
        "word_length": 2,
        "text": " x",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47399997,
        "text_offset": 85,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48599998,
        "text_offset": 89,
        "word_length": 2,
        "text": " y",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 91,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52500000,
        "text_offset": 92,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199996,
        "text_offset": 96,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199996,
        "text_offset": 99,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61799998,
        "text_offset": 102,
        "word_length": 6,
        "text": " angle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63999998,
        "text_offset": 108,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65999999,
        "text_offset": 111,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "text_offset": 115,
        "word_length": 4,
        "text": " arc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71999998,
        "text_offset": 119,
        "word_length": 7,
        "text": " cosine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73399996,
        "text_offset": 126,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75699996,
        "text_offset": 129,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 131,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82199997,
        "text_offset": 132,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84599995,
        "text_offset": 137,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86300001,
        "text_offset": 138,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 141,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " call",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 151,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 155,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96399998,
        "text_offset": 164,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98399996,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100799999,
        "text_offset": 175,
        "word_length": 2,
        "text": " x",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102799997,
        "text_offset": 177,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105199995,
        "text_offset": 178,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107599997,
        "text_offset": 182,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 188,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 193,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 202,
        "word_length": 6,
        "text": " along",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 208,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 212,
        "word_length": 2,
        "text": " y",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 214,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 215,
        "word_length": 4,
        "text": "axis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 219,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 223,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at an example of two such rotations. These are the rotations around the x and y-axis by an angle of the arc cosine of 1-third. We will call the rotation around the x-axis sigma that rotation along the y-axis tau.",
    "final_audio": "utah-lactose-solar-gee.mp3"
  },
  {
    "input_text": "We will refer to this group of rotations as G sigma tau",
    "input_data": {
      "input_text": "We will refer to this group of rotations as G sigma tau",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "earth-ten-december-double.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4599999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 8,
        "word_length": 6,
        "text": " refer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 14,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 17,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 22,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 28,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17399999,
        "text_offset": 31,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25299998,
        "text_offset": 41,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28400000,
        "text_offset": 44,
        "word_length": 2,
        "text": " G",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 46,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399998,
        "text_offset": 52,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will refer to this group of rotations as G sigma tau.",
    "final_audio": "earth-ten-december-double.mp3"
  },
  {
    "input_text": "Let's quickly look at what these two rotations look like by seeing how they apply to the unit sphere.",
    "input_data": {
      "input_text": "Let's quickly look at what these two rotations look like by seeing how they apply to the unit sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "ack-california-montana-yellow.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2499999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3399999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 6,
        "word_length": 8,
        "text": " quickly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7099999,
        "text_offset": 14,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9899999,
        "text_offset": 19,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11200000,
        "text_offset": 22,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 27,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 33,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 37,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23499999,
        "text_offset": 47,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26399999,
        "text_offset": 52,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 57,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499999,
        "text_offset": 60,
        "word_length": 7,
        "text": " seeing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 67,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34899998,
        "text_offset": 71,
        "word_length": 5,
        "text": " they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36499999,
        "text_offset": 76,
        "word_length": 6,
        "text": " apply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39299999,
        "text_offset": 82,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41099998,
        "text_offset": 85,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42099997,
        "text_offset": 89,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299999,
        "text_offset": 94,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45099997,
        "text_offset": 101,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's quickly look at what these two rotations look like by seeing how they apply to the unit sphere.",
    "final_audio": "ack-california-montana-yellow.mp3"
  },
  {
    "input_text": "The rotation sigma looks as follows when applied to the sphere",
    "input_data": {
      "input_text": "The rotation sigma looks as follows when applied to the sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "december-south-august-nevada.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 4,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4599999,
        "text_offset": 13,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 19,
        "word_length": 6,
        "text": " looks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 25,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17400000,
        "text_offset": 28,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20600000,
        "text_offset": 36,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22099999,
        "text_offset": 41,
        "word_length": 8,
        "text": " applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 49,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26799999,
        "text_offset": 52,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 56,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30599999,
        "text_offset": 63,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The rotation sigma looks as follows when applied to the sphere.",
    "final_audio": "december-south-august-nevada.mp3"
  },
  {
    "input_text": "The rotation tau looks as follows when applied to the sphere",
    "input_data": {
      "input_text": "The rotation tau looks as follows when applied to the sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "johnny-social-utah-nitrogen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 13,
        "word_length": 6,
        "text": " towel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 19,
        "word_length": 6,
        "text": " looks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 25,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 28,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20900000,
        "text_offset": 36,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21899999,
        "text_offset": 41,
        "word_length": 8,
        "text": " applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 49,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25499999,
        "text_offset": 52,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 56,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28400000,
        "text_offset": 63,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The rotation towel looks as follows when applied to the sphere.",
    "final_audio": "johnny-social-utah-nitrogen.mp3"
  },
  {
    "input_text": "Let's see how we can create the set M by dividing the sphere by the group of rotations. We will make points equivalent whenever they can be transformed into each other using rotations from G(sigma, tau)",
    "input_data": {
      "input_text": "Let's see how we can create the set M by dividing the sphere by the group of rotations. We will make points equivalent whenever they can be transformed into each other using rotations from G(sigma, tau)",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "echo-pasta-table-maine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6199999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 10,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 14,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26399999,
        "text_offset": 17,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 21,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29899999,
        "text_offset": 32,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31200000,
        "text_offset": 36,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 38,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33899999,
        "text_offset": 41,
        "word_length": 9,
        "text": " dividing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 50,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36799999,
        "text_offset": 54,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 61,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 64,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40499999,
        "text_offset": 68,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42599999,
        "text_offset": 74,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 77,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53799998,
        "text_offset": 87,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600002,
        "text_offset": 88,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800003,
        "text_offset": 91,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62600002,
        "text_offset": 96,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65500001,
        "text_offset": 101,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65900001,
        "text_offset": 107,
        "word_length": 11,
        "text": " equivalent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66200001,
        "text_offset": 118,
        "word_length": 9,
        "text": " whenever",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000001,
        "text_offset": 127,
        "word_length": 5,
        "text": " they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68400001,
        "text_offset": 132,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69200000,
        "text_offset": 136,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 139,
        "word_length": 12,
        "text": " transformed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "text_offset": 151,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70100002,
        "text_offset": 156,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76599998,
        "text_offset": 161,
        "word_length": 6,
        "text": " other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85900001,
        "text_offset": 167,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 173,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 183,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88899998,
        "text_offset": 188,
        "word_length": 2,
        "text": " G",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112799997,
        "text_offset": 190,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117700004,
        "text_offset": 196,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 200,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see how we can create the set M by dividing the sphere by the group of rotations. We will make point equivalent whenever they can be transformed into each other using rotations from G sigma tau.",
    "final_audio": "echo-pasta-table-maine.mp3"
  },
  {
    "input_text": "Similarly to the construction of the non-measurable set, we will look at equivalence classes over rotations. The only differences are that we are now looking at three-dimensional rotations instead of two, and that we are not looking at rational rotations, but at rotations from the group generated by sigma and tau.",
    "input_data": {
      "input_text": "Similarly to the construction of the non-measurable set, we will look at equivalence classes over rotations. The only differences are that we are now looking at three-dimensional rotations instead of two, and that we are not looking at rational rotations, but at rotations from the group generated by sigma and tau.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "washington-carbon-paris-edward.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7999999,
        "text_offset": 0,
        "word_length": 10,
        "text": " Similarly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 10,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 17,
        "word_length": 13,
        "text": " construction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 30,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 33,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 37,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22799999,
        "text_offset": 41,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22799999,
        "text_offset": 42,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 44,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 46,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34699999,
        "text_offset": 56,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 57,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 60,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 65,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799999,
        "text_offset": 70,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 73,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42799997,
        "text_offset": 81,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 85,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50999999,
        "text_offset": 93,
        "word_length": 5,
        "text": " over",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53899998,
        "text_offset": 98,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63999998,
        "text_offset": 108,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "text_offset": 109,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66699998,
        "text_offset": 113,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199997,
        "text_offset": 118,
        "word_length": 12,
        "text": " differences",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74599997,
        "text_offset": 130,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77599999,
        "text_offset": 134,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81700000,
        "text_offset": 139,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82699995,
        "text_offset": 142,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83899998,
        "text_offset": 146,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85499997,
        "text_offset": 150,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92799997,
        "text_offset": 158,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98599996,
        "text_offset": 161,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101399998,
        "text_offset": 167,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102499995,
        "text_offset": 168,
        "word_length": 11,
        "text": "dimensional",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103299994,
        "text_offset": 179,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103499999,
        "text_offset": 189,
        "word_length": 8,
        "text": " instead",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105399994,
        "text_offset": 197,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107399997,
        "text_offset": 200,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "text_offset": 204,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111099996,
        "text_offset": 205,
        "word_length": 11,
        "text": "dimensional",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115199995,
        "text_offset": 216,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120399999,
        "text_offset": 217,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122099995,
        "text_offset": 221,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123899993,
        "text_offset": 226,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 229,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126900000,
        "text_offset": 233,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129199995,
        "text_offset": 237,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130999999,
        "text_offset": 245,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132599997,
        "text_offset": 248,
        "word_length": 9,
        "text": " rational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135199995,
        "text_offset": 257,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153299994,
        "text_offset": 267,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153999996,
        "text_offset": 271,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156399993,
        "text_offset": 274,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157199997,
        "text_offset": 284,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157599997,
        "text_offset": 289,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158299999,
        "text_offset": 293,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158399991,
        "text_offset": 299,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158599991,
        "text_offset": 309,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158599991,
        "text_offset": 312,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159999990,
        "text_offset": 318,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160199995,
        "text_offset": 322,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160399990,
        "text_offset": 326,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Similarly to the construction of the non-measurable set, we will look at equivalence classes over rotations. The only differences are that we are now looking at three-dimensional rotations instead of two-dimensional, and that we are not looking at rational rotations but at rotations from the group generated by sigma and tau.",
    "final_audio": "washington-carbon-paris-edward.mp3"
  },
  {
    "input_text": "Let's once again look at how the equivalence classes are formed; we apply rotations from G(sigma, tau) to it. Each color here represents a unique equivalence class. Of course, as was the case with the non-measurable set and the tree of the free group, this is an infinite process of which we can only show a finite part. This is because, to get the equivalence class of any particular point, we would need to apply ALL rotations from the group G(tau, sigma) to it; hopefully these finite examples do illustrate how that would be done. The lines from the origin to the points are there to make it easier to see how the points are rotating.",
    "input_data": {
      "input_text": "Let's once again look at how the equivalence classes are formed; we apply rotations from G(sigma, tau) to it. Each color here represents a unique equivalence class. Of course, as was the case with the non-measurable set and the tree of the free group, this is an infinite process of which we can only show a finite part. This is because, to get the equivalence class of any particular point, we would need to apply ALL rotations from the group G(tau, sigma) to it; hopefully these finite examples do illustrate how that would be done. The lines from the origin to the points are there to make it easier to see how the points are rotating.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "friend-carolina-bulldog-twenty.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2699999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5199999,
        "text_offset": 6,
        "word_length": 5,
        "text": " once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 11,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 17,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 22,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13499999,
        "text_offset": 25,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 29,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 33,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 41,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 53,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599998,
        "text_offset": 57,
        "word_length": 7,
        "text": " formed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49600000,
        "text_offset": 65,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49600000,
        "text_offset": 68,
        "word_length": 6,
        "text": " apply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50699999,
        "text_offset": 74,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52199997,
        "text_offset": 84,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54099998,
        "text_offset": 89,
        "word_length": 2,
        "text": " g",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57400000,
        "text_offset": 91,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60399997,
        "text_offset": 97,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64299998,
        "text_offset": 101,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65399999,
        "text_offset": 104,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 107,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77599997,
        "text_offset": 108,
        "word_length": 5,
        "text": " Each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79099996,
        "text_offset": 113,
        "word_length": 6,
        "text": " color",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 119,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84599995,
        "text_offset": 124,
        "word_length": 11,
        "text": " represents",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91300001,
        "text_offset": 135,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93599996,
        "text_offset": 137,
        "word_length": 7,
        "text": " unique",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95299997,
        "text_offset": 144,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97599997,
        "text_offset": 152,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100499997,
        "text_offset": 156,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103899998,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115199995,
        "text_offset": 163,
        "word_length": 3,
        "text": " Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115799999,
        "text_offset": 166,
        "word_length": 7,
        "text": " course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116799993,
        "text_offset": 173,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117799997,
        "text_offset": 174,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120099997,
        "text_offset": 177,
        "word_length": 4,
        "text": " was",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120199995,
        "text_offset": 181,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120999994,
        "text_offset": 185,
        "word_length": 5,
        "text": " case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122999997,
        "text_offset": 190,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123799996,
        "text_offset": 195,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124299993,
        "text_offset": 199,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124399995,
        "text_offset": 203,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135499997,
        "text_offset": 204,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135499997,
        "text_offset": 206,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135499997,
        "text_offset": 208,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147500000,
        "text_offset": 214,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149299998,
        "text_offset": 218,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 151599998,
        "text_offset": 222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152300000,
        "text_offset": 226,
        "word_length": 5,
        "text": " tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153099999,
        "text_offset": 231,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153399996,
        "text_offset": 234,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153799996,
        "text_offset": 238,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154899997,
        "text_offset": 243,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156199994,
        "text_offset": 249,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163500003,
        "text_offset": 250,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164700002,
        "text_offset": 255,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166299991,
        "text_offset": 258,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168299999,
        "text_offset": 261,
        "word_length": 9,
        "text": " infinite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170599994,
        "text_offset": 270,
        "word_length": 8,
        "text": " process",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177299995,
        "text_offset": 278,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178999996,
        "text_offset": 281,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181899995,
        "text_offset": 287,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182899990,
        "text_offset": 290,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184499988,
        "text_offset": 294,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186499996,
        "text_offset": 299,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188999996,
        "text_offset": 304,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190099992,
        "text_offset": 306,
        "word_length": 7,
        "text": " finite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192299995,
        "text_offset": 313,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196299991,
        "text_offset": 318,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209199995,
        "text_offset": 319,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209399995,
        "text_offset": 324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000001,
        "text_offset": 327,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216199998,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218699989,
        "text_offset": 338,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220199995,
        "text_offset": 342,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221599998,
        "text_offset": 346,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 223899993,
        "text_offset": 354,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 226299991,
        "text_offset": 358,
        "word_length": 6,
        "text": " class",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229499988,
        "text_offset": 364,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230799989,
        "text_offset": 367,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233199987,
        "text_offset": 371,
        "word_length": 11,
        "text": " particular",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238599996,
        "text_offset": 382,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242599992,
        "text_offset": 388,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 251799998,
        "text_offset": 389,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 251799998,
        "text_offset": 392,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399997,
        "text_offset": 398,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255599994,
        "text_offset": 403,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256299991,
        "text_offset": 406,
        "word_length": 6,
        "text": " apply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261199998,
        "text_offset": 412,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265299997,
        "text_offset": 416,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270499992,
        "text_offset": 426,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272299985,
        "text_offset": 431,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272699995,
        "text_offset": 435,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 274999990,
        "text_offset": 441,
        "word_length": 2,
        "text": " g",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276799993,
        "text_offset": 443,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 280799999,
        "text_offset": 449,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 283899993,
        "text_offset": 453,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286499996,
        "text_offset": 456,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287399997,
        "text_offset": 459,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299799995,
        "text_offset": 460,
        "word_length": 10,
        "text": " Hopefully",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301599988,
        "text_offset": 470,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 302799987,
        "text_offset": 471,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304799995,
        "text_offset": 477,
        "word_length": 7,
        "text": " finite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308199987,
        "text_offset": 484,
        "word_length": 9,
        "text": " examples",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311799993,
        "text_offset": 493,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316799993,
        "text_offset": 496,
        "word_length": 11,
        "text": " illustrate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 320000000,
        "text_offset": 507,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322799987,
        "text_offset": 511,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 325200004,
        "text_offset": 516,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327099990,
        "text_offset": 522,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 328599987,
        "text_offset": 525,
        "word_length": 5,
        "text": " done",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 329799976,
        "text_offset": 530,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334900016,
        "text_offset": 531,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 340600013,
        "text_offset": 535,
        "word_length": 8,
        "text": " lengths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349200019,
        "text_offset": 543,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 351700000,
        "text_offset": 548,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 353600025,
        "text_offset": 552,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 355800018,
        "text_offset": 559,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357700023,
        "text_offset": 562,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360700016,
        "text_offset": 566,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362900009,
        "text_offset": 573,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365700016,
        "text_offset": 577,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 368400020,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400020,
        "text_offset": 586,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000003,
        "text_offset": 591,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379100036,
        "text_offset": 594,
        "word_length": 7,
        "text": " easier",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383400020,
        "text_offset": 601,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800025,
        "text_offset": 604,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391400012,
        "text_offset": 608,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 392700023,
        "text_offset": 612,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 394700031,
        "text_offset": 616,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 394900016,
        "text_offset": 623,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395300006,
        "text_offset": 627,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395600013,
        "text_offset": 636,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's once again look at how the equivalence classes are formed. We apply rotations from g sigma tau to it. Each color here represents a unique equivalence class. Of course, as was the case with the non-measurable set and the tree of the free group, this is an infinite process of which we can only show a finite part. This is because to get the equivalence class of any particular point, we would need to apply all rotations from the group g sigma tau to it. Hopefully, these finite examples do illustrate how that would be done. The lengths from the origin to the points are there to make it easier to see how the points are rotating.",
    "final_audio": "friend-carolina-bulldog-twenty.mp3"
  },
  {
    "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
    "input_data": {
      "input_text": "Now that we've seen how we can create equivalence classes over the group of rotations G(sigma, tau), we can create the set $M$ identically to how we did it before.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "network-kilo-dakota-coffee.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 4,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 9,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 12,
        "word_length": 3,
        "text": "'ve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13399999,
        "text_offset": 15,
        "word_length": 5,
        "text": " seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 20,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 24,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 27,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20899999,
        "text_offset": 31,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23799998,
        "text_offset": 38,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25699999,
        "text_offset": 46,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 50,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31599999,
        "text_offset": 58,
        "word_length": 5,
        "text": " over",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 63,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 67,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 73,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 76,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 86,
        "word_length": 2,
        "text": " G",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 88,
        "word_length": 8,
        "text": " segment",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 96,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 100,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 103,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 107,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 114,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 119,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 122,
        "word_length": 2,
        "text": " m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 124,
        "word_length": 6,
        "text": " ident",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 130,
        "word_length": 6,
        "text": "ically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 136,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 139,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 143,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 146,
        "word_length": 4,
        "text": " did",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 150,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 153,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400000,
        "text_offset": 160,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now that we've seen how we can create equivalence classes over the group of rotations G segment how we can create this at m identically to how we did it before.",
    "final_audio": "network-kilo-dakota-coffee.mp3"
  },
  {
    "input_text": "We look at all the equivalence classes.",
    "input_data": {
      "input_text": "We look at all the equivalence classes.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "september-gee-yankee-fillet.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 3,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 8,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 11,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799998,
        "text_offset": 19,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899999,
        "text_offset": 27,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 31,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25599999,
        "text_offset": 39,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We look at all the equivalence classes.",
    "final_audio": "september-gee-yankee-fillet.mp3"
  },
  {
    "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
    "input_data": {
      "input_text": "Now, again by the Axiom of Choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "washington-delta-green-lithium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4799999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4999999,
        "text_offset": 5,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5299999,
        "text_offset": 11,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5999999,
        "text_offset": 14,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 18,
        "word_length": 2,
        "text": " X",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 20,
        "word_length": 1,
        "text": "M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 21,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27499999,
        "text_offset": 24,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30499999,
        "text_offset": 31,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30599999,
        "text_offset": 32,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31399998,
        "text_offset": 35,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32199999,
        "text_offset": 39,
        "word_length": 5,
        "text": " pick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33199999,
        "text_offset": 44,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 52,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399998,
        "text_offset": 56,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38999999,
        "text_offset": 62,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40499998,
        "text_offset": 67,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299999,
        "text_offset": 72,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44099998,
        "text_offset": 75,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45399999,
        "text_offset": 79,
        "word_length": 8,
        "text": " equival",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 87,
        "word_length": 4,
        "text": "ence",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 91,
        "word_length": 8,
        "text": " classes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55799999,
        "text_offset": 99,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58199999,
        "text_offset": 102,
        "word_length": 5,
        "text": " form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60399997,
        "text_offset": 107,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63299999,
        "text_offset": 111,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66399998,
        "text_offset": 115,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199996,
        "text_offset": 117,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, again by the XM of choice, we can pick exactly one point from each of the equivalence classes to form our set M.",
    "final_audio": "washington-delta-green-lithium.mp3"
  },
  {
    "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere. This results in the paradoxical decomposition of S2 minus D that we saw.",
    "input_data": {
      "input_text": "Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G(sigma, tau) gives the whole sphere. This results in the paradoxical decomposition of S2 minus D that we saw.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "idaho-zulu-kitten-six.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6399999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10899999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 5,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 9,
        "word_length": 10,
        "text": " different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 19,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21099999,
        "text_offset": 29,
        "word_length": 8,
        "text": " applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 37,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 40,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "text_offset": 42,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29899998,
        "text_offset": 47,
        "word_length": 3,
        "text": " no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999998,
        "text_offset": 50,
        "word_length": 8,
        "text": " overlap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 58,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39299999,
        "text_offset": 59,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 63,
        "word_length": 10,
        "text": " similarly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45499999,
        "text_offset": 73,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 76,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54999997,
        "text_offset": 83,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 84,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61599998,
        "text_offset": 93,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63599998,
        "text_offset": 97,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65499999,
        "text_offset": 100,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66499998,
        "text_offset": 104,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67799997,
        "text_offset": 114,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68999996,
        "text_offset": 119,
        "word_length": 2,
        "text": " G",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70399999,
        "text_offset": 121,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73099999,
        "text_offset": 122,
        "word_length": 1,
        "text": "S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76999998,
        "text_offset": 123,
        "word_length": 4,
        "text": "igma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76999998,
        "text_offset": 127,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78899998,
        "text_offset": 131,
        "word_length": 6,
        "text": " gives",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79499995,
        "text_offset": 137,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 141,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 147,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89799995,
        "text_offset": 154,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 155,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 160,
        "word_length": 8,
        "text": " results",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 168,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 175,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 183,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 187,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 201,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 204,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 206,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 207,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 213,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 215,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 220,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 223,
        "word_length": 4,
        "text": " saw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 227,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, two different rotations applied to M have no overlap, and similarly to before, applying all of the rotations from G-Sigma tau gives the whole sphere. This results in the paradoxical decomposition of S2 minus D that we saw.",
    "final_audio": "idaho-zulu-kitten-six.mp3"
  },
  {
    "input_text": "Let's look at that paradoxical decomposition again.",
    "input_data": {
      "input_text": "Let's look at that paradoxical decomposition again.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "harry-avocado-michigan-island.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5699999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 14,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 19,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13100000,
        "text_offset": 27,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14999999,
        "text_offset": 34,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 48,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22799998,
        "text_offset": 54,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at that paradox called decomposition again.",
    "final_audio": "harry-avocado-michigan-island.mp3"
  },
  {
    "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
    "input_data": {
      "input_text": "We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere, just gives the whole sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "don-quebec-mango-mississippi.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3399999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5199999,
        "text_offset": 3,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5499999,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7099999,
        "text_offset": 11,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 16,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 20,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 27,
        "word_length": 6,
        "text": " apart",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 33,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 36,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18699999,
        "text_offset": 40,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 45,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 49,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399999,
        "text_offset": 52,
        "word_length": 4,
        "text": " did",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 56,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30599999,
        "text_offset": 59,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32099999,
        "text_offset": 63,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 68,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38099999,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 75,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 78,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48799998,
        "text_offset": 81,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49299998,
        "text_offset": 84,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 85,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 88,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52999999,
        "text_offset": 93,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54299998,
        "text_offset": 98,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 101,
        "word_length": 6,
        "text": " apply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57599999,
        "text_offset": 107,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59199998,
        "text_offset": 111,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63599998,
        "text_offset": 121,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65299999,
        "text_offset": 124,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67199997,
        "text_offset": 128,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69599997,
        "text_offset": 135,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70899999,
        "text_offset": 138,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72399997,
        "text_offset": 142,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999999,
        "text_offset": 149,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 150,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 154,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 163,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 165,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 174,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 177,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 181,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 187,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 194,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 199,
        "word_length": 6,
        "text": " gives",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 205,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 209,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 215,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77600000,
        "text_offset": 222,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We want to take the sphere apart in the same way we did to the free group. To do so, we will need to apply the rotations to the points on the sphere. But applying a rotation to the whole sphere just gives the whole sphere.",
    "final_audio": "don-quebec-mango-mississippi.mp3"
  },
  {
    "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique. Actually, this set M and all its rotation will be non-measurable - that is why we talked about non-measurable sets before.",
    "input_data": {
      "input_text": "So, we will need to choose a subset M of the sphere, such that every rotation of that set is unique. Actually, this set M and all its rotation will be non-measurable - that is why we talked about non-measurable sets before.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "stairway-north-two-wisconsin.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4500000,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7999999,
        "text_offset": 6,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 16,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13099999,
        "text_offset": 19,
        "word_length": 7,
        "text": " choose",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 26,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 28,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 35,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22099999,
        "text_offset": 37,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 40,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399998,
        "text_offset": 44,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 51,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32899998,
        "text_offset": 57,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35099998,
        "text_offset": 62,
        "word_length": 6,
        "text": " every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 68,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42799999,
        "text_offset": 77,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 80,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 85,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 89,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51099998,
        "text_offset": 92,
        "word_length": 7,
        "text": " unique",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54799997,
        "text_offset": 99,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64899997,
        "text_offset": 100,
        "word_length": 9,
        "text": " Actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66399998,
        "text_offset": 109,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68799998,
        "text_offset": 110,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71199998,
        "text_offset": 115,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74399998,
        "text_offset": 119,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 121,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78799998,
        "text_offset": 125,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80799996,
        "text_offset": 129,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83499994,
        "text_offset": 133,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86799998,
        "text_offset": 142,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88400001,
        "text_offset": 147,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89599995,
        "text_offset": 150,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90599999,
        "text_offset": 154,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91099996,
        "text_offset": 155,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91799998,
        "text_offset": 157,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93599996,
        "text_offset": 159,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95899996,
        "text_offset": 165,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 166,
        "word_length": 5,
        "text": " That",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 171,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 174,
        "word_length": 4,
        "text": " why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 178,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 181,
        "word_length": 7,
        "text": " talked",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 188,
        "word_length": 6,
        "text": " about",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 194,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 198,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 199,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 201,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 203,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 209,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 214,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 221,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So we will need to choose a subset M of the sphere, such that every rotation of that set is unique. Actually, this set M and all its rotation will be non-measurable. That is why we talked about non-measurable sets before.",
    "final_audio": "stairway-north-two-wisconsin.mp3"
  },
  {
    "input_text": "We will do this by dividing the sphere based on the group of rotations. We will see how exactly we do that right now.",
    "input_data": {
      "input_text": "We will do this by dividing the sphere based on the group of rotations. We will see how exactly we do that right now.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fanta-asparagus-uncle-princess.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6399999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 8,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 11,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 16,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "text_offset": 19,
        "word_length": 9,
        "text": " dividing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23700000,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 32,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 39,
        "word_length": 6,
        "text": " based",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33099998,
        "text_offset": 45,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34199999,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399998,
        "text_offset": 52,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 61,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46599998,
        "text_offset": 71,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52100000,
        "text_offset": 72,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53500001,
        "text_offset": 75,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54500000,
        "text_offset": 80,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57300000,
        "text_offset": 84,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59700000,
        "text_offset": 92,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61300001,
        "text_offset": 96,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62799999,
        "text_offset": 99,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64599997,
        "text_offset": 102,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 107,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68299999,
        "text_offset": 113,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 117,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will do this by dividing the sphere based on the group of rotations. We will see exactly how we do that right now.",
    "final_audio": "fanta-asparagus-uncle-princess.mp3"
  },
  {
    "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
    "input_data": {
      "input_text": "So why does this paradoxical decomposition we found not work for all of the unit sphere S2?",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fish-ten-table-freddie.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3899999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6199999,
        "text_offset": 3,
        "word_length": 4,
        "text": " why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8100000,
        "text_offset": 7,
        "word_length": 5,
        "text": " does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9600000,
        "text_offset": 12,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 17,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14299999,
        "text_offset": 25,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 29,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 43,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 46,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 52,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31999999,
        "text_offset": 60,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33999999,
        "text_offset": 64,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35699998,
        "text_offset": 68,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 71,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 75,
        "word_length": 6,
        "text": " units",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41399998,
        "text_offset": 81,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42799999,
        "text_offset": 85,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44599997,
        "text_offset": 87,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45999999,
        "text_offset": 88,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So why does this paradoxical decomposition we found network for all of the units for S2?",
    "final_audio": "fish-ten-table-freddie.mp3"
  },
  {
    "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
    "input_data": {
      "input_text": "Although this equation is true; it does not qualify as a paradoxical decomposition.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "eight-illinois-butter-fix.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2999999,
        "text_offset": 0,
        "word_length": 9,
        "text": " Although",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 9,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 14,
        "word_length": 9,
        "text": " equation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11099999,
        "text_offset": 23,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13499999,
        "text_offset": 26,
        "word_length": 5,
        "text": " true",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 31,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 32,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799999,
        "text_offset": 35,
        "word_length": 5,
        "text": " does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21599999,
        "text_offset": 40,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 44,
        "word_length": 8,
        "text": " qualify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 52,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30699999,
        "text_offset": 55,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32199999,
        "text_offset": 57,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 65,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 72,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42300000,
        "text_offset": 86,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Although this equation is true, it does not qualify as a paradox called decomposition.",
    "final_audio": "eight-illinois-butter-fix.mp3"
  },
  {
    "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
    "input_data": {
      "input_text": "That's because in the transfer of the paradoxical decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradoxical decomposition. The highlighted equation shows the partition we want - but it's not a partition because the sets are not necessarily disjoint.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "monkey-lemon-cold-hydrogen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6699999,
        "text_offset": 0,
        "word_length": 5,
        "text": " That",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 7,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 15,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15099999,
        "text_offset": 18,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 22,
        "word_length": 9,
        "text": " transfer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 31,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 34,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22399998,
        "text_offset": 38,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25599999,
        "text_offset": 46,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28399999,
        "text_offset": 53,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 67,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34599999,
        "text_offset": 70,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 74,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37599998,
        "text_offset": 79,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 85,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41999998,
        "text_offset": 88,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 92,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46700000,
        "text_offset": 99,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 100,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56800000,
        "text_offset": 104,
        "word_length": 4,
        "text": " dis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56800000,
        "text_offset": 108,
        "word_length": 5,
        "text": "joint",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59500000,
        "text_offset": 113,
        "word_length": 4,
        "text": "ness",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59500000,
        "text_offset": 117,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59500000,
        "text_offset": 120,
        "word_length": 5,
        "text": " lost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 125,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 126,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199999,
        "text_offset": 132,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69599997,
        "text_offset": 135,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72799999,
        "text_offset": 145,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74399998,
        "text_offset": 148,
        "word_length": 6,
        "text": " speak",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76799998,
        "text_offset": 154,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77599997,
        "text_offset": 157,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78399999,
        "text_offset": 159,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82799997,
        "text_offset": 167,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89199995,
        "text_offset": 174,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92799997,
        "text_offset": 188,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99600000,
        "text_offset": 189,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100799999,
        "text_offset": 193,
        "word_length": 12,
        "text": " highlighted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104600000,
        "text_offset": 205,
        "word_length": 9,
        "text": " equation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109599995,
        "text_offset": 214,
        "word_length": 6,
        "text": " shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113399996,
        "text_offset": 220,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116199998,
        "text_offset": 224,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118799996,
        "text_offset": 234,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121599998,
        "text_offset": 237,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199998,
        "text_offset": 242,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128899998,
        "text_offset": 243,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130099997,
        "text_offset": 247,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131399998,
        "text_offset": 250,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132599997,
        "text_offset": 252,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133999996,
        "text_offset": 256,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135999994,
        "text_offset": 258,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141199998,
        "text_offset": 268,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143999996,
        "text_offset": 276,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 280,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 285,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 289,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 293,
        "word_length": 12,
        "text": " necessarily",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 305,
        "word_length": 4,
        "text": " dis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 309,
        "word_length": 5,
        "text": "joint",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 314,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " That's because in the transfer of the paradox called decomposition of the free group to the sphere, the disjointness is lost, which is necessary to speak of a paradox called decomposition. The highlighted equation shows the partition we want, but it's not a partition because the sets are not necessarily disjoint.",
    "final_audio": "monkey-lemon-cold-hydrogen.mp3"
  },
  {
    "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
    "input_data": {
      "input_text": "For example, the point (1, 0, 0) is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W(sigma)M.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "item-undress-sweet-tango.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 4,
        "word_length": 8,
        "text": " example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16899999,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "text_offset": 17,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 23,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 25,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24899998,
        "text_offset": 26,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27499998,
        "text_offset": 28,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 29,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33899999,
        "text_offset": 31,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35799999,
        "text_offset": 34,
        "word_length": 4,
        "text": " una",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46599998,
        "text_offset": 38,
        "word_length": 5,
        "text": "ffect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47099997,
        "text_offset": 43,
        "word_length": 2,
        "text": "ed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47399997,
        "text_offset": 45,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48299999,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 52,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 61,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 67,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 68,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 74,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 80,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 85,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 88,
        "word_length": 7,
        "text": " cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 98,
        "word_length": 5,
        "text": " sure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 103,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 108,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 111,
        "word_length": 4,
        "text": " isn",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 115,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 117,
        "word_length": 10,
        "text": " contained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 127,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 130,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 135,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 137,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 141,
        "word_length": 2,
        "text": " W",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 143,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 149,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " For example, the point 1, 0, 0 is unaffected by the rotation sigma, which means that we cannot be sure that it isn't contained in both M and W sigma.",
    "final_audio": "item-undress-sweet-tango.mp3"
  },
  {
    "input_text": "Let's see this visually.",
    "input_data": {
      "input_text": "Let's see this visually.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "blue-tennessee-whiskey-east.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5300000,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 10,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10300000,
        "text_offset": 15,
        "word_length": 9,
        "text": " visually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 24,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see this visually.",
    "final_audio": "blue-tennessee-whiskey-east.mp3"
  },
  {
    "input_text": "Applying sigma to the whole sphere looks like this. The red dot is the point (1, 0, 0), and as you can see, it is entirely unaffected by the rotation",
    "input_data": {
      "input_text": "Applying sigma to the whole sphere looks like this. The red dot is the point (1, 0, 0), and as you can see, it is entirely unaffected by the rotation",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "carbon-colorado-low-one.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " App",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9399999,
        "text_offset": 4,
        "word_length": 5,
        "text": "lying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12599999,
        "text_offset": 9,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 15,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 18,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18499999,
        "text_offset": 22,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18899999,
        "text_offset": 28,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 6,
        "text": " looks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 41,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 46,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33199998,
        "text_offset": 51,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299999,
        "text_offset": 52,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299999,
        "text_offset": 56,
        "word_length": 4,
        "text": " red",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 60,
        "word_length": 4,
        "text": " dot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 64,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999999,
        "text_offset": 67,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49600000,
        "text_offset": 71,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49800000,
        "text_offset": 73,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 74,
        "word_length": 3,
        "text": "100",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59099998,
        "text_offset": 77,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60699999,
        "text_offset": 81,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61799998,
        "text_offset": 84,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63399999,
        "text_offset": 88,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65399999,
        "text_offset": 92,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69599997,
        "text_offset": 96,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 97,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 100,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 103,
        "word_length": 9,
        "text": " entirely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 112,
        "word_length": 4,
        "text": " una",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 116,
        "word_length": 5,
        "text": "ffect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 121,
        "word_length": 2,
        "text": "ed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 123,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 126,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 130,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "text_offset": 139,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Applying sigma to the whole sphere looks like this. The red dot is the 0.100 and as you can see, it is entirely unaffected by the rotation.",
    "final_audio": "carbon-colorado-low-one.mp3"
  },
  {
    "input_text": "We are now ready to dive into the next step of the proof of the Banach-Tarski paradox, which will be to add the set D back to the decomposition.",
    "input_data": {
      "input_text": "We are now ready to dive into the next step of the proof of the Banach-Tarski paradox, which will be to add the set D back to the decomposition.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "north-bacon-fish-zebra.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 3,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 7,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13100000,
        "text_offset": 11,
        "word_length": 6,
        "text": " ready",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13100000,
        "text_offset": 17,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 20,
        "word_length": 5,
        "text": " dive",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 25,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 30,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19099999,
        "text_offset": 34,
        "word_length": 5,
        "text": " next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 39,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 44,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24900000,
        "text_offset": 47,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 51,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 57,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30399998,
        "text_offset": 60,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 64,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32299998,
        "text_offset": 68,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34499999,
        "text_offset": 71,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36899999,
        "text_offset": 73,
        "word_length": 3,
        "text": "ors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39599999,
        "text_offset": 76,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40499999,
        "text_offset": 78,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42099997,
        "text_offset": 86,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 87,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 93,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 98,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 101,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 104,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 108,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 110,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 114,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 116,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 121,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 124,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 128,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 142,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We are now ready to dive into the next step of the proof of the Banachhtorsky paradox, which will be to add a set d back to the decomposition.",
    "final_audio": "north-bacon-fish-zebra.mp3"
  },
  {
    "input_text": "Let's see the points of D. D has infinitely many points, so we show a finite subset of D to represent all of D.",
    "input_data": {
      "input_text": "Let's see the points of D. D has infinitely many points, so we show a finite subset of D to represent all of D.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "carbon-juliet-pasta-carolina.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2299999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3999999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5300000,
        "text_offset": 10,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6799999,
        "text_offset": 14,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 21,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 24,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12899999,
        "text_offset": 26,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 27,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 29,
        "word_length": 4,
        "text": " has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22399999,
        "text_offset": 33,
        "word_length": 11,
        "text": " infinitely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 44,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 49,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29099999,
        "text_offset": 56,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35299999,
        "text_offset": 57,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37599999,
        "text_offset": 60,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "text_offset": 63,
        "word_length": 6,
        "text": " shall",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40899999,
        "text_offset": 69,
        "word_length": 5,
        "text": " find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42200000,
        "text_offset": 74,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44300000,
        "text_offset": 79,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 86,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399999,
        "text_offset": 89,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50099999,
        "text_offset": 91,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51899998,
        "text_offset": 94,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "text_offset": 104,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57100000,
        "text_offset": 108,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58699998,
        "text_offset": 111,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59299998,
        "text_offset": 113,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see the points of D. D has infinitely many points, so we shall find that subset of D to represent all of D.",
    "final_audio": "carbon-juliet-pasta-carolina.mp3"
  },
  {
    "input_text": "Let's look at these points from above, so we can better see what we are doing.",
    "input_data": {
      "input_text": "Let's look at these points from above, so we can better see what we are doing.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "bravo-glucose-delta-dakota.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3099999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4299999,
        "text_offset": 6,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5999999,
        "text_offset": 11,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "text_offset": 14,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9099999,
        "text_offset": 20,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11100000,
        "text_offset": 27,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 32,
        "word_length": 6,
        "text": " above",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18099999,
        "text_offset": 38,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19499999,
        "text_offset": 41,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699998,
        "text_offset": 44,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 48,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23899999,
        "text_offset": 53,
        "word_length": 7,
        "text": " easily",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27999999,
        "text_offset": 60,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30499999,
        "text_offset": 64,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33499999,
        "text_offset": 69,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34499999,
        "text_offset": 72,
        "word_length": 3,
        "text": "'re",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35499999,
        "text_offset": 75,
        "word_length": 6,
        "text": " doing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's look at these points from above so we can more easily see what we're doing.",
    "final_audio": "bravo-glucose-delta-dakota.mp3"
  },
  {
    "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
    "input_data": {
      "input_text": "We know that there exists a rotation phi such that applying it to D repeatedly always gives unique points. For a proof, refer to the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "autumn-october-carbon-delaware.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 3,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 8,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 13,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15600000,
        "text_offset": 19,
        "word_length": 7,
        "text": " exists",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 26,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26999999,
        "text_offset": 28,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 37,
        "word_length": 4,
        "text": " phi",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30599999,
        "text_offset": 41,
        "word_length": 5,
        "text": " such",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32099999,
        "text_offset": 46,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33199999,
        "text_offset": 51,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34699999,
        "text_offset": 60,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35399999,
        "text_offset": 63,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 66,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37299998,
        "text_offset": 68,
        "word_length": 11,
        "text": " repeatedly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43799998,
        "text_offset": 79,
        "word_length": 7,
        "text": " always",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 86,
        "word_length": 6,
        "text": " gives",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 92,
        "word_length": 7,
        "text": " unique",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55099997,
        "text_offset": 99,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60799996,
        "text_offset": 106,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64299998,
        "text_offset": 110,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65499999,
        "text_offset": 112,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67799999,
        "text_offset": 118,
        "word_length": 6,
        "text": " refer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72999997,
        "text_offset": 124,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74999997,
        "text_offset": 127,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76599998,
        "text_offset": 131,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80599999,
        "text_offset": 138,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We know that there exists a rotation phi such that applying it to d repeatedly always gives unique points for a proof refer to the thesis.",
    "final_audio": "autumn-october-carbon-delaware.mp3"
  },
  {
    "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "input_data": {
      "input_text": "Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mountain-maine-arkansas-west.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6199999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 6,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8899999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 17,
        "word_length": 5,
        "text": " axes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 22,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 25,
        "word_length": 5,
        "text": " keep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17099999,
        "text_offset": 30,
        "word_length": 7,
        "text": " things",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 37,
        "word_length": 5,
        "text": " tidy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399999,
        "text_offset": 43,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899999,
        "text_offset": 46,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 51,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 55,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 57,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199998,
        "text_offset": 63,
        "word_length": 6,
        "text": " black",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42599999,
        "text_offset": 69,
        "word_length": 4,
        "text": " dot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "text_offset": 73,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46199998,
        "text_offset": 76,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "text_offset": 80,
        "word_length": 7,
        "text": " center",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 87,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " keep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 95,
        "word_length": 6,
        "text": " track",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 101,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 108,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 115,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's remove the axes to keep things tidy. We will add a small black dot in the center to keep track of the origin.",
    "final_audio": "mountain-maine-arkansas-west.mp3"
  },
  {
    "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "input_data": {
      "input_text": "We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nevada-asparagus-hamper-carpet.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6599999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 8,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13399999,
        "text_offset": 11,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 17,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 22,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599999,
        "text_offset": 31,
        "word_length": 4,
        "text": " phi",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27500000,
        "text_offset": 35,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30799999,
        "text_offset": 38,
        "word_length": 4,
        "text": " fix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599998,
        "text_offset": 42,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34099999,
        "text_offset": 46,
        "word_length": 4,
        "text": " gap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36999999,
        "text_offset": 50,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 53,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41399997,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43399999,
        "text_offset": 56,
        "word_length": 4,
        "text": " You",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47300000,
        "text_offset": 60,
        "word_length": 3,
        "text": "'re",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 63,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50499999,
        "text_offset": 67,
        "word_length": 7,
        "text": " seeing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53899998,
        "text_offset": 74,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 80,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61099998,
        "text_offset": 90,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62499997,
        "text_offset": 93,
        "word_length": 4,
        "text": " phi",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64899997,
        "text_offset": 97,
        "word_length": 6,
        "text": " being",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 103,
        "word_length": 10,
        "text": " generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69099998,
        "text_offset": 113,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will be using this rotation phi to fix the gap of D. You're now seeing these rotations of phi being generated.",
    "final_audio": "nevada-asparagus-hamper-carpet.mp3"
  },
  {
    "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
    "input_data": {
      "input_text": "We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them - also because it is quite mesmerizing to look at.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "johnny-high-maine-paris.mp3",
    "word_boundaries": [
      {
        "audio_offset": 11200000,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11699999,
        "text_offset": 3,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 8,
        "word_length": 7,
        "text": " define",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18299999,
        "text_offset": 19,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 23,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 25,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 28,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26899999,
        "text_offset": 32,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 38,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30999999,
        "text_offset": 41,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799999,
        "text_offset": 43,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799999,
        "text_offset": 48,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56799998,
        "text_offset": 52,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56799998,
        "text_offset": 58,
        "word_length": 9,
        "text": " repeated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799997,
        "text_offset": 67,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60799999,
        "text_offset": 77,
        "word_length": 4,
        "text": " phi",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61899998,
        "text_offset": 81,
        "word_length": 2,
        "text": " n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63399999,
        "text_offset": 83,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64899997,
        "text_offset": 86,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67499997,
        "text_offset": 88,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69899997,
        "text_offset": 89,
        "word_length": 6,
        "text": " Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72400000,
        "text_offset": 95,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74699997,
        "text_offset": 96,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999999,
        "text_offset": 99,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77099997,
        "text_offset": 103,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77999997,
        "text_offset": 105,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78899998,
        "text_offset": 110,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80199997,
        "text_offset": 114,
        "word_length": 9,
        "text": " infinite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84199995,
        "text_offset": 123,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86999998,
        "text_offset": 130,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88600001,
        "text_offset": 133,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92899999,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94599995,
        "text_offset": 146,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98299999,
        "text_offset": 148,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101399993,
        "text_offset": 149,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102199997,
        "text_offset": 152,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103399996,
        "text_offset": 155,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104599995,
        "text_offset": 160,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107199997,
        "text_offset": 165,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109599995,
        "text_offset": 170,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110699996,
        "text_offset": 172,
        "word_length": 4,
        "text": " lot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112199997,
        "text_offset": 176,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113399996,
        "text_offset": 179,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120199999,
        "text_offset": 184,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 189,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 197,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 200,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 203,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " mes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 213,
        "word_length": 3,
        "text": "mer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 216,
        "word_length": 5,
        "text": "izing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 221,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 224,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 229,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123600000,
        "text_offset": 232,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We will define the set E as the union of D with all these repeated rotations phi n of D. Again, we can't show the infinite number of rotations of D, so we will just show a lot of them also because it is quite mesmerizing to look at.",
    "final_audio": "johnny-high-maine-paris.mp3"
  },
  {
    "input_text": "Alright, let's continue with the proof.",
    "input_data": {
      "input_text": "Alright, let's continue with the proof.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "pip-undress-johnny-purple.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4999999,
        "text_offset": 0,
        "word_length": 8,
        "text": " Alright",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7199999,
        "text_offset": 8,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 9,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 13,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12199999,
        "text_offset": 15,
        "word_length": 9,
        "text": " continue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 24,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 29,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 33,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17799999,
        "text_offset": 39,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Alright, let's continue with the proof.",
    "final_audio": "pip-undress-johnny-purple.mp3"
  },
  {
    "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
    "input_data": {
      "input_text": "Notice now that we can play a smart trick: if we rotate this newly defined set E, minus the set D by phi inverse, we get all of E again. We can represent this visually as follows.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "charlie-pizza-cardinal-lithium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5099999,
        "text_offset": 0,
        "word_length": 7,
        "text": " Notice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10300000,
        "text_offset": 7,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 11,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 16,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 19,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17599999,
        "text_offset": 23,
        "word_length": 5,
        "text": " play",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 28,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20299999,
        "text_offset": 30,
        "word_length": 6,
        "text": " smart",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23099999,
        "text_offset": 36,
        "word_length": 6,
        "text": " trick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29099999,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30699998,
        "text_offset": 43,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32099999,
        "text_offset": 46,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33799999,
        "text_offset": 49,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 56,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39699999,
        "text_offset": 61,
        "word_length": 6,
        "text": " newly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 67,
        "word_length": 8,
        "text": " defined",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45699999,
        "text_offset": 75,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48899998,
        "text_offset": 79,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52200000,
        "text_offset": 81,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 87,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 92,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 94,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 97,
        "word_length": 5,
        "text": " fine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 102,
        "word_length": 6,
        "text": " verse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 108,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 109,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 112,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 116,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 120,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 123,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 125,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 131,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 132,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 135,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 139,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 149,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 154,
        "word_length": 9,
        "text": " visually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 163,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 166,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 174,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Notice now that we can play a smart trick. If we rotate this newly defined set E minus that D by fine verse, we get all of E again. We can represent this visually as follows.",
    "final_audio": "charlie-pizza-cardinal-lithium.mp3"
  },
  {
    "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
    "input_data": {
      "input_text": "We take a yellow copy of all these rotations of D, that is, E minus D, and rotate it to see where all these points end up.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "india-vegan-blossom-spring.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3499999,
        "text_offset": 0,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5399999,
        "text_offset": 3,
        "word_length": 5,
        "text": " take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7199999,
        "text_offset": 8,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8499999,
        "text_offset": 12,
        "word_length": 4,
        "text": " low",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 16,
        "word_length": 5,
        "text": " copy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11799999,
        "text_offset": 21,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 24,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 28,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 34,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 44,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 47,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 49,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 50,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30299998,
        "text_offset": 55,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999998,
        "text_offset": 58,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599999,
        "text_offset": 60,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 66,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41099997,
        "text_offset": 68,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43899998,
        "text_offset": 69,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 73,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399999,
        "text_offset": 80,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 83,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 86,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 5,
        "text": " high",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 93,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 104,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 108,
        "word_length": 6,
        "text": " where",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 114,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 118,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 124,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 131,
        "word_length": 4,
        "text": " end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 135,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 138,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " we take the low copy of all these rotations of D, that is E minus D, and rotate it by a high inverse to see where all these points end up.",
    "final_audio": "india-vegan-blossom-spring.mp3"
  },
  {
    "input_text": "What you see is that all of E gets covered.",
    "input_data": {
      "input_text": "What you see is that all of E gets covered.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nitrogen-cola-table-mango.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2599999,
        "text_offset": 0,
        "word_length": 5,
        "text": " What",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4200000,
        "text_offset": 5,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 9,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 13,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9299999,
        "text_offset": 16,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 21,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 28,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 30,
        "word_length": 5,
        "text": " gets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 35,
        "word_length": 8,
        "text": " covered",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " What you see is that all of E gets covered.",
    "final_audio": "nitrogen-cola-table-mango.mp3"
  },
  {
    "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
    "input_data": {
      "input_text": "Well, all of E except the last rotation of D. But this is only the case because we are showing finitely many rotations of D.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "stream-march-solar-bulldog.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8999999,
        "text_offset": 5,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 6,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 10,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 7,
        "text": " except",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 24,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 28,
        "word_length": 5,
        "text": " last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22799998,
        "text_offset": 33,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27299998,
        "text_offset": 42,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29099999,
        "text_offset": 45,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32399998,
        "text_offset": 47,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36599999,
        "text_offset": 48,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 52,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 57,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 60,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 69,
        "word_length": 5,
        "text": " case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47399997,
        "text_offset": 74,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49900000,
        "text_offset": 82,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50699999,
        "text_offset": 85,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 89,
        "word_length": 8,
        "text": " showing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 97,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 102,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 105,
        "word_length": 4,
        "text": " may",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 109,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 114,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 117,
        "word_length": 5,
        "text": " find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 122,
        "word_length": 4,
        "text": " out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 126,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 131,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 141,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 144,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54800000,
        "text_offset": 146,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57200000,
        "text_offset": 147,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60900001,
        "text_offset": 150,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62300000,
        "text_offset": 155,
        "word_length": 5,
        "text": " find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63399999,
        "text_offset": 160,
        "word_length": 4,
        "text": " out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64900000,
        "text_offset": 164,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65999999,
        "text_offset": 169,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68099999,
        "text_offset": 179,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "text_offset": 182,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199999,
        "text_offset": 184,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Well, all of the except the last rotation of D, but this is only the case because we are showing that we may need to find out many rotations of D. We will find out many rotations of D.",
    "final_audio": "stream-march-solar-bulldog.mp3"
  },
  {
    "input_text": "In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up. This is shown schematically on the left of the screen.",
    "input_data": {
      "input_text": "In the infinite case, this doesn't happen, because for every rotation of D, where phi is applied n times to D, the copy of D rotated by phi n+1 times will cover it up. This is shown schematically on the left of the screen.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "potato-freddie-alanine-lake.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5199999,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8199999,
        "text_offset": 3,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 7,
        "word_length": 9,
        "text": " infinite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 16,
        "word_length": 5,
        "text": " case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10600000,
        "text_offset": 21,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10899999,
        "text_offset": 22,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11599999,
        "text_offset": 27,
        "word_length": 6,
        "text": " doesn",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15299999,
        "text_offset": 33,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 35,
        "word_length": 7,
        "text": " happen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21699999,
        "text_offset": 42,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 50,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 54,
        "word_length": 6,
        "text": " every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29099999,
        "text_offset": 60,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35099998,
        "text_offset": 69,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35599998,
        "text_offset": 72,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 74,
        "word_length": 6,
        "text": " where",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44599997,
        "text_offset": 80,
        "word_length": 4,
        "text": " phi",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999999,
        "text_offset": 84,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49700000,
        "text_offset": 87,
        "word_length": 8,
        "text": " applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53899998,
        "text_offset": 95,
        "word_length": 2,
        "text": " n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 97,
        "word_length": 6,
        "text": " times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59199998,
        "text_offset": 103,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60699999,
        "text_offset": 107,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63099999,
        "text_offset": 109,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64800000,
        "text_offset": 110,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69199998,
        "text_offset": 114,
        "word_length": 5,
        "text": " copy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 122,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77499997,
        "text_offset": 124,
        "word_length": 8,
        "text": " rotated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78599998,
        "text_offset": 132,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80599997,
        "text_offset": 135,
        "word_length": 4,
        "text": " phi",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81999995,
        "text_offset": 139,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85199995,
        "text_offset": 140,
        "word_length": 2,
        "text": " n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87200002,
        "text_offset": 142,
        "word_length": 5,
        "text": " plus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89200000,
        "text_offset": 147,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91700000,
        "text_offset": 149,
        "word_length": 6,
        "text": " times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93999996,
        "text_offset": 155,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94299998,
        "text_offset": 156,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99800000,
        "text_offset": 161,
        "word_length": 6,
        "text": " cover",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100099997,
        "text_offset": 167,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101199998,
        "text_offset": 170,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103699998,
        "text_offset": 173,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 174,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 179,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 182,
        "word_length": 6,
        "text": " shown",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 188,
        "word_length": 6,
        "text": " schem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 194,
        "word_length": 8,
        "text": "atically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 202,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 205,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 209,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 214,
        "word_length": 5,
        "text": " side",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 219,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 226,
        "word_length": 7,
        "text": " screen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 233,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109499998,
        "text_offset": 234,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111599998,
        "text_offset": 239,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112199997,
        "text_offset": 242,
        "word_length": 6,
        "text": " shown",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113999996,
        "text_offset": 248,
        "word_length": 6,
        "text": " schem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115099997,
        "text_offset": 254,
        "word_length": 8,
        "text": "atically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124699997,
        "text_offset": 262,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127599992,
        "text_offset": 265,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128799996,
        "text_offset": 269,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131699995,
        "text_offset": 274,
        "word_length": 5,
        "text": " side",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133399996,
        "text_offset": 279,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133899993,
        "text_offset": 282,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134099993,
        "text_offset": 286,
        "word_length": 7,
        "text": " screen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134399995,
        "text_offset": 293,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In the infinite case, this doesn't happen because for every rotation of D where phi is applied n times the D, the copy of D rotated by phi, n plus 1 times, will cover it up. This is shown schematically on the left side of the screen. This is shown schematically on the left side of the screen.",
    "final_audio": "potato-freddie-alanine-lake.mp3"
  },
  {
    "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
    "input_data": {
      "input_text": "Note the following to things about E first. The first follows from the fact that D is a subset of E, and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lithium-alpha-table-wolfram.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5699999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Note",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7899999,
        "text_offset": 5,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 9,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 19,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 23,
        "word_length": 7,
        "text": " things",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 30,
        "word_length": 6,
        "text": " about",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999998,
        "text_offset": 36,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 38,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28099999,
        "text_offset": 44,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999999,
        "text_offset": 45,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34399999,
        "text_offset": 49,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37599999,
        "text_offset": 55,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43399999,
        "text_offset": 63,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47799999,
        "text_offset": 72,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 77,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51899998,
        "text_offset": 82,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54899997,
        "text_offset": 84,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55799999,
        "text_offset": 87,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56199998,
        "text_offset": 89,
        "word_length": 7,
        "text": " subset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60899999,
        "text_offset": 96,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62399997,
        "text_offset": 99,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "text_offset": 101,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71599998,
        "text_offset": 105,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72799997,
        "text_offset": 109,
        "word_length": 7,
        "text": " second",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73999998,
        "text_offset": 116,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75599999,
        "text_offset": 119,
        "word_length": 8,
        "text": " derived",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79799997,
        "text_offset": 127,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83699998,
        "text_offset": 132,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84099998,
        "text_offset": 136,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89200000,
        "text_offset": 141,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91799998,
        "text_offset": 146,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93299994,
        "text_offset": 148,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95899996,
        "text_offset": 151,
        "word_length": 10,
        "text": " contained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96399993,
        "text_offset": 161,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96999998,
        "text_offset": 164,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98599996,
        "text_offset": 166,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102199997,
        "text_offset": 167,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 168,
        "word_length": 5,
        "text": " Feel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 173,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 178,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 181,
        "word_length": 6,
        "text": " pause",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 187,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 191,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 197,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 202,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 205,
        "word_length": 6,
        "text": " check",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 211,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 215,
        "word_length": 9,
        "text": " yourself",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 224,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Note the following two things about E first. The first follows from the fact that D is a subset of E and the second is derived from the fact that E is contained in S2. Feel free to pause the video here to check for yourself.",
    "final_audio": "lithium-alpha-table-wolfram.mp3"
  },
  {
    "input_text": "Now, since we can partition S2 as follows",
    "input_data": {
      "input_text": "Now, since we can partition S2 as follows",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "music-mars-blossom-maine.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6599999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7699999,
        "text_offset": 5,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8699999,
        "text_offset": 11,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9299999,
        "text_offset": 14,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 18,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 28,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 31,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20699999,
        "text_offset": 34,
        "word_length": 4,
        "text": " his",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23399999,
        "text_offset": 38,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25599999,
        "text_offset": 46,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, since we can partition as to his follows,",
    "final_audio": "music-mars-blossom-maine.mp3"
  },
  {
    "input_text": "we can combine all of these to get THIS equation.",
    "input_data": {
      "input_text": "we can combine all of these to get THIS equation.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "batman-juliet-steak-august.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3099999,
        "text_offset": 3,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5300000,
        "text_offset": 7,
        "word_length": 8,
        "text": " combine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9399999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 19,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 22,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 28,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 31,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 35,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22899998,
        "text_offset": 40,
        "word_length": 9,
        "text": " equation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27899998,
        "text_offset": 49,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " we can combine all of these to get this equation.",
    "final_audio": "batman-juliet-steak-august.mp3"
  },
  {
    "input_text": "Now remember our paradoxical decomposition of S2 minus D",
    "input_data": {
      "input_text": "Now remember our paradoxical decomposition of S2 minus D",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "west-kitten-island-pennsylvania.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11699999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 5,
        "word_length": 9,
        "text": " remember",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 14,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18299999,
        "text_offset": 18,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 26,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 30,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 44,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34399999,
        "text_offset": 47,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "text_offset": 49,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 50,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37599998,
        "text_offset": 56,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38700000,
        "text_offset": 58,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, remember our paradoxical decomposition of S2 minus D.",
    "final_audio": "west-kitten-island-pennsylvania.mp3"
  },
  {
    "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
    "input_data": {
      "input_text": "We can then finally get a paradoxical decomposition of S2 by first substituting the expression with sigma for S2 minus D, and then the expression with tau. It is quite tedious to work out, so we won't show it exactly here.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "louisiana-xray-hamper-equal.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2299999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3599999,
        "text_offset": 3,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 7,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8799999,
        "text_offset": 12,
        "word_length": 8,
        "text": " finally",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10300000,
        "text_offset": 20,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 24,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 26,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 34,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 41,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26599999,
        "text_offset": 55,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28099999,
        "text_offset": 58,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499998,
        "text_offset": 60,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 61,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38700000,
        "text_offset": 64,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39999998,
        "text_offset": 70,
        "word_length": 8,
        "text": " substit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42200000,
        "text_offset": 78,
        "word_length": 5,
        "text": "uting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44700000,
        "text_offset": 83,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 87,
        "word_length": 11,
        "text": " expression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50099999,
        "text_offset": 98,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51499998,
        "text_offset": 103,
        "word_length": 6,
        "text": " sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "text_offset": 109,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56599998,
        "text_offset": 113,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 115,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60499999,
        "text_offset": 116,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64199998,
        "text_offset": 122,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 124,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73699998,
        "text_offset": 128,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76899998,
        "text_offset": 133,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 137,
        "word_length": 11,
        "text": " expression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77699997,
        "text_offset": 148,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 153,
        "word_length": 4,
        "text": " tau",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90199999,
        "text_offset": 157,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 158,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 161,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 164,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 170,
        "word_length": 8,
        "text": " tedious",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 178,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 181,
        "word_length": 5,
        "text": " work",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 186,
        "word_length": 4,
        "text": " out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 190,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 193,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 196,
        "word_length": 4,
        "text": " don",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 200,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 202,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 207,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 210,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 215,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98699998,
        "text_offset": 216,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101700000,
        "text_offset": 219,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102599997,
        "text_offset": 222,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105799999,
        "text_offset": 228,
        "word_length": 8,
        "text": " tedious",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108800001,
        "text_offset": 236,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108800001,
        "text_offset": 239,
        "word_length": 5,
        "text": " work",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110700001,
        "text_offset": 244,
        "word_length": 4,
        "text": " out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111800003,
        "text_offset": 248,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112600002,
        "text_offset": 251,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800002,
        "text_offset": 254,
        "word_length": 4,
        "text": " don",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113800001,
        "text_offset": 258,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115000000,
        "text_offset": 260,
        "word_length": 5,
        "text": " show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115100002,
        "text_offset": 265,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117199993,
        "text_offset": 268,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117399997,
        "text_offset": 273,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We can then finally get a paradox called decomposition of S2 by first substituting the expression with sigma for S2 minus D and then the expression with tau. It is quite tedious to work out so we don't show it here. It is quite tedious to work out so we don't show it here.",
    "final_audio": "louisiana-xray-hamper-equal.mp3"
  },
  {
    "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "input_data": {
      "input_text": "The result however is this: a paradoxical decomposition of S2. If we wanted to write the decomposition in full, it would unfortunately not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "william-quiet-mexico-mirror.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3999999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5699999,
        "text_offset": 4,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 11,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 12,
        "word_length": 8,
        "text": " however",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12099999,
        "text_offset": 21,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13100000,
        "text_offset": 24,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15599999,
        "text_offset": 29,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999999,
        "text_offset": 30,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999998,
        "text_offset": 32,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25099998,
        "text_offset": 40,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27399998,
        "text_offset": 47,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35499998,
        "text_offset": 61,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36599999,
        "text_offset": 64,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999998,
        "text_offset": 68,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 70,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799998,
        "text_offset": 71,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 72,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "text_offset": 75,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 78,
        "word_length": 7,
        "text": " wanted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52799999,
        "text_offset": 85,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58399999,
        "text_offset": 88,
        "word_length": 6,
        "text": " write",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58399999,
        "text_offset": 94,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63999998,
        "text_offset": 98,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67300000,
        "text_offset": 112,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68899998,
        "text_offset": 115,
        "word_length": 5,
        "text": " full",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70599999,
        "text_offset": 120,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74999997,
        "text_offset": 121,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76699998,
        "text_offset": 124,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79599997,
        "text_offset": 130,
        "word_length": 14,
        "text": " unfortunately",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81599998,
        "text_offset": 144,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85199999,
        "text_offset": 148,
        "word_length": 4,
        "text": " fit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88099999,
        "text_offset": 152,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89800000,
        "text_offset": 155,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91699995,
        "text_offset": 159,
        "word_length": 7,
        "text": " screen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94999995,
        "text_offset": 166,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96099996,
        "text_offset": 167,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97100000,
        "text_offset": 173,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98600001,
        "text_offset": 176,
        "word_length": 4,
        "text": " why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101399998,
        "text_offset": 180,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105399994,
        "text_offset": 186,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106799998,
        "text_offset": 190,
        "word_length": 5,
        "text": " some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "text_offset": 195,
        "word_length": 4,
        "text": " new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111099996,
        "text_offset": 199,
        "word_length": 6,
        "text": " terms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114899997,
        "text_offset": 205,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117299995,
        "text_offset": 210,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118199996,
        "text_offset": 215,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 216,
        "word_length": 6,
        "text": " These",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 222,
        "word_length": 6,
        "text": " terms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 228,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 232,
        "word_length": 8,
        "text": " defined",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 240,
        "word_length": 10,
        "text": " precisely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 250,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 253,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 257,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 264,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The result, however, is this, a paradox called decomposition of the S2. If we wanted to write the decomposition in full, it would unfortunately not fit on the screen, which is why there are some new terms used here. These terms are defined precisely in the thesis.",
    "final_audio": "william-quiet-mexico-mirror.mp3"
  },
  {
    "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "input_data": {
      "input_text": "Alright. Now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Banach-Tarski paradox: to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "uranus-shade-alanine-moon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4600000,
        "text_offset": 0,
        "word_length": 8,
        "text": " Alright",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 8,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8999999,
        "text_offset": 9,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 13,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 18,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14299999,
        "text_offset": 21,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 26,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16799999,
        "text_offset": 28,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 36,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 40,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 54,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 57,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31499999,
        "text_offset": 61,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 68,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 69,
        "word_length": 6,
        "text": " there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 75,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47999997,
        "text_offset": 78,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48399996,
        "text_offset": 83,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48699998,
        "text_offset": 87,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "text_offset": 93,
        "word_length": 5,
        "text": " left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 98,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51599998,
        "text_offset": 104,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52999999,
        "text_offset": 108,
        "word_length": 3,
        "text": " us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54099998,
        "text_offset": 111,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 114,
        "word_length": 7,
        "text": " finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 121,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 125,
        "word_length": 6,
        "text": " proof",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59999997,
        "text_offset": 131,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61699998,
        "text_offset": 134,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63399999,
        "text_offset": 138,
        "word_length": 4,
        "text": " Ben",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66099998,
        "text_offset": 142,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68299999,
        "text_offset": 145,
        "word_length": 2,
        "text": "ht",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69700000,
        "text_offset": 147,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70399999,
        "text_offset": 150,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71499998,
        "text_offset": 152,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72399997,
        "text_offset": 160,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 161,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 164,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 175,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 183,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 187,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 201,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 204,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 208,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 215,
        "word_length": 5,
        "text": " onto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 220,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 224,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 227,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 231,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 236,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73600000,
        "text_offset": 241,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Alright, now that we have a paradoxical decomposition on the sphere, there is only one thing left to do for us to finish the proof of the Benachhtarsky paradox, to expand the paradoxical decomposition of the sphere onto all of the unit ball.",
    "final_audio": "uranus-shade-alanine-moon.mp3"
  },
  {
    "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
    "input_data": {
      "input_text": "The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point p of the sphere with the points between p and the origin",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "delta-edward-artist-minnesota.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3699999,
        "text_offset": 4,
        "word_length": 6,
        "text": " first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5799999,
        "text_offset": 10,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7599999,
        "text_offset": 15,
        "word_length": 5,
        "text": " here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9699999,
        "text_offset": 20,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 23,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 32,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 38,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21299999,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 46,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 49,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 53,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 60,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 64,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34399999,
        "text_offset": 78,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36699999,
        "text_offset": 81,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 85,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 90,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48199999,
        "text_offset": 95,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 99,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53799998,
        "text_offset": 106,
        "word_length": 8,
        "text": " removed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55599999,
        "text_offset": 114,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 117,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800000,
        "text_offset": 124,
        "word_length": 12,
        "text": " identifying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67999999,
        "text_offset": 136,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71199998,
        "text_offset": 141,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199997,
        "text_offset": 147,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 149,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399997,
        "text_offset": 156,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84799995,
        "text_offset": 163,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86899995,
        "text_offset": 168,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 172,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199998,
        "text_offset": 179,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 187,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 189,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 197,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 204,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The first step here is actually quite simple. We can expand the decomposition to the ball with the origin removed by simply identifying each point P of the sphere with the points between P and the origin.",
    "final_audio": "delta-edward-artist-minnesota.mp3"
  },
  {
    "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere.",
    "input_data": {
      "input_text": "This works because when we rotate points on a sphere, this rotations works the exact same way on that line as it does on the point of the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "winner-one-seven-burger.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 5,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 11,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 19,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21199999,
        "text_offset": 34,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 41,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 44,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26299999,
        "text_offset": 46,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30499999,
        "text_offset": 53,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32099999,
        "text_offset": 54,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33700000,
        "text_offset": 59,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 68,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40399998,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 78,
        "word_length": 6,
        "text": " exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 84,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 89,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 93,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50299999,
        "text_offset": 96,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51999998,
        "text_offset": 101,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55899996,
        "text_offset": 106,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58399999,
        "text_offset": 109,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61199998,
        "text_offset": 112,
        "word_length": 5,
        "text": " does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63099999,
        "text_offset": 117,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66199998,
        "text_offset": 120,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68699998,
        "text_offset": 124,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69999997,
        "text_offset": 130,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71799998,
        "text_offset": 133,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73099997,
        "text_offset": 137,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75899999,
        "text_offset": 144,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This works because when we rotate points on a sphere, this rotation works the exact same way on that line as it does on the point of the sphere.",
    "final_audio": "winner-one-seven-burger.mp3"
  },
  {
    "input_text": "Let's see this in 3D",
    "input_data": {
      "input_text": "Let's see this in 3D",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "eleven-ack-quiet-vermont.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4900000,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 6,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10600000,
        "text_offset": 10,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11700000,
        "text_offset": 15,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 18,
        "word_length": 2,
        "text": " 3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 20,
        "word_length": 1,
        "text": "D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 21,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's see this in 3D.",
    "final_audio": "eleven-ack-quiet-vermont.mp3"
  },
  {
    "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
    "input_data": {
      "input_text": "So, because our argument depended only on applying rotations to points, we can expand the paradoxical decomposition as follows.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "massachusetts-equal-princess-texas.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 3,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 11,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 15,
        "word_length": 9,
        "text": " argument",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12799999,
        "text_offset": 24,
        "word_length": 4,
        "text": " dep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16099999,
        "text_offset": 28,
        "word_length": 5,
        "text": "ended",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20899999,
        "text_offset": 33,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 38,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24599999,
        "text_offset": 41,
        "word_length": 9,
        "text": " applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28299999,
        "text_offset": 50,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 60,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 63,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39599999,
        "text_offset": 70,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 71,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 74,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 78,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 85,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 89,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 97,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 104,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 118,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 121,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 129,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So because our argument depended only on applying rotations to points, we can expand the paradox called decomposition as follows.",
    "final_audio": "massachusetts-equal-princess-texas.mp3"
  },
  {
    "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
    "input_data": {
      "input_text": "The sets T i and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the points. We call these sets T i prime and Sigma i prime.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fanta-timing-william-four.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5600000,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 4,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13899999,
        "text_offset": 9,
        "word_length": 3,
        "text": " TI",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 12,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19599999,
        "text_offset": 16,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22099999,
        "text_offset": 22,
        "word_length": 2,
        "text": " i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25699999,
        "text_offset": 25,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 31,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28700000,
        "text_offset": 35,
        "word_length": 8,
        "text": " defined",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 43,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31899999,
        "text_offset": 46,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 50,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 57,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 58,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40099998,
        "text_offset": 62,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40999999,
        "text_offset": 65,
        "word_length": 8,
        "text": " altered",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "text_offset": 73,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45799999,
        "text_offset": 76,
        "word_length": 12,
        "text": " identifying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50999999,
        "text_offset": 88,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52599997,
        "text_offset": 92,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 99,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58599998,
        "text_offset": 102,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 107,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63099999,
        "text_offset": 112,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65099999,
        "text_offset": 116,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66199998,
        "text_offset": 122,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67199997,
        "text_offset": 125,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68199996,
        "text_offset": 129,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69099998,
        "text_offset": 135,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75199999,
        "text_offset": 136,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79700000,
        "text_offset": 139,
        "word_length": 5,
        "text": " call",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 144,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83200001,
        "text_offset": 150,
        "word_length": 5,
        "text": " sets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84700002,
        "text_offset": 155,
        "word_length": 3,
        "text": " TI",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 158,
        "word_length": 6,
        "text": " prime",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91799998,
        "text_offset": 164,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95000000,
        "text_offset": 168,
        "word_length": 6,
        "text": " Sigma",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97400002,
        "text_offset": 174,
        "word_length": 2,
        "text": " i",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98699998,
        "text_offset": 176,
        "word_length": 6,
        "text": " prime",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99399995,
        "text_offset": 182,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The sets TI and Sigma i, which are defined on the sphere, can be altered by identifying the points in them with the lines to the point. We call these sets TI prime and Sigma i prime.",
    "final_audio": "fanta-timing-william-four.mp3"
  },
  {
    "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
    "input_data": {
      "input_text": "This then gives rise to the following paradoxical decomposition of the unit ball B3 without the origin.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nevada-vermont-angel-failed.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 10,
        "word_length": 6,
        "text": " gives",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 16,
        "word_length": 5,
        "text": " rise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 21,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 24,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 28,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22999999,
        "text_offset": 38,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 46,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29399999,
        "text_offset": 53,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 67,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 70,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39599999,
        "text_offset": 74,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "text_offset": 79,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 84,
        "word_length": 2,
        "text": " B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 86,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 87,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52400000,
        "text_offset": 95,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54399998,
        "text_offset": 99,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799999,
        "text_offset": 106,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This then gives rise to the following paradox called decomposition of the unit ball B3 without the origin.",
    "final_audio": "nevada-vermont-angel-failed.mp3"
  },
  {
    "input_text": "Here are a few points on the unit sphere",
    "input_data": {
      "input_text": "Here are a few points on the unit sphere",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lithium-wyoming-twenty-beryllium.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 9,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10399999,
        "text_offset": 11,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 22,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 25,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 29,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 34,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Here are a few points on the unit sphere.",
    "final_audio": "lithium-wyoming-twenty-beryllium.mp3"
  },
  {
    "input_text": "Let's remove the sphere so we can see the next part more clearly",
    "input_data": {
      "input_text": "Let's remove the sphere so we can see the next part more clearly",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lactose-wisconsin-north-triple.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3900000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6299999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 6,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10599999,
        "text_offset": 13,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13699999,
        "text_offset": 17,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 24,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19699999,
        "text_offset": 30,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 34,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 38,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23799999,
        "text_offset": 42,
        "word_length": 5,
        "text": " next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26100000,
        "text_offset": 47,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 52,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 57,
        "word_length": 8,
        "text": " clearly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35999999,
        "text_offset": 65,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's remove the sphere so we can see the next part more clearly.",
    "final_audio": "lactose-wisconsin-north-triple.mp3"
  },
  {
    "input_text": "Now, let's see the lines from the origin to the points.",
    "input_data": {
      "input_text": "Now, let's see the lines from the origin to the points.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-yellow-hawaii-princess.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6199999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11499999,
        "text_offset": 5,
        "word_length": 4,
        "text": " let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12499999,
        "text_offset": 9,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 19,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 25,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19999999,
        "text_offset": 30,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21799999,
        "text_offset": 34,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24899998,
        "text_offset": 41,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 44,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 48,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now, let's see the lines from the origin to the points.",
    "final_audio": "vermont-yellow-hawaii-princess.mp3"
  },
  {
    "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
    "input_data": {
      "input_text": "When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same point but for all balls with radius smaller than 1. Well actually, it's exactly like that.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "lake-moon-fifteen-october.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7799999,
        "text_offset": 0,
        "word_length": 5,
        "text": " When",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 8,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16699999,
        "text_offset": 15,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 19,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 25,
        "word_length": 8,
        "text": " objects",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 33,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18299999,
        "text_offset": 34,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19499999,
        "text_offset": 38,
        "word_length": 7,
        "text": " should",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 45,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23299999,
        "text_offset": 49,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 54,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 63,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31899999,
        "text_offset": 68,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33399999,
        "text_offset": 72,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38299999,
        "text_offset": 79,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 82,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42999999,
        "text_offset": 87,
        "word_length": 8,
        "text": " similar",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45899999,
        "text_offset": 95,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47599999,
        "text_offset": 98,
        "word_length": 9,
        "text": " rotating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 107,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52899999,
        "text_offset": 111,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55699999,
        "text_offset": 117,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 120,
        "word_length": 5,
        "text": " them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58099999,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66599998,
        "text_offset": 126,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67399997,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68099997,
        "text_offset": 132,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69499998,
        "text_offset": 135,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71599998,
        "text_offset": 138,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73799998,
        "text_offset": 142,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76099998,
        "text_offset": 149,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77399997,
        "text_offset": 152,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80099997,
        "text_offset": 156,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82100000,
        "text_offset": 161,
        "word_length": 10,
        "text": " represent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89600000,
        "text_offset": 175,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 180,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 187,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95899996,
        "text_offset": 188,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99000000,
        "text_offset": 192,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101199998,
        "text_offset": 196,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 200,
        "word_length": 6,
        "text": " balls",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106999998,
        "text_offset": 206,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109499993,
        "text_offset": 211,
        "word_length": 7,
        "text": " radius",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112199997,
        "text_offset": 218,
        "word_length": 8,
        "text": " smaller",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114799995,
        "text_offset": 226,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116099996,
        "text_offset": 231,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117299995,
        "text_offset": 235,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 236,
        "word_length": 5,
        "text": " Well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 241,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 242,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 251,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 252,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 255,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 257,
        "word_length": 8,
        "text": " exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 265,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 270,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 275,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " When we rotate all these objects, you should see that rotating just the points is very similar to rotating the lines to them. It is as if the points on the line represent the same points, but for all balls with radius smaller than one. Well, actually, it's exactly like that.",
    "final_audio": "lake-moon-fifteen-october.mp3"
  },
  {
    "input_text": "Note that these lines don't include the origin, because otherwise it would be identified with all points on the sphere.",
    "input_data": {
      "input_text": "Note that these lines don't include the origin, because otherwise it would be identified with all points on the sphere.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mars-kansas-beer-foxtrot.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6200000,
        "text_offset": 0,
        "word_length": 5,
        "text": " Note",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8399999,
        "text_offset": 5,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9199999,
        "text_offset": 10,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 16,
        "word_length": 6,
        "text": " lines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "text_offset": 22,
        "word_length": 4,
        "text": " don",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 26,
        "word_length": 2,
        "text": "'t",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17999998,
        "text_offset": 28,
        "word_length": 8,
        "text": " include",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20799999,
        "text_offset": 36,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24699999,
        "text_offset": 40,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25799999,
        "text_offset": 47,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26199998,
        "text_offset": 48,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799999,
        "text_offset": 56,
        "word_length": 10,
        "text": " otherwise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31199998,
        "text_offset": 66,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 69,
        "word_length": 6,
        "text": " would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34799998,
        "text_offset": 75,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 78,
        "word_length": 11,
        "text": " identified",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41699998,
        "text_offset": 89,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 94,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45999999,
        "text_offset": 98,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49199998,
        "text_offset": 105,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50599999,
        "text_offset": 108,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 113,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53499999,
        "text_offset": 120,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Note that these lines don't include the origin, because otherwise it would be identified with all points on this sphere.",
    "final_audio": "mars-kansas-beer-foxtrot.mp3"
  },
  {
    "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
    "input_data": {
      "input_text": "The final step now is to add the origin to the paradoxical decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradoxical decomposition of S2 minus D. Let's look at the ball from above again",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "georgia-carolina-utah-stairway.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2899999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4199999,
        "text_offset": 4,
        "word_length": 6,
        "text": " final",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 10,
        "word_length": 5,
        "text": " step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9299999,
        "text_offset": 15,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 19,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "text_offset": 22,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13700000,
        "text_offset": 25,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 29,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 33,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21399999,
        "text_offset": 40,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 43,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24499999,
        "text_offset": 47,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 55,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31099998,
        "text_offset": 62,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38199999,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43199996,
        "text_offset": 77,
        "word_length": 8,
        "text": " Luckily",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44800000,
        "text_offset": 85,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46399998,
        "text_offset": 86,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48899998,
        "text_offset": 91,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50499999,
        "text_offset": 94,
        "word_length": 5,
        "text": " easy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52300000,
        "text_offset": 99,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54499998,
        "text_offset": 102,
        "word_length": 4,
        "text": " fix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57799999,
        "text_offset": 106,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 112,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62199997,
        "text_offset": 116,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64799997,
        "text_offset": 121,
        "word_length": 6,
        "text": " trick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68599998,
        "text_offset": 127,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70299999,
        "text_offset": 132,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71399998,
        "text_offset": 135,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73799998,
        "text_offset": 140,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75399999,
        "text_offset": 144,
        "word_length": 7,
        "text": " adding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77699997,
        "text_offset": 151,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78999998,
        "text_offset": 155,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80999999,
        "text_offset": 159,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84099998,
        "text_offset": 161,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85799994,
        "text_offset": 164,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86999998,
        "text_offset": 168,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92199997,
        "text_offset": 176,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94399995,
        "text_offset": 183,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100199999,
        "text_offset": 197,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101499996,
        "text_offset": 200,
        "word_length": 2,
        "text": " S",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103299999,
        "text_offset": 202,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105899996,
        "text_offset": 203,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108899993,
        "text_offset": 209,
        "word_length": 2,
        "text": " D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113599996,
        "text_offset": 211,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 212,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 216,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 218,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 223,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 226,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 230,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 235,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 240,
        "word_length": 6,
        "text": " above",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 246,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 252,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The final step now is to add the origin to the paradox called decomposition. Luckily, this is easy to fix using the same trick that we used for adding the set D to our paradox called decomposition of S2 minus D. Let's look at the ball from above again.",
    "final_audio": "georgia-carolina-utah-stairway.mp3"
  },
  {
    "input_text": "The white dot is the origin.",
    "input_data": {
      "input_text": "The white dot is the origin.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "river-monkey-india-batman.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3099999,
        "text_offset": 0,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4799999,
        "text_offset": 4,
        "word_length": 6,
        "text": " white",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6899999,
        "text_offset": 10,
        "word_length": 5,
        "text": " dots",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9599999,
        "text_offset": 15,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 18,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12299999,
        "text_offset": 22,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14799999,
        "text_offset": 29,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " The white dots is the origin.",
    "final_audio": "river-monkey-india-batman.mp3"
  },
  {
    "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
    "input_data": {
      "input_text": "This time, we will be looking at a rotation around a line through the point one third, 0, 0. The choice of this point is arbitrary, the only important thing is that when we rotate 0 around this line, it stays inside the ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "stream-georgia-michigan-pizza.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2999999,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4399999,
        "text_offset": 5,
        "word_length": 5,
        "text": " time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8099999,
        "text_offset": 10,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9599999,
        "text_offset": 13,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12999999,
        "text_offset": 21,
        "word_length": 8,
        "text": " looking",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16399999,
        "text_offset": 29,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 32,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19899999,
        "text_offset": 34,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 43,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 50,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28899999,
        "text_offset": 52,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32499998,
        "text_offset": 57,
        "word_length": 8,
        "text": " through",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299999,
        "text_offset": 69,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 75,
        "word_length": 4,
        "text": " one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41799998,
        "text_offset": 79,
        "word_length": 6,
        "text": " third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45599999,
        "text_offset": 85,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48799998,
        "text_offset": 90,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52499997,
        "text_offset": 95,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56900000,
        "text_offset": 96,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200001,
        "text_offset": 100,
        "word_length": 7,
        "text": " choice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65600001,
        "text_offset": 107,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67500002,
        "text_offset": 110,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68300001,
        "text_offset": 115,
        "word_length": 6,
        "text": " point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 121,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72500000,
        "text_offset": 124,
        "word_length": 10,
        "text": " arbitrary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76000001,
        "text_offset": 134,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78400001,
        "text_offset": 135,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80100002,
        "text_offset": 139,
        "word_length": 5,
        "text": " only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81799998,
        "text_offset": 144,
        "word_length": 10,
        "text": " important",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85299997,
        "text_offset": 154,
        "word_length": 6,
        "text": " thing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87599997,
        "text_offset": 160,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 163,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 168,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "text_offset": 173,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96100001,
        "text_offset": 176,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800001,
        "text_offset": 183,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101599998,
        "text_offset": 188,
        "word_length": 7,
        "text": " around",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103999996,
        "text_offset": 195,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105999994,
        "text_offset": 200,
        "word_length": 5,
        "text": " line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110399994,
        "text_offset": 205,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115099992,
        "text_offset": 208,
        "word_length": 6,
        "text": " stays",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117899999,
        "text_offset": 214,
        "word_length": 7,
        "text": " inside",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120299997,
        "text_offset": 221,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121999998,
        "text_offset": 225,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123299999,
        "text_offset": 230,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This time we will be looking at a rotation around a line through the point one third zero zero. The choice of this point is arbitrary, the only important thing is that when we rotate zero around this line it stays inside the ball.",
    "final_audio": "stream-georgia-michigan-pizza.mp3"
  },
  {
    "input_text": "Now, again we look at the rotations.",
    "input_data": {
      "input_text": "Now, again we look at the rotations.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hawaii-potato-freddie-yellow.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4699999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7299999,
        "text_offset": 4,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9799999,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 11,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 14,
        "word_length": 5,
        "text": " look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14499999,
        "text_offset": 19,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16299999,
        "text_offset": 22,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19100000,
        "text_offset": 26,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21599999,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now again, we look at the rotations.",
    "final_audio": "hawaii-potato-freddie-yellow.mp3"
  },
  {
    "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
    "input_data": {
      "input_text": "Again, we will define a set K similarly. K is the union of 0 with all the repeated rotations theta n of 0.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "twenty-ohio-connecticut-item.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3699999,
        "text_offset": 0,
        "word_length": 6,
        "text": " Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6699999,
        "text_offset": 6,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8599999,
        "text_offset": 7,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10799999,
        "text_offset": 10,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12699999,
        "text_offset": 15,
        "word_length": 7,
        "text": " define",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 22,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 24,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 28,
        "word_length": 2,
        "text": " K",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 30,
        "word_length": 4,
        "text": " Sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17699999,
        "text_offset": 34,
        "word_length": 1,
        "text": "m",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 35,
        "word_length": 3,
        "text": "ary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 38,
        "word_length": 1,
        "text": "L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25099999,
        "text_offset": 39,
        "word_length": 2,
        "text": "ar",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26499999,
        "text_offset": 41,
        "word_length": 2,
        "text": "ly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 44,
        "word_length": 2,
        "text": " K",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 46,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 49,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 53,
        "word_length": 6,
        "text": " union",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 59,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 62,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 67,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 72,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 76,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 80,
        "word_length": 9,
        "text": " repeated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 89,
        "word_length": 10,
        "text": " rotations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 99,
        "word_length": 6,
        "text": " theta",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 105,
        "word_length": 2,
        "text": " n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 107,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 110,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "text_offset": 115,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Again, we will define a set K SummaryLarly. K is the union of zero with all the repeated rotations theta n of zero.",
    "final_audio": "twenty-ohio-connecticut-item.mp3"
  },
  {
    "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. The symbolic representation of this is at the bottom of the screen.",
    "input_data": {
      "input_text": "Now we do the same trick again: if we rotate this set K minus 0 by theta inverse, we get all of K again. The symbolic representation of this is at the bottom of the screen.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vegan-red-moon-bravo.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2800000,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3199999,
        "text_offset": 4,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3999999,
        "text_offset": 7,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6799999,
        "text_offset": 10,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8299999,
        "text_offset": 14,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10299999,
        "text_offset": 19,
        "word_length": 6,
        "text": " trick",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12299999,
        "text_offset": 25,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 31,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18600000,
        "text_offset": 32,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19099999,
        "text_offset": 35,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20099999,
        "text_offset": 38,
        "word_length": 7,
        "text": " rotate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 45,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24999998,
        "text_offset": 49,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28799999,
        "text_offset": 53,
        "word_length": 2,
        "text": " k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30699998,
        "text_offset": 55,
        "word_length": 6,
        "text": " minus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34599999,
        "text_offset": 61,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38599998,
        "text_offset": 63,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39799998,
        "text_offset": 64,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 68,
        "word_length": 6,
        "text": " theta",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45299999,
        "text_offset": 74,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399997,
        "text_offset": 82,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53999998,
        "text_offset": 83,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55099999,
        "text_offset": 86,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56999998,
        "text_offset": 90,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57999999,
        "text_offset": 94,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 97,
        "word_length": 2,
        "text": " k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62299997,
        "text_offset": 99,
        "word_length": 6,
        "text": " again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64999997,
        "text_offset": 105,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70199997,
        "text_offset": 106,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73399996,
        "text_offset": 110,
        "word_length": 9,
        "text": " symbolic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75999996,
        "text_offset": 119,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79799997,
        "text_offset": 134,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80999999,
        "text_offset": 137,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 142,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 145,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 148,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 152,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 159,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 162,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 166,
        "word_length": 7,
        "text": " screen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 173,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now we do the same trick again. If we rotate the set k minus 0, but theta inverse, we get all of k again. The symbolic representation of this is at the bottom of the screen.",
    "final_audio": "vegan-red-moon-bravo.mp3"
  },
  {
    "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole ball.",
    "input_data": {
      "input_text": "Let's now see how we can use this to create a paradoxical decomposition of the whole ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "vermont-two-nine-two.mp3",
    "word_boundaries": [
      {
        "audio_offset": 7699999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 4,
        "word_length": 2,
        "text": "'s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11699999,
        "text_offset": 6,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13299999,
        "text_offset": 10,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 14,
        "word_length": 4,
        "text": " how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 18,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20399999,
        "text_offset": 21,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 25,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 29,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25499999,
        "text_offset": 34,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27699998,
        "text_offset": 37,
        "word_length": 7,
        "text": " create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 44,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31399999,
        "text_offset": 46,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35299998,
        "text_offset": 54,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38399999,
        "text_offset": 61,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45399999,
        "text_offset": 75,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46999998,
        "text_offset": 78,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50399999,
        "text_offset": 82,
        "word_length": 6,
        "text": " whole",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52199997,
        "text_offset": 88,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53299999,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Let's now see how we can use this to create a paradox called decomposition of the whole ball.",
    "final_audio": "vermont-two-nine-two.mp3"
  },
  {
    "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
    "input_data": {
      "input_text": "Now, for the exact same reasons as before, we can partition B3 as follows",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "white-batman-network-august.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4799999,
        "text_offset": 0,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "text_offset": 4,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 8,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 12,
        "word_length": 6,
        "text": " exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23999999,
        "text_offset": 18,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26899999,
        "text_offset": 23,
        "word_length": 8,
        "text": " reasons",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28999999,
        "text_offset": 31,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29599999,
        "text_offset": 34,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32899999,
        "text_offset": 41,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999999,
        "text_offset": 42,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34800000,
        "text_offset": 45,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35000000,
        "text_offset": 49,
        "word_length": 10,
        "text": " partition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37199999,
        "text_offset": 59,
        "word_length": 2,
        "text": " B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38799999,
        "text_offset": 61,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 62,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40799999,
        "text_offset": 65,
        "word_length": 8,
        "text": " follows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43999998,
        "text_offset": 73,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Now for the exact same reasons as before, we can partition B3 as follows.",
    "final_audio": "white-batman-network-august.mp3"
  },
  {
    "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
    "input_data": {
      "input_text": "combining this, in the same way as before, with the paradoxical decomposition of the ball without the origin.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "ceiling-four-social-california.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3499999,
        "text_offset": 0,
        "word_length": 5,
        "text": " Comb",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5999999,
        "text_offset": 5,
        "word_length": 5,
        "text": "ining",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7099999,
        "text_offset": 10,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7999999,
        "text_offset": 15,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8699999,
        "text_offset": 18,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 22,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11299999,
        "text_offset": 27,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12899999,
        "text_offset": 31,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14199999,
        "text_offset": 34,
        "word_length": 7,
        "text": " before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20299999,
        "text_offset": 41,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22699998,
        "text_offset": 46,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 48,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28499999,
        "text_offset": 56,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30299998,
        "text_offset": 63,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36100000,
        "text_offset": 77,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37499998,
        "text_offset": 80,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38499999,
        "text_offset": 84,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40699999,
        "text_offset": 89,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44900000,
        "text_offset": 97,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46499998,
        "text_offset": 101,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Combining this in the same way as before with a paradox called decomposition of the ball without the origin",
    "final_audio": "ceiling-four-social-california.mp3"
  },
  {
    "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox! Finally we have arrived at the result that we were working towards for the entirety of this video.",
    "input_data": {
      "input_text": "Gives us the final paradoxical decomposition of the ball, completing the Banach-Tarski paradox! Finally we have arrived at the result that we were working towards for the entirety of this video.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "massachusetts-hamper-oklahoma-bluebird.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5799999,
        "text_offset": 0,
        "word_length": 6,
        "text": " gives",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 6,
        "word_length": 3,
        "text": " us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14099999,
        "text_offset": 9,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15999999,
        "text_offset": 13,
        "word_length": 6,
        "text": " final",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799998,
        "text_offset": 19,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "text_offset": 27,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29199999,
        "text_offset": 34,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36200000,
        "text_offset": 48,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37799998,
        "text_offset": 51,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 55,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42200000,
        "text_offset": 60,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44799997,
        "text_offset": 61,
        "word_length": 11,
        "text": " completing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51199998,
        "text_offset": 72,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53399999,
        "text_offset": 76,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55599997,
        "text_offset": 80,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57899997,
        "text_offset": 83,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58899998,
        "text_offset": 85,
        "word_length": 3,
        "text": "ors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60699999,
        "text_offset": 88,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62899999,
        "text_offset": 90,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67199997,
        "text_offset": 98,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78800001,
        "text_offset": 99,
        "word_length": 8,
        "text": " Finally",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80999999,
        "text_offset": 107,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81599998,
        "text_offset": 108,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83199996,
        "text_offset": 111,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85199999,
        "text_offset": 116,
        "word_length": 8,
        "text": " arrived",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87100000,
        "text_offset": 124,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87200002,
        "text_offset": 127,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800001,
        "text_offset": 131,
        "word_length": 8,
        "text": " results",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90099997,
        "text_offset": 139,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91799998,
        "text_offset": 144,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93200001,
        "text_offset": 147,
        "word_length": 5,
        "text": " were",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "text_offset": 152,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000003,
        "text_offset": 160,
        "word_length": 8,
        "text": " towards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000001,
        "text_offset": 168,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100599999,
        "text_offset": 172,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102500000,
        "text_offset": 176,
        "word_length": 9,
        "text": " entirety",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106799998,
        "text_offset": 185,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108000001,
        "text_offset": 188,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110800004,
        "text_offset": 193,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112699999,
        "text_offset": 199,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " gives us the final paradox called decomposition of the ball, completing the Banach Torsky paradox. Finally, we have arrived at the results that we were working towards for the entirety of this video.",
    "final_audio": "massachusetts-hamper-oklahoma-bluebird.mp3"
  },
  {
    "input_text": "Again, a lot of new terms are used to make sure everything fits on screen, and we skipped over quite a few details to speed things up. For an exact treatment and definition of things, refer to the thesis.",
    "input_data": {
      "input_text": "Again, a lot of new terms are used to make sure everything fits on screen, and we skipped over quite a few details to speed things up. For an exact treatment and definition of things, refer to the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hawaii-jupiter-video-carbon.mp3",
    "word_boundaries": [
      {
        "audio_offset": 12099999,
        "text_offset": 0,
        "word_length": 6,
        "text": " Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 6,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14399999,
        "text_offset": 7,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15699999,
        "text_offset": 9,
        "word_length": 4,
        "text": " lot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16899999,
        "text_offset": 13,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19199999,
        "text_offset": 16,
        "word_length": 4,
        "text": " new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 20,
        "word_length": 6,
        "text": " terms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24399999,
        "text_offset": 26,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 30,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27099999,
        "text_offset": 35,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 38,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29799998,
        "text_offset": 43,
        "word_length": 5,
        "text": " sure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30999999,
        "text_offset": 48,
        "word_length": 11,
        "text": " everything",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 59,
        "word_length": 5,
        "text": " fits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38099998,
        "text_offset": 64,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39399999,
        "text_offset": 67,
        "word_length": 7,
        "text": " screen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44699997,
        "text_offset": 74,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "text_offset": 75,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46400001,
        "text_offset": 79,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50099999,
        "text_offset": 82,
        "word_length": 8,
        "text": " skipped",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53899998,
        "text_offset": 90,
        "word_length": 5,
        "text": " over",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 95,
        "word_length": 6,
        "text": " quite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56499998,
        "text_offset": 101,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57599997,
        "text_offset": 103,
        "word_length": 4,
        "text": " few",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58799998,
        "text_offset": 107,
        "word_length": 8,
        "text": " details",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60599999,
        "text_offset": 115,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61799998,
        "text_offset": 118,
        "word_length": 6,
        "text": " speed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65299997,
        "text_offset": 124,
        "word_length": 7,
        "text": " things",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68599998,
        "text_offset": 131,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74599997,
        "text_offset": 134,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 135,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 138,
        "word_length": 3,
        "text": "'re",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 141,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 144,
        "word_length": 6,
        "text": " exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 150,
        "word_length": 10,
        "text": " treatment",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 160,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 164,
        "word_length": 11,
        "text": " definition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 175,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 178,
        "word_length": 7,
        "text": " things",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 185,
        "word_length": 9,
        "text": " referred",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 194,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 197,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 201,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79200000,
        "text_offset": 208,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Again, a lot of new terms are used to make sure everything fits on screen, and we skipped over quite a few details to speed things up. We're in exact treatment and definition of things referred to the thesis.",
    "final_audio": "hawaii-jupiter-video-carbon.mp3"
  },
  {
    "input_text": "So, we have now come to the end of this video. Hopefully you now have a decent grasp of the Banach-Tarski paradox.",
    "input_data": {
      "input_text": "So, we have now come to the end of this video. Hopefully you now have a decent grasp of the Banach-Tarski paradox.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "twelve-ceiling-johnny-avocado.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9399999,
        "text_offset": 0,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11199999,
        "text_offset": 3,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12899999,
        "text_offset": 6,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14599999,
        "text_offset": 11,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16599999,
        "text_offset": 15,
        "word_length": 5,
        "text": " come",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18399999,
        "text_offset": 20,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20199999,
        "text_offset": 23,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22499998,
        "text_offset": 27,
        "word_length": 4,
        "text": " end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 31,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25399999,
        "text_offset": 34,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27199999,
        "text_offset": 39,
        "word_length": 6,
        "text": " video",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 45,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34899999,
        "text_offset": 46,
        "word_length": 10,
        "text": " Hopefully",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34899999,
        "text_offset": 56,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 60,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 65,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 67,
        "word_length": 7,
        "text": " decent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 74,
        "word_length": 6,
        "text": " grasp",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 80,
        "word_length": 4,
        "text": " now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 84,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 87,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 91,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 95,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 98,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39100000,
        "text_offset": 100,
        "word_length": 3,
        "text": "ors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39600000,
        "text_offset": 103,
        "word_length": 2,
        "text": "ky",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39700000,
        "text_offset": 105,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 113,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " So we have now come to the end of this video. Hopefully you have a decent grasp now of the Banach Torsky paradox.",
    "final_audio": "twelve-ceiling-johnny-avocado.mp3"
  },
  {
    "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition.",
    "input_data": {
      "input_text": "To shortly summarize what we have seen in the past chapters: we saw a construction of a 'non-measurable set'; explored the concept of 'paradoxical decompositions'; dove into 'the free group $F_2$' and saw its paradoxical decomposition.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "sink-timing-beryllium-timing.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3599999,
        "text_offset": 0,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5999999,
        "text_offset": 3,
        "word_length": 8,
        "text": " shortly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10200000,
        "text_offset": 11,
        "word_length": 10,
        "text": " summarize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13999999,
        "text_offset": 21,
        "word_length": 5,
        "text": " what",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16499999,
        "text_offset": 26,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17499999,
        "text_offset": 29,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18799999,
        "text_offset": 34,
        "word_length": 5,
        "text": " seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21399999,
        "text_offset": 39,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22599998,
        "text_offset": 42,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24199999,
        "text_offset": 46,
        "word_length": 5,
        "text": " past",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25999999,
        "text_offset": 51,
        "word_length": 9,
        "text": " chapters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31999999,
        "text_offset": 60,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 61,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39099999,
        "text_offset": 64,
        "word_length": 4,
        "text": " saw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 68,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199998,
        "text_offset": 70,
        "word_length": 13,
        "text": " construction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41899999,
        "text_offset": 83,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42699998,
        "text_offset": 86,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43299998,
        "text_offset": 88,
        "word_length": 4,
        "text": " non",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 92,
        "word_length": 1,
        "text": "-",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 93,
        "word_length": 2,
        "text": "me",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48999998,
        "text_offset": 95,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52399997,
        "text_offset": 97,
        "word_length": 6,
        "text": "urable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55999999,
        "text_offset": 103,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60999999,
        "text_offset": 107,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66299998,
        "text_offset": 108,
        "word_length": 9,
        "text": " explored",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67999999,
        "text_offset": 117,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70599997,
        "text_offset": 121,
        "word_length": 8,
        "text": " concept",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73699998,
        "text_offset": 129,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74099998,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75599999,
        "text_offset": 134,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77199997,
        "text_offset": 142,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79399998,
        "text_offset": 146,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91999998,
        "text_offset": 160,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94499998,
        "text_offset": 161,
        "word_length": 5,
        "text": " dove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99199995,
        "text_offset": 166,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100700001,
        "text_offset": 171,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103199996,
        "text_offset": 175,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104099998,
        "text_offset": 180,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106300001,
        "text_offset": 186,
        "word_length": 2,
        "text": " F",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109699997,
        "text_offset": 188,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110499997,
        "text_offset": 189,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 190,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 194,
        "word_length": 4,
        "text": " saw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 198,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 202,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 210,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 214,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111400000,
        "text_offset": 228,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " To shortly summarize what we have seen in the past chapters, we saw a construction of a non-measurable set, explored the concept of a paradoxical decomposition, dove into the free group F2, and saw its paradoxical decomposition.",
    "final_audio": "sink-timing-beryllium-timing.mp3"
  },
  {
    "input_text": "We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$.",
    "input_data": {
      "input_text": "We then proved the 'Banach-Tarski paradox': we passed on the paradoxical decomposition from the free group to the sphere $S^2$ - except a countable set of fixed points $D$.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "nebraska-zulu-whiskey-earth.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3399999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9499999,
        "text_offset": 3,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 8,
        "word_length": 7,
        "text": " proved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 15,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10499999,
        "text_offset": 19,
        "word_length": 4,
        "text": " Ban",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 23,
        "word_length": 3,
        "text": "ach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 2,
        "text": " T",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21999999,
        "text_offset": 28,
        "word_length": 3,
        "text": "ars",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29999998,
        "text_offset": 31,
        "word_length": 2,
        "text": "ki",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30099998,
        "text_offset": 33,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599998,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32699998,
        "text_offset": 42,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34699999,
        "text_offset": 45,
        "word_length": 7,
        "text": " passed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35099998,
        "text_offset": 52,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35899999,
        "text_offset": 55,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36299998,
        "text_offset": 59,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38600000,
        "text_offset": 67,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 71,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44399998,
        "text_offset": 85,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45199999,
        "text_offset": 90,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 94,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 99,
        "word_length": 6,
        "text": " group",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 105,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 108,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 112,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 119,
        "word_length": 2,
        "text": " s",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 121,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 122,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 123,
        "word_length": 7,
        "text": " except",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 130,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 132,
        "word_length": 12,
        "text": " comfortable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 144,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 148,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 151,
        "word_length": 6,
        "text": " fixed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 157,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 164,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 166,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We then proved the Banach Tarski paradox. We passed on the paradoxical decomposition from the free group to the sphere s2, except a comfortable set of fixed points d.",
    "final_audio": "nebraska-zulu-whiskey-earth.mp3"
  },
  {
    "input_text": "Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball.",
    "input_data": {
      "input_text": "Then we found a way to add that set $D$ back into the paradoxical decomposition, after which we found a way to expand the decomposition from the sphere to the ball.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "green-dakota-nitrogen-equal.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5000000,
        "text_offset": 0,
        "word_length": 5,
        "text": " Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7399999,
        "text_offset": 5,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8700000,
        "text_offset": 8,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10199999,
        "text_offset": 14,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 16,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13799999,
        "text_offset": 20,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15799999,
        "text_offset": 23,
        "word_length": 4,
        "text": " add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18199999,
        "text_offset": 27,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799998,
        "text_offset": 32,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22199999,
        "text_offset": 36,
        "word_length": 2,
        "text": " d",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 38,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 43,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30199998,
        "text_offset": 48,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31699999,
        "text_offset": 52,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 60,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39199999,
        "text_offset": 67,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46799998,
        "text_offset": 81,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 82,
        "word_length": 6,
        "text": " after",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 88,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 94,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 97,
        "word_length": 6,
        "text": " found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 103,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 105,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 109,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 112,
        "word_length": 7,
        "text": " expand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 119,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 123,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 137,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 142,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 146,
        "word_length": 7,
        "text": " sphere",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 153,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 156,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 160,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 165,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " Then we found a way to add that set d back into the paradox called decomposition, after which we found a way to expand the decomposition from the sphere to the ball.",
    "final_audio": "green-dakota-nitrogen-equal.mp3"
  },
  {
    "input_text": "We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
    "input_data": {
      "input_text": "We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball $B^3$.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "hotel-speaker-west-sixteen.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5999999,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 3,
        "word_length": 8,
        "text": " finally",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15299999,
        "text_offset": 11,
        "word_length": 6,
        "text": " added",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17199999,
        "text_offset": 17,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19299999,
        "text_offset": 21,
        "word_length": 7,
        "text": " origin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22799998,
        "text_offset": 28,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24099999,
        "text_offset": 31,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 35,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31799999,
        "text_offset": 49,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34999998,
        "text_offset": 52,
        "word_length": 7,
        "text": " finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37099999,
        "text_offset": 59,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38899999,
        "text_offset": 63,
        "word_length": 8,
        "text": " paradox",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 71,
        "word_length": 4,
        "text": "ical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44199998,
        "text_offset": 75,
        "word_length": 14,
        "text": " decomposition",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52200000,
        "text_offset": 89,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55499999,
        "text_offset": 92,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57399997,
        "text_offset": 96,
        "word_length": 5,
        "text": " unit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59899997,
        "text_offset": 101,
        "word_length": 5,
        "text": " ball",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61299998,
        "text_offset": 106,
        "word_length": 2,
        "text": " B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199997,
        "text_offset": 108,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67099997,
        "text_offset": 109,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We finally added the origin to the decomposition to finish the paradoxical decomposition of the unit ball B3.",
    "final_audio": "hotel-speaker-west-sixteen.mp3"
  },
  {
    "input_text": "It is also possible to generalize this result, which is shown in the thesis.",
    "input_data": {
      "input_text": "It is also possible to generalize this result, which is shown in the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "fish-edward-lake-connecticut.mp3",
    "word_boundaries": [
      {
        "audio_offset": 4099999,
        "text_offset": 0,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 3,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8599999,
        "text_offset": 6,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10099999,
        "text_offset": 11,
        "word_length": 9,
        "text": " possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11899999,
        "text_offset": 20,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13199999,
        "text_offset": 23,
        "word_length": 8,
        "text": " general",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16299999,
        "text_offset": 31,
        "word_length": 3,
        "text": "ize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18599999,
        "text_offset": 34,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "text_offset": 39,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25499999,
        "text_offset": 46,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26699999,
        "text_offset": 47,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27799998,
        "text_offset": 53,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29499999,
        "text_offset": 56,
        "word_length": 6,
        "text": " shown",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32999998,
        "text_offset": 62,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35199998,
        "text_offset": 65,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36399999,
        "text_offset": 69,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39899998,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " It is also possible to generalize this result, which is shown in the thesis.",
    "final_audio": "fish-edward-lake-connecticut.mp3"
  },
  {
    "input_text": "This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations.",
    "input_data": {
      "input_text": "This general result shows that you can transform any bounded set with interior points into any other such set with finite Euclidean transformations.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "network-south-lion-lima.mp3",
    "word_boundaries": [
      {
        "audio_offset": 3200000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 5,
        "word_length": 8,
        "text": " general",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "text_offset": 13,
        "word_length": 7,
        "text": " result",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11999999,
        "text_offset": 20,
        "word_length": 6,
        "text": " shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15499999,
        "text_offset": 26,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16999999,
        "text_offset": 31,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18999999,
        "text_offset": 35,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21499999,
        "text_offset": 39,
        "word_length": 10,
        "text": " transform",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25599999,
        "text_offset": 49,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28199999,
        "text_offset": 53,
        "word_length": 8,
        "text": " bounded",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799998,
        "text_offset": 61,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34799998,
        "text_offset": 65,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37999999,
        "text_offset": 70,
        "word_length": 9,
        "text": " interior",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41599998,
        "text_offset": 79,
        "word_length": 7,
        "text": " points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 86,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 91,
        "word_length": 4,
        "text": " any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 95,
        "word_length": 6,
        "text": " other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 101,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 105,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 110,
        "word_length": 7,
        "text": " finite",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 117,
        "word_length": 2,
        "text": " E",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 119,
        "word_length": 2,
        "text": "uc",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 121,
        "word_length": 4,
        "text": "lide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 125,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 127,
        "word_length": 16,
        "text": " transformations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "text_offset": 143,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This general result shows that you can transform any bounded set with interior points into any other set with finite Euclidean transformations.",
    "final_audio": "network-south-lion-lima.mp3"
  },
  {
    "input_text": "If that sounds interesting, make sure to read the thesis.",
    "input_data": {
      "input_text": "If that sounds interesting, make sure to read the thesis.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "mango-kansas-network-grey.mp3",
    "word_boundaries": [
      {
        "audio_offset": 2699999,
        "text_offset": 0,
        "word_length": 3,
        "text": " If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5099999,
        "text_offset": 3,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6999999,
        "text_offset": 8,
        "word_length": 7,
        "text": " sounds",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8999999,
        "text_offset": 15,
        "word_length": 12,
        "text": " interesting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11200000,
        "text_offset": 27,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13100000,
        "text_offset": 30,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15399999,
        "text_offset": 34,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17299999,
        "text_offset": 35,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18499999,
        "text_offset": 40,
        "word_length": 5,
        "text": " sure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19799999,
        "text_offset": 45,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 48,
        "word_length": 5,
        "text": " read",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23099999,
        "text_offset": 53,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25199998,
        "text_offset": 57,
        "word_length": 7,
        "text": " thesis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26799999,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " If that sounds interesting to you, make sure to read the thesis.",
    "final_audio": "mango-kansas-network-grey.mp3"
  }
]